{"title":"Linux操作系统安装与初始化-klsday1","uid":"1ba43bdcc650ffe3bf369917c92785d4","slug":"klsday1-Linux","date":"2023-05-11T01:03:45.132Z","updated":"2023-05-11T14:12:29.862Z","comments":true,"path":"api/articles/klsday1-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-l8yj8p.png","content":"<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511090922257.png\" alt=\"image-20230511090922257\"></p>\n<h3 id=\"Linux发行版\"><a href=\"#Linux发行版\" class=\"headerlink\" title=\"Linux发行版\"></a>Linux发行版</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511091105606.png\" alt=\"image-20230511091105606\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511092618239.png\" alt=\"image-20230511092618154\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511092834808.png\" alt=\"image-20230511092834808\"></p>\n<p>查看系统内核</p>\n<p><code>unamne -r</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[abyssaler@centos7kls-aby ~]$ uname -r\n3.10.0-1160.el7.x86_64</code></pre>\n\n<p><code>uname -a</code> 看的信息更全面</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[abyssaler@centos7kls-aby ~]$ uname -a\nLinux centos7kls-aby 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU&#x2F;Linux</code></pre>\n\n<h3 id=\"安装Centos系统\"><a href=\"#安装Centos系统\" class=\"headerlink\" title=\"安装Centos系统\"></a>安装Centos系统</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511093545051.png\" alt=\"image-20230511093545051\"></p>\n<p>新知识点：<a href=\"https://blog.csdn.net/shallow72/article/details/127720078\">批量部署</a></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511093925052.png\" alt=\"image-20230511093925052\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">第一个：直接安装\n第二个：检查光盘完整性，并且安装\n第三个：修复模式</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511095421422.png\" alt=\"image-20230511095421422\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511094822173.png\" alt=\"image-20230511094822173\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511095021776.png\" alt=\"image-20230511095021776\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511095113663.png\" alt=\"image-20230511095113663\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511095607764.png\" alt=\"image-20230511095607764\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511101230989.png\" alt=\"image-20230511101230989\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511095646050.png\" alt=\"image-20230511095646050\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511101209397.png\" alt=\"image-20230511101209397\"></p>\n<p>kdump开启会额外消耗一部分内存来保存系统崩溃的线索，线下装服务器的时候推荐打开，虚拟机无所谓</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511095938530.png\" alt=\"image-20230511095938530\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511101822566.png\" alt=\"image-20230511101822566\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511102403411.png\" alt=\"image-20230511102403411\"></p>\n<p>交换分区：相当于虚拟内存</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511103202047.png\" alt=\"image-20230511103202047\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511103406571.png\" alt=\"image-20230511103406571\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511104604732.png\" alt=\"image-20230511104604732\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511104803053.png\" alt=\"image-20230511104803053\"></p>\n<h3 id=\"磁盘介绍\"><a href=\"#磁盘介绍\" class=\"headerlink\" title=\"磁盘介绍\"></a>磁盘介绍</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511105135613.png\" alt=\"image-20230511105135613\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511110323259.png\" alt=\"image-20230511110323259\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511110823556.png\" alt=\"image-20230511110823556\"></p>\n<p>这种mbr的结构主分区最多分4个，如果超过了，就需要扩展分区里设置逻辑分区</p>\n<p>主分区的序号一般是1-4，逻辑分区的序号是从5开始的，上限是依据操作系统限制的</p>\n<h3 id=\"文件系统\"><a href=\"#文件系统\" class=\"headerlink\" title=\"文件系统\"></a>文件系统</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511111412540.png\" alt=\"image-20230511111412540\"></p>\n<p>查看Linux支持及哪些文件系统</p>\n<p><code>ls -l /lib/modules/(按TAB自动补全)/kernel/fs/</code></p>\n<p><code>cat /proc/filesystems</code></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511133311258.png\" alt=\"image-20230511133311258\"></p>\n<p>首先讲下inode和块的基本概念。在Linux系统中，文件由元数据和数据块组成。数据块就是多个连续性的扇区（sector），扇区是文件存储的最小单位（每个512字节）。块（block）的大小，最常见的是4KB，也就是连续8个sector组成，存储文件数据和目录数据。而元数据用来记录文件的创建者、创建日期、大小等，这种存储文件元数据信息的区域叫做inode，即索引节点。</p>\n<p>由于inode也是用来存储文件相关属性信息的，所以也会消耗硬盘空间。具体包含的信息有inode号，文件的字节数、User ID、Group ID、读、写、执行权限、时间戳（共有三个：ctime指inode上一次变动的时间，mtime指文件内容上一次变动的时间，atime指文件上一次打开的时间）、链接数（软硬链接）、数据block的位置，注意没有文件名。</p>\n<p>在硬盘格式化的时候，操作系统就会将硬盘分为两个区，即数据区和inode区。每个inode节点的大小一般为128B或者256B，inode的总数在格式化文件系统的时候就已经确定。</p>\n<p>另外还有几个概念了解一下：</p>\n<p><code>inode Bitmap</code>：即inode位图，用二进制的方式记录了inode的使用情况， 比如inode是否空闲等。</p>\n<p><code>Block Bitmap</code>：即块位图，同Inode Bitmap，用二进制方式记录了块的使用情况。当查找或创建文件时，会扫描此位图来寻找空闲的inode号对应的块。</p>\n<p><code>super block</code>：超级块包含了该硬盘或分区上的文件系统的整体信息，如文件系统的大小等。</p>\n<p><code>dentry</code>：在内核中起到了连接不同的文件对象inode的作用，进而起到了维护文件系统目录树的作用。dentry是一个纯粹的内存结构，由文件系统在提供文件访问的过程中在内存中直接建立。dentry中包含了文件名，文件的inode号等信息。</p>\n<p><code>stat 文件名</code> 可以显示文件或文件系统的状态</p>\n<p>下图为文件系统inode区block区图：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511135106979.png\" alt=\"image-20230511135106979\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511135311625.png\" alt=\"image-20230511135311625\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511221016958.png\" alt=\"image-20230511221016958\"></p>\n<p><strong>读取过程</strong></p>\n<ol>\n<li>首先根目录（目录也是个文件，不是容器！也可以理解为路径的映射表）会自引用。找到inode表中对应的条目。（暂且把inode表中inode号和其对应的块信息成为条目）</li>\n<li>inode表中对应的信息指向根目录对应的块，其中有var目录对应的信息和inode号。</li>\n<li>系统根据var目录inode号回头找到inode表中var目录其对应的条目。</li>\n<li>根据var目录对应的块信息找到对应的块，其中有log目录对应的信息和inode号。</li>\n<li>系统又根据log目录inode号在inode表中找到其对应的条目。</li>\n<li>根据log目录对应的块信息找到对应的块，其中有messages文件。</li>\n<li>根据messages文件的inode号在inode表中找到其对应的条目。</li>\n<li>最后系统根据messages对应的条目信息告诉我们messages文件对应了多少的块，最后给我们呈现的就是所看到的数据。</li>\n</ol>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511140346537.png\" alt=\"image-20230511140346537\"></p>\n<p><strong>创建过程</strong></p>\n<ol>\n<li>首先扫描inode位图，找空闲的inode号，找到之后占用。</li>\n<li>根目录自引用找到inode表中对应的条目，并根据条目找到对应的块。</li>\n<li>依据根目录对应的块中backup目录对应的inode号，回头找到inode表中条目。</li>\n<li>inode表中条目又找到对应的块，在这个块的dentry中新建了一个文件test.txt。</li>\n<li>然后在最开始扫描占用的inode号给到此test.txt文件。</li>\n</ol>\n<p>当要存数据给test.txt文件时，会进行如下：</p>\n<p>系统扫描块位图（加速查找磁盘空闲块，记录是否空闲等），找到空闲块，分配大于数据大小的块，最后再回收（避免磁盘碎片）。比如要创建10k大小的test.txt文件，一个块4k，只需要3个块，系统分配4个或者多于，最后再去把这多余的块分配到空闲块中等待使用。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511140809490.png\" alt=\"image-20230511140809490\"></p>\n<p><strong>删除</strong></p>\n<p>当要删除一个文件时，其实就是把其使用的block位图标记为空闲，inode位图的相关位置成空，相当于不被占用，系统就认为此文件删除。但是数据还在，在下次创建文件时，就可覆盖原已清空block位图和inode位图的文件的数据。</p>\n<p>文件粉粹也只是使用一些随机数据填充进原来文件的数据块中，导致文件难以恢复。</p>\n<h3 id=\"初始化centos7系统\"><a href=\"#初始化centos7系统\" class=\"headerlink\" title=\"初始化centos7系统\"></a>初始化centos7系统</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511172327860.png\" alt=\"image-20230511172327860\"></p>\n<p>关闭防火墙：<code>systemctl stop firewalld.service</code></p>\n<p>查看防火墙状态：<code>systemctl status firewalld.service</code></p>\n<p>关闭开机自启防火墙：<code>systemctl disable firewalld.service</code></p>\n<p>关闭selinux： <code>vim /etc/sysconfig/selinux</code>，把<code>SELINUX</code>改成<code>disabled</code>，或者改<code>etc/selinux/config</code>，一样的步骤</p>\n<p>然后重启</p>\n<p>查看selinux状态：<code>getenforce</code>，或者<code>/usr/sbin/sestatus -v</code>，或者<code>sestatus -v</code></p>\n<h3 id=\"Linux系统引导过程\"><a href=\"#Linux系统引导过程\" class=\"headerlink\" title=\"Linux系统引导过程\"></a>Linux系统引导过程</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511153955368.png\" alt=\"image-20230511153955368\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511155057848.png\" alt=\"image-20230511155057848\"></p>\n<p><strong>开机自检</strong>：服务器主机开机以后，将根据主板BIOS中的设置对CPU、内存、显卡、键盘等设备进行初步检测，检测成功后根据预设的启动顺序移交系统控制权，大多时候会移交给本机硬盘。</p>\n<p>总结：检测出第一个能够引导系统的设备，比如硬盘或者光驱</p>\n<p> <strong>mbr引导</strong>：当从本机硬盘中启动系统时，首先根据硬盘第一个扇区中MBR（主引导记录）的设置，将系统控制权传递给包含操作系统引导文件的分区；或者直接根据MBR 记录中的引导信息调用启动菜单（如 GRUB）。</p>\n<p>可以通过<code>hexdump -C -n 512 /dev/sda</code>查看前512字节</p>\n<p>总结：运行放在MBR扇区里的启动GRUB引导程序</p>\n<p><strong>GRUB 菜单</strong>：对于Linux操作系统来说，GRUB（统一启动加载器）是使用最为广泛的多系统引导器程序。系统控制权传递给GRUB以后，将会显示启动菜单给用户选择，并根据所选项（或采用默认值）加载Linux内核文件，然后将系统控制权转交给内核。</p>\n<p>CentOS 7 采用的是 GRUB2 启动引导器。</p>\n<p>总结：GRUB引导程序通过读取<strong>GRUB配置文件</strong>&#x2F;boot&#x2F;grub2&#x2F;grub.cfg，来<strong>获取内核和镜像文件系统的设置和路径位置</strong>，<strong>grub.cfg</strong>必须记</p>\n<p><strong>加载 Linux 内核</strong>：Linux内核是一个预先编译好的特殊二进制文件，介于各种硬件资源与系统程序之间，负责资源分配与调度。内核接过系统控制权以后，将完全掌控整个Linux操作系统的运行过程。</p>\n<p>CentOS 7系统中，默认的内核文件位于<code>/boot/vmlinuz-3.10.0-514.el7.x86_64</code></p>\n<p>总结：把内核和镜像文件系统加载到内存中</p>\n<p><strong>init 进程初始化</strong>：为了完成进一步的系统引导过程，Linux内核首先将系统中的“&#x2F;sbin&#x2F;init”程序加载到内存中运行（运行中的程序称为进程），init 进程负责完成整个系统的初始化，最后等待用户进行登录。</p>\n<p>总结：加载硬件驱动程序，内核把init进程加载到内存中运行</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511155358401.png\" alt=\"image-20230511155358401\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511160218744.png\" alt=\"image-20230511160218744\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511160757732.png\" alt=\"image-20230511160757732\"></p>\n<p>systemd启动时会默认启动default.target配置，并且递归的处理它的依赖关系，一般这个配置为<code>graphical.target </code>或者 <code>multi-user.target</code>。第一种会启动图形界面，第二种会启动多用户字符模式。</p>\n<p>下面将简单介绍启动中的4个关键步骤：</p>\n<p><strong>第一步</strong><br>systemd 执行默认target 配置，配置文件<code>/etc/systemd/system/default.target</code>，它一般是一个软链接，指向multi-user.target或者graphical.target。可以通过如下命令查询和修改default.target:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">systemctl get-default #查询\nsystemctl set-default multi-user.target #设置</code></pre>\n\n<p><strong>第二步</strong><br>systemd 执行启动所依赖的目标basic.target和sysinit.target初始化系统<br>通过查看cat &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;default.target查看依赖：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"> 8 [Unit]\n 9 Description&#x3D;Multi-User System\n10 Documentation&#x3D;man:systemd.special(7)\n11 Requires&#x3D;basic.target\n12 Conflicts&#x3D;rescue.service rescue.target\n13 After&#x3D;basic.target rescue.service rescue.target\n14 AllowIsolate&#x3D;yes</code></pre>\n\n<p>After指定的target需要在default.target之前运行。</p>\n<p><strong>第三步</strong><br>systemd 启动multi-user.target 下的本机与服务器服务，由于default.target指向multi-user.target，那么这一步就启动对应的target服务。它的服务存在于 <code>/etc/systemd/system/multi-user.target.wants</code> 目录中：</p>\n<p><strong>第四步</strong><br>systemd 执行multi-user.target 下的<code>/etc/rc.d/rc.local</code>。systemd是可以兼容systemv init中的rc.local配置的，通过rc-local.service来实现兼容的，systemd在启动的很早就会判断&#x2F;etc&#x2F;rc.local是否存在并且是可执行的，如果满足条件，那么systemd会调用<code>/usr/lib/systemd/system-generators/</code>下面的小程序来把rc-local.service服务加入到default.target中来。这样在后面的执行时就会触发rc.local的运行：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[Unit]\nDescription&#x3D;&#x2F;etc&#x2F;rc.d&#x2F;rc.local Compatibility\nConditionFileIsExecutable&#x3D;&#x2F;etc&#x2F;rc.d&#x2F;rc.local\nAfter&#x3D;network.target\n\n[Service]\nType&#x3D;simple\nExecStart&#x3D;&#x2F;etc&#x2F;rc.d&#x2F;rc.local start\nTimeoutStartSec&#x3D;0\nTimeoutStopSec&#x3D;1\nRemainAfterExit&#x3D;yes</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511161057814.png\" alt=\"image-20230511161057814\"></p>\n<p>systemd比init更好</p>\n<p>以前的Linux启动都是用init进程。启动服务：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ sudo &#x2F;etc&#x2F;init.d&#x2F;apache2 start\n# 或者\n$ service apache2 start</code></pre>\n\n<p>缺点：</p>\n<ul>\n<li>启动时间长。init进程是串行启动，只有前一个进程启动完，才会启动下一个进程。</li>\n<li>启动脚本复杂。init进程只是执行启动脚本，不管其他事情。脚本需要自己处理各种情况，这往往使得脚本变得很长。</li>\n</ul>\n<p>在较新的linux系统上，都使用systemd 取代了init，成为系统的第一个进程（PID 等于 1），其他进程都是它的子进程。systemd为系统启动和管理提供了完整的解决方案。它提供了一组命令。字母d是守护进程（daemon）的缩写。查看systemd 的版本<code>systemctl --version</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>systemd和init的具体区别可参考：</p>\n<p><a href=\"https://blog.csdn.net/zhizhengguan/article/details/111653573\">https://blog.csdn.net/zhizhengguan/article/details/111653573</a></p></blockquote>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511161634997.png\" alt=\"image-20230511161634997\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511162155110.png\" alt=\"image-20230511162155110\"></p>\n<p>切换到字符页面<code>systemctl isolate multi-user.target</code></p>\n<p>切换到图形界面<code>systemctl isolate graphical.target</code></p>\n<h3 id=\"Linux系统管理工具\"><a href=\"#Linux系统管理工具\" class=\"headerlink\" title=\"Linux系统管理工具\"></a>Linux系统管理工具</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511162420384.png\" alt=\"image-20230511162420384\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511162830071.png\" alt=\"image-20230511162830071\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">显示运行级别：\n\n[root@centos7kls-aby abyssaler]# runlevel\nN 5\nN：表示之前运行的级别    5：表示当前运行的级别\n\n[root@centos7kls-aby system]# who -r\n         run-level 5  2023-05-11 15:06\n\n[root@centos7kls-aby system]# systemctl get-default\ngraphical.target</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">切换默认运行级别：\nsystemctl set-default graphical.target  &#x2F;&#x2F;设置默认为图形化\nsystemctl set-default multi-user.target  &#x2F;&#x2F;设置默认为字符界面</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511164522573.png\" alt=\"image-20230511164522573\"></p>\n<p><code>ntsysv</code></p>\n<p>但是ntsysv没有systemctl好用</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511164932610.png\" alt=\"image-20230511164932610\"></p>\n<p><strong>针对系统的配置文件，服务文件，在做修改前一定要先备份</strong></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511165615971.png\" alt=\"image-20230511165615971\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511165634819.png\" alt=\"image-20230511165634819\"></p>\n<p>systemctl涉及到的单元的文件存放系统服务的路径（按优先级排序）：</p>\n<p><code>/etc/systemd/system</code></p>\n<p><code>/run/systemd/system</code></p>\n<p><code>/usr/lib/systemd/system</code></p>\n<p>这三个目录中任意一个的文件都可以用<code>systemctl</code>来进行操作</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511165654559.png\" alt=\"image-20230511165654559\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230511165811389.png\" alt=\"image-20230511165811389\"></p>\n<p>查看系统启用了哪些服务</p>\n<p><code>systemctl list-unit-files --type=service</code></p>\n","text":" Linux发行版 查看系统内核 unamne -r [abyssaler@centos7kls-aby ~]$ uname -r 3.10.0-1160.el7.x86_64 uname -a 看的信息更全面 [abyssaler@centos7kls-aby ~]$ unam...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":20,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":8,"path":"api/tags/kls.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E5%8F%91%E8%A1%8C%E7%89%88\"><span class=\"toc-text\">Linux发行版</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Centos%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">安装Centos系统</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A3%81%E7%9B%98%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">磁盘介绍</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">文件系统</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96centos7%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">初始化centos7系统</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E7%B3%BB%E7%BB%9F%E5%BC%95%E5%AF%BC%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">Linux系统引导过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">Linux系统管理工具</span></a></li></ol>","author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Linux常用命令-klsday2","uid":"143a290a264195c37b7dbed6ffb5a1a7","slug":"klsday2-Linux","date":"2023-05-12T00:58:39.304Z","updated":"2023-05-13T11:25:52.291Z","comments":true,"path":"api/articles/klsday2-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-qzrmrl.png","text":" shell Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。Shell 既是一种命令语言，又是一种程序设计语言。 Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。 Ken Thompson 的 sh ...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":20,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":8,"path":"api/tags/kls.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}},"next_post":{"title":"hvv猴子的基本修养","uid":"d15f0aacce8c38a896ba8374b8a2f215","slug":"hvv蓝队常用命令（Linux）","date":"2023-04-23T10:40:02.636Z","updated":"2023-05-25T08:27:29.546Z","comments":true,"path":"api/articles/hvv蓝队常用命令（Linux）.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-x66olo.jpg","text":"前言记录一下最近学到的在护网中蓝队必备的，以及一些能提高工作效率的Linux命令 必备篇mkdir这个自然不必多说了 mkdir命令用于创建目录 参数 -p 创建多级目录,若目录不存在则新建一个 mkdir -p hvv&#x2F;blue lsls用于限制指定目录下的内容 参数...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":20,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"蓝队","slug":"蓝队","count":2,"path":"api/tags/蓝队.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}}}