{"title":"Linux磁盘与进程管理-klsday4","uid":"3b6be56f4cef15238aa0c1509a18a652","slug":"klsday4-Linux","date":"2023-05-16T00:53:58.261Z","updated":"2023-06-09T12:15:30.317Z","comments":true,"path":"api/articles/klsday4-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-6dl2yw.png","content":"<p>首先关闭虚拟机，在VMware中给虚拟机加几块新的硬盘</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230516091743009.png\" alt=\"image-20230516091743009\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230516093403130.png\" alt=\"image-20230516093403130\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230516093804453.png\" alt=\"image-20230516093804453\"></p>\n<h2 id=\"Linux磁盘和文件系统管理\"><a href=\"#Linux磁盘和文件系统管理\" class=\"headerlink\" title=\"Linux磁盘和文件系统管理\"></a>Linux磁盘和文件系统管理</h2><h3 id=\"管理磁盘全流程\"><a href=\"#管理磁盘全流程\" class=\"headerlink\" title=\"管理磁盘全流程\"></a>管理磁盘全流程</h3><p>查看信息</p>\n<p><code>ll /dev/sd*</code></p>\n<p><code>lsblk</code>  # 列出块状设备</p>\n<p>创建分区</p>\n<p><code>fidsk /dev/sdb</code> # 具体创建流程看下面</p>\n<p><code>partprobe /dev/sdb</code>  # 刷新分区表</p>\n<p><code>fdisk -l /dev/sdb</code>  # 展示分区信息</p>\n<p>创建文件系统（格式化）</p>\n<p><code>mkfs.ext4 /dev/sdb1</code>  # 格式化第二块串口硬盘的第一个分区</p>\n<p>挂载</p>\n<p><code>mount -t ext4 /dev/sdb1 /mnt/disk1</code></p>\n<p>查看挂载信息</p>\n<p><code>df -hT</code></p>\n<p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p>\n<p>LVM</p>\n<p><code>pvcreate /dev/sdf</code>  # 创建物理卷</p>\n<p><code>vgcreate vg1 /dev/sdf </code>  # 在物理卷 <code>/dev/sdf</code> 上创建一个名为 <code>vg1</code> 的卷组</p>\n<p><code>lvcreate -L 5G -n lv1 vg1</code>  # 创建名为 <code>lv1</code> 的逻辑卷，该逻辑卷大小为 5G，属于卷组 <code>vg1</code></p>\n<p><code>mkfs.ext4 /dev/vg1/lv1</code></p>\n<p><code>mkdir /mnt/lv1</code></p>\n<p><code>mount /dev/vg1/lv1 /mnt/lv1</code></p>\n<p><code>dd if=/dev/zero of=/mnt/lv1/1.txt bs=1M count=5000</code>   # 测试</p>\n<p><code>vgextend vg1 /dev/sdg</code>  # 将物理卷 <code>/dev/sdd1</code> 添加到卷组 <code>vg1</code> 中</p>\n<p><code>vgs</code>  # 查看空间</p>\n<p><code>lvextend -L +4G  /dev/vg1/lv1</code></p>\n<p><code>resize2fs /dev/vg1/lg1</code>  # 执行该命令后，<code>/dev/vg1/lg1</code> 逻辑卷上的文件系统大小将被扩大或缩小到逻辑卷的新大小。</p>\n<p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p>\n<p>交换分区管理（swap）</p>\n<p>fdisk中将类型设置为82（其实不设，按照下面的操作也可以）</p>\n<p><code>mkswap /dev/sdb2</code></p>\n<p><code>swapon /dev/sdb2</code>   # 挂到交换分区</p>\n<h3 id=\"fdisk\"><a href=\"#fdisk\" class=\"headerlink\" title=\"fdisk\"></a>fdisk</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230516093928832.png\" alt=\"image-20230516093928832\"></p>\n<p><code>fdisk</code> 命令是一个在 Linux 操作系统中用于分区的命令行工具，可以用来查看、创建、修改和删除磁盘分区。以下是 <code>fdisk</code> 命令的一些常用选项和用法：</p>\n<p>列出当前系统上所有磁盘及其分区信息：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">fdisk -l</code></pre>\n\n<p>选择要分区的磁盘：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">fdisk &#x2F;dev&#x2F;sda   # 将 &#x2F;dev&#x2F;sda 磁盘作为例子</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">列出当前磁盘的分区情况：p\n创建新分区：n\n删除分区：d\n查看帮助文档：m\n保存并退出：w</code></pre>\n\n<p><code>fdisk</code> 命令进行分区时会对磁盘进行操作，因此请务必谨慎操作以防误操作造成数据丢失。在执行分区操作之前，请先备份重要数据，以免不必要的损失。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230516103151982.png\" alt=\"image-20230516103151982\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@centos7kls-aby ~]# fdisk &#x2F;dev&#x2F;sdb\n\nCommand (m for help): n\nPartition type:\n   p   primary (0 primary, 0 extended, 4 free)\n   e   extended\nSelect (default p): p\nPartition number (1-4, default 1): 1\nFirst sector (2048-4194303, default 2048): 2048\nLast sector, +sectors or +size&#123;K,M,G&#125; (2048-4194303, default 4194303): +250M\nPartition 1 of type Linux and of size 250 MiB is set\n\nCommand (m for help): n\nPartition type:\n   p   primary (1 primary, 0 extended, 3 free)\n   e   extended\nSelect (default p): p\nPartition number (2-4, default 2): 2\nFirst sector (514048-4194303, default 514048): 514040\nValue out of range.\nFirst sector (514048-4194303, default 514048): 514048\nLast sector, +sectors or +size&#123;K,M,G&#125; (514048-4194303, default 4194303): +250M\nPartition 2 of type Linux and of size 250 MiB is set\n\nCommand (m for help): n\nPartition type:\n   p   primary (2 primary, 0 extended, 2 free)\n   e   extended\nSelect (default p): e\nPartition number (3,4, default 3): 3\nFirst sector (1026048-4194303, default 1026048): 1026048\nLast sector, +sectors or +size&#123;K,M,G&#125; (1026048-4194303, default 4194303): 4194303\nPartition 3 of type Extended and of size 1.5 GiB is set\n\nCommand (m for help): p\n\nDisk &#x2F;dev&#x2F;sdb: 2147 MB, 2147483648 bytes, 4194304 sectors\nUnits &#x3D; sectors of 1 * 512 &#x3D; 512 bytes\nSector size (logical&#x2F;physical): 512 bytes &#x2F; 512 bytes\nI&#x2F;O size (minimum&#x2F;optimal): 512 bytes &#x2F; 512 bytes\nDisk label type: dos\nDisk identifier: 0xbfb2c932\n\n   Device Boot      Start         End      Blocks   Id  System\n&#x2F;dev&#x2F;sdb1            2048      514047      256000   83  Linux\n&#x2F;dev&#x2F;sdb2          514048     1026047      256000   83  Linux\n&#x2F;dev&#x2F;sdb3         1026048     4194303     1584128    5  Extended\n\nCommand (m for help): n\nPartition type:\n   p   primary (2 primary, 1 extended, 1 free)\n   l   logical (numbered from 5)\nSelect (default p): l\nAdding logical partition 5\nFirst sector (1028096-4194303, default 1028096): 1028096\nLast sector, +sectors or +size&#123;K,M,G&#125; (1028096-4194303, default 4194303): +250M\nPartition 5 of type Linux and of size 250 MiB is set\n\nCommand (m for help): t\nPartition number (1-3,5, default 5): 5\nHex code (type L to list all codes): L\n\n 0  Empty           24  NEC DOS         81  Minix &#x2F; old Lin bf  Solaris        \n 1  FAT12           27  Hidden NTFS Win 82  Linux swap &#x2F; So c1  DRDOS&#x2F;sec (FAT-\n 2  XENIX root      39  Plan 9          83  Linux           c4  DRDOS&#x2F;sec (FAT-\n 3  XENIX usr       3c  PartitionMagic  84  OS&#x2F;2 hidden C:  c6  DRDOS&#x2F;sec (FAT-\n 4  FAT16 &lt;32M      40  Venix 80286     85  Linux extended  c7  Syrinx         \n 5  Extended        41  PPC PReP Boot   86  NTFS volume set da  Non-FS data    \n 6  FAT16           42  SFS             87  NTFS volume set db  CP&#x2F;M &#x2F; CTOS &#x2F; .\n 7  HPFS&#x2F;NTFS&#x2F;exFAT 4d  QNX4.x          88  Linux plaintext de  Dell Utility   \n 8  AIX             4e  QNX4.x 2nd part 8e  Linux LVM       df  BootIt         \n 9  AIX bootable    4f  QNX4.x 3rd part 93  Amoeba          e1  DOS access     \n a  OS&#x2F;2 Boot Manag 50  OnTrack DM      94  Amoeba BBT      e3  DOS R&#x2F;O        \n b  W95 FAT32       51  OnTrack DM6 Aux 9f  BSD&#x2F;OS          e4  SpeedStor      \n c  W95 FAT32 (LBA) 52  CP&#x2F;M            a0  IBM Thinkpad hi eb  BeOS fs        \n e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a5  FreeBSD         ee  GPT            \n f  W95 Ext&#39;d (LBA) 54  OnTrackDM6      a6  OpenBSD         ef  EFI (FAT-12&#x2F;16&#x2F;\n10  OPUS            55  EZ-Drive        a7  NeXTSTEP        f0  Linux&#x2F;PA-RISC b\n11  Hidden FAT12    56  Golden Bow      a8  Darwin UFS      f1  SpeedStor      \n12  Compaq diagnost 5c  Priam Edisk     a9  NetBSD          f4  SpeedStor      \n14  Hidden FAT16 &lt;3 61  SpeedStor       ab  Darwin boot     f2  DOS secondary  \n16  Hidden FAT16    63  GNU HURD or Sys af  HFS &#x2F; HFS+      fb  VMware VMFS    \n17  Hidden HPFS&#x2F;NTF 64  Novell Netware  b7  BSDI fs         fc  VMware VMKCORE \n18  AST SmartSleep  65  Novell Netware  b8  BSDI swap       fd  Linux raid auto\n1b  Hidden W95 FAT3 70  DiskSecure Mult bb  Boot Wizard hid fe  LANstep        \n1c  Hidden W95 FAT3 75  PC&#x2F;IX           be  Solaris boot    ff  BBT            \n1e  Hidden W95 FAT1 80  Old Minix      \nHex code (type L to list all codes): 82\nChanged type of partition &#39;Linux&#39; to &#39;Linux swap &#x2F; Solaris&#39;\n\nCommand (m for help): T\nPartition number (1-3,5, default 5): 1\nHex code (type L to list all codes): b\n\nWARNING: If you have created or modified any DOS 6.xpartitions, please see the fdisk manual page for additionalinformation.\n\nChanged type of partition &#39;Linux&#39; to &#39;W95 FAT32&#39;\n\nCommand (m for help): p\n\nDisk &#x2F;dev&#x2F;sdb: 2147 MB, 2147483648 bytes, 4194304 sectors\nUnits &#x3D; sectors of 1 * 512 &#x3D; 512 bytes\nSector size (logical&#x2F;physical): 512 bytes &#x2F; 512 bytes\nI&#x2F;O size (minimum&#x2F;optimal): 512 bytes &#x2F; 512 bytes\nDisk label type: dos\nDisk identifier: 0xbfb2c932\n\n   Device Boot      Start         End      Blocks   Id  System\n&#x2F;dev&#x2F;sdb1            2048      514047      256000    b  W95 FAT32\n&#x2F;dev&#x2F;sdb2          514048     1026047      256000   83  Linux\n&#x2F;dev&#x2F;sdb3         1026048     4194303     1584128    5  Extended\n&#x2F;dev&#x2F;sdb5         1028096     1540095      256000   82  Linux swap &#x2F; Solaris\n\nCommand (m for help): w\nThe partition table has been altered!\n\nCalling ioctl() to re-read partition table.\nSyncing disks.\n\n[root@centos7kls-aby ~]# partprobe -s\n&#x2F;dev&#x2F;sda: msdos partitions 1 2 3\n&#x2F;dev&#x2F;sdb: msdos partitions 1 2 3 &lt;5&gt;</code></pre>\n\n<h3 id=\"partprobe\"><a href=\"#partprobe\" class=\"headerlink\" title=\"partprobe\"></a>partprobe</h3><p><code>partprobe</code> 命令用于刷新内核中的磁盘分区信息，以便操作系统能够识别并正确地使用新的磁盘分区布局。该命令通常用于在不重启计算机的情况下修改磁盘分区。</p>\n<p>以下是 <code>partprobe</code> 命令的一些常用选项和用法：</p>\n<p>刷新指定设备的磁盘分区信息：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">partprobe &#x2F;dev&#x2F;sda   # 刷新 &#x2F;dev&#x2F;sda 设备的磁盘分区信息</code></pre>\n\n<p>刷新所有设备的磁盘分区信息：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">partprobe -s   # 刷新所有设备的磁盘分区信息，并显示结果</code></pre>\n\n<p>需要注意的是，<code>partprobe</code> 命令不会创建、删除或修改实际的分区表，它只是告诉内核重新读取现有的分区表。因此，在使用 <code>partprobe</code> 命令之前，必须使用其他工具（如 <code>fdisk</code> 或 <code>parted</code>）对分区进行创建、删除或修改操作。</p>\n<h3 id=\"mkfs\"><a href=\"#mkfs\" class=\"headerlink\" title=\"mkfs\"></a>mkfs</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230516104759528.png\" alt=\"image-20230516104759528\"></p>\n<p><code>mkfs</code> 命令用于创建文件系统，可以在 Linux 操作系统中对分区进行格式化操作。它可以用来创建各种不同类型的文件系统，如 ext2、ext3、ext4、xfs 和 btrfs 等。</p>\n<p>以下是 <code>mkfs</code> 命令的一些常用选项和用法：</p>\n<p>格式化指定分区：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkfs.ext4 &#x2F;dev&#x2F;sda1   # 将 &#x2F;dev&#x2F;sda1 分区格式化为 ext4 文件系统</code></pre>\n\n<p>指定文件系统的块大小：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkfs.ext4 -b 4096 &#x2F;dev&#x2F;sda1   # 将 &#x2F;dev&#x2F;sda1 分区格式化为 ext4 文件系统，并设置块大小为 4096 字节</code></pre>\n\n<p>指定 inode 大小：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkfs.ext4 -I 256 &#x2F;dev&#x2F;sda1   # 将 &#x2F;dev&#x2F;sda1 分区格式化为 ext4 文件系统，并设置 inode 大小为 256 字节</code></pre>\n\n<p>指定保留块数：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkfs.ext4 -m 1 &#x2F;dev&#x2F;sda1   # 将 &#x2F;dev&#x2F;sda1 分区格式化为 ext4 文件系统，并设置保留块数为 1%</code></pre>\n\n<p>指定文件系统标签：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkfs.ext4 -L &quot;mydisk&quot; &#x2F;dev&#x2F;sda1   # 将 &#x2F;dev&#x2F;sda1 分区格式化为 ext4 文件系统，并设置文件系统标签为 &quot;mydisk&quot;</code></pre>\n\n<p>列出支持的文件系统类型：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkfs -t    # 列出当前系统支持的所有文件系统类型</code></pre>\n\n<p>强制执行:</p>\n<p><code>mkfs -f</code> 命令是 <code>mkfs</code> 命令的一个选项，用于在格式化时强制执行（force）操作。加上 <code>-f</code> 选项后，<code>mkfs</code> 命令将覆盖文件系统中任何现存的数据而不会提示用户进行确认操作，这意味着执行命令后将无法恢复丢失的数据</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkfs.ext4 -f &#x2F;dev&#x2F;sdb1</code></pre>\n\n<p>需要注意的是，<code>mkfs</code> 命令将会抹掉指定分区上的所有数据，请务必在执行之前做好数据备份。正确地选择文件系统类型和相应的选项对于文件系统的性能和稳定性都至关重要。</p>\n<h3 id=\"mkswap\"><a href=\"#mkswap\" class=\"headerlink\" title=\"mkswap\"></a>mkswap</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230516105632193.png\" alt=\"image-20230516105632193\"></p>\n<p><code>mkswap</code> 命令用于创建或重新初始化 Linux 系统的交换分区。在 Linux 操作系统中，交换分区用于在系统内存不足时暂时储存被临时搁置的数据。当系统需要这些数据时，会将数据从交换分区读回到内存中。</p>\n<p>以下是 <code>mkswap</code> 命令的一些常用选项和用法：</p>\n<p>格式化指定分区为交换分区：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkswap &#x2F;dev&#x2F;sda2   # 将 &#x2F;dev&#x2F;sda2 分区格式化为交换分区</code></pre>\n\n<p>指定交换分区的 UUID：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkswap -U 12345678-1234-5678-9012-345678901234 &#x2F;dev&#x2F;sda2   # 将 &#x2F;dev&#x2F;sda2 分区格式化为交换分区，并设置 UUID</code></pre>\n\n<p>指定交换分区的标签：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkswap -L &quot;my_swap&quot; &#x2F;dev&#x2F;sda2   # 将 &#x2F;dev&#x2F;sda2 分区格式化为交换分区，并设置标签为 &quot;my_swap&quot;</code></pre>\n\n<p>不检查交换分区的合法性：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkswap -f &#x2F;dev&#x2F;sda2   # 将 &#x2F;dev&#x2F;sda2 分区格式化为交换分区，并忽略任何分区格式错误</code></pre>\n\n<p>需要注意的是，<code>mkswap</code> 命令将覆盖指定分区上的所有数据，请务必在执行之前做好数据备份。交换分区的大小应根据系统内存和使用情况进行设置，过小的交换分区可能会导致系统崩溃或者运行缓慢。一般来说，交换分区的大小应该是系统内存的两倍。</p>\n<p><strong>swap扩容的两种方式</strong></p>\n<p>使用未分配的磁盘空间</p>\n<p>如果你的磁盘中还有未分配的空间，可以将其用于扩容 swap 分区。这个过程包括以下步骤：</p>\n<ul>\n<li>使用 fdisk 或 gdisk 命令创建一个新的分区，类型为 Linux swap。</li>\n<li>使用 mkswap 命令将新分区格式化为 swap 文件系统。</li>\n<li>使用 swapon 命令启用新分区作为 swap 分区。</li>\n</ul>\n<p>例如，如果需要将 &#x2F;dev&#x2F;sda3 扩容为 swap 分区：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 创建新的 swap 分区\nsudo fdisk &#x2F;dev&#x2F;sda\n# 格式化新分区为 swap 文件系统\nsudo mkswap &#x2F;dev&#x2F;sda3\n# 启用新分区作为 swap 分区\nsudo swapon &#x2F;dev&#x2F;sda3</code></pre>\n\n\n\n<p>使用文件作为 swap 分区</p>\n<p>如果你的磁盘中没有未分配的空间可供使用，可以创建一个文件并将其用作 swap 分区。这个过程包括以下步骤：</p>\n<ul>\n<li>使用 dd 命令创建一个空的文件，大小为所需的 swap 分区大小。</li>\n<li>使用 mkswap 命令将新文件格式化为 swap 文件系统。</li>\n<li>使用 swapon 命令启用新文件作为 swap 分区。</li>\n</ul>\n<p>例如，如果需要创建一个大小为 4GB 的 swap 文件：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 创建一个 4GB 大小的空文件\nsudo dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;swapfile bs&#x3D;1G count&#x3D;4\n# 修改文件权限为只有 root 用户可读写\nsudo chmod 600 &#x2F;swapfile\n# 格式化新文件为 swap 文件系统\nsudo mkswap &#x2F;swapfile\n# 启用新文件作为 swap 分区\nsudo swapon &#x2F;swapfile</code></pre>\n\n<h3 id=\"挂载与卸载\"><a href=\"#挂载与卸载\" class=\"headerlink\" title=\"挂载与卸载\"></a>挂载与卸载</h3><h4 id=\"mount\"><a href=\"#mount\" class=\"headerlink\" title=\"mount\"></a>mount</h4><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230516110915969.png\" alt=\"image-20230516110915969\"></p>\n<p><code>mount</code> 命令是 Linux 系统中的一个重要命令，主要用于将文件系统挂载到指定的挂载点上。通过挂载，可以使得存储设备和其中的数据在文件系统中可见，从而方便用户进行数据读写和管理。</p>\n<p>以下是 <code>mount</code> 命令的一般格式：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mount [-t &lt;文件系统类型&gt;] [-o &lt;挂载选项&gt;] &lt;设备名&gt; &lt;挂载点&gt;</code></pre>\n\n<p>其中各选项的含义如下：</p>\n<ul>\n<li><code>-t &lt;文件系统类型&gt;</code>：指定要挂载的文件系统类型。如果不指定则自动探测。</li>\n<li><code>-o &lt;挂载选项&gt;</code>：指定挂载时的选项，例如 <code>ro</code> 表示只读挂载、<code>rw</code> 表示读写挂载、<code>noexec</code> 表示禁止执行可执行文件等。多个选项之间以逗号隔开。</li>\n<li><code>&lt;设备名&gt;</code>：要挂载的设备名，可以是分区、磁盘、CD-ROM、USB 设备等。需要注意的是，该设备必须已经被内核检测到，并加载了相应的驱动。</li>\n<li><code>&lt;挂载点&gt;</code>：设备挂载的目标位置，通常是一个已经存在的空目录。当设备被挂载到该目录下后，该目录的内容会被隐藏，直到该设备被卸载。</li>\n</ul>\n<p>除了常规的本地设备挂载，<code>mount</code> 命令还支持网络文件系统（如 NFS 和 CIFS），和虚拟文件系统（如 <code>/proc</code>、<code>/sys</code> 等）的挂载。对于网络文件系统，需要指定相应的网络路径；对于虚拟文件系统，需要指定对应的文件系统类型。</p>\n<p>在已经挂载了某个设备后，可以使用 <code>umount</code> 命令将其卸载，例如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">umount &#x2F;mnt&#x2F;mydisk</code></pre>\n\n<p>该命令会将 <code>/mnt/mydisk</code> 目录下挂载的设备卸载掉。需要注意，在卸载设备之前，必须保证该设备上的所有文件和进程都已经关闭，否则卸载会失败。</p>\n<p>另外，可以使用 <code>mount -l</code> 命令查看当前系统中已经挂载的文件系统列表。该命令会列出每个文件系统的设备名、挂载点，以及相关的配置选项。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">查分区的文件类型的命令\n\n在 Linux 中，可以使用 file 命令来查看文件类型。如果您想查看分区的文件系统类型，可以将该分区对应的设备名作为 file 命令的参数，例如：\n\nsudo file -s &#x2F;dev&#x2F;sda1\n\n这里假设 &#x2F;dev&#x2F;sda1 是您想要查看的分区设备名。执行以上命令后，file 命令会尝试读取该设备的前几个字节，并判断分区的文件系统类型。输出结果可能类似于以下内容：\n\n&#x2F;dev&#x2F;sda1: DOS&#x2F;MBR boot sector, code offset 0x3c+2, OEM-ID &quot;MSDOS5.0&quot;, ... \n\n上述输出表示 &#x2F;dev&#x2F;sda1 设备是一个基于 MBR 分区表的分区，且其文件系统类型为 FAT16（MS-DOS 文件系统）。\n\n需要注意的是，要运行 file 命令需要具有足够的权限，因此需要使用 sudo 命令以管理员身份运行。另外，在执行 file 命令时，请务必将设备名作为参数，而不是挂载点路径，否则 file 命令可能会错误地判断该挂载点所在的文件系统类型。</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230516112841070.png\" alt=\"image-20230516112841070\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230517224325265.png\" alt=\"image-20230517224325265\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">如果我将u盘插入Linux系统需要挂载吗？\n\n如果将 U 盘插入到 Linux 系统上，需要手动挂载才能访问其中的文件和数据。这是因为在 Linux 中，外部 USB 设备（包括 U 盘）在插入系统之后，通常不会自动挂载到文件系统中，需要手动进行挂载操作。\n\n具体来说，当插入 U 盘时，Linux 系统会检测到该设备的存在，并尝试加载适当的驱动程序。但此时 U 盘通常还未被挂载到文件系统中，您需要使用 fdisk -l 命令或 lsblk 命令查看系统中的存储设备列表，以确定 U 盘的设备名（例如 &#x2F;dev&#x2F;sda1）。\n\n然后，您需要创建一个目录作为挂载点（例如 &#x2F;mnt&#x2F;usb），并使用以下命令将 U 盘挂载到该目录：\n\nmount &#x2F;dev&#x2F;sda1 &#x2F;mnt&#x2F;usb\n\n此命令中，&#x2F;dev&#x2F;sda1 是 U 盘的设备名，&#x2F;mnt&#x2F;usb 是我们刚才创建的挂载点。执行以上命令后，U 盘就会被挂载到指定的挂载点上，并可以通过该目录访问其中的文件和数据了。如果不再需要使用 U 盘，可以使用 umount &#x2F;mnt&#x2F;usb 命令卸载它。\n\n需要注意的是，挂载 U 盘时可能需要指定相应的文件系统类型，例如：\n\nmount -t vfat &#x2F;dev&#x2F;sda1 &#x2F;mnt&#x2F;usb\n\n这表示将 sda1 设备上的 VFAT 文件系统挂载到 &#x2F;mnt&#x2F;usb 目录。如果不指定文件系统类型，Linux 会尝试自动检测设备上的文件系统类型，但有时可能会失败，因此最好在挂载时显式指定文件系统类型。</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">如果我在Linux中外接鼠标，需要挂载吗?\n\n一般情况下，你在 Linux 中插入外接鼠标时不需要进行挂载的。因为挂载是针对文件系统的操作，而鼠标设备并不是文件系统，它是通过 USB 接口连接到计算机上的。\n\n在 Linux 中，所有的硬件设备和文件都被表示为一个文件，在 &#x2F;dev 目录下以设备文件的形式呈现，包括鼠标和其他输入设备。当你插入外接鼠标时，操作系统会检测到该设备并自动将其作为一个设备文件挂载到 &#x2F;dev 目录下。\n\n这个设备文件的名称通常是 &#x2F;dev&#x2F;input&#x2F;mice 或者是 &#x2F;dev&#x2F;input&#x2F;eventN（其中 N 是数字），具体取决于操作系统和鼠标类型。你可以通过执行命令 ls -l &#x2F;dev&#x2F;input 来查看已连接的输入设备的设备文件名。\n\n在大多数情况下，Linux 系统会自动识别并配置鼠标，你无需手动进行任何配置或挂载操作。如果你的鼠标无法正常工作，那么问题可能是由于驱动程序或其他设置问题造成的，你可以尝试重新安装或更新相关的驱动程序，或者寻求更进一步的帮助。</code></pre>\n\n<h4 id=\"x2F-etc-x2F-fstab\"><a href=\"#x2F-etc-x2F-fstab\" class=\"headerlink\" title=\"&#x2F;etc&#x2F;fstab\"></a>&#x2F;etc&#x2F;fstab</h4><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230517224431129.png\" alt=\"image-20230517224431129\"></p>\n<p><code>mount -a</code> 是一个常用的 Linux 命令，用于挂载在 <code>/etc/fstab</code> 中定义但尚未被挂载的文件系统。<code>/etc/fstab</code> 是一个配置文件，记录了系统启动时需要自动挂载的文件系统信息和挂载选项。</p>\n<p>当系统启动时，会自动读取 <code>/etc/fstab</code> 文件中的信息，并根据其中定义的设备名、挂载点和文件系统类型等信息进行相应的挂载操作。有时候，在系统运行过程中用户会手动卸载某个文件系统，此时可使用 <code>mount -a</code> 命令重新将其挂载回来。另外，<code>mount -a</code> 也可以用于一次性挂载所有在 <code>/etc/fstab</code> 中定义的文件系统，而不需要手动逐个挂载。</p>\n<p>分区：要挂载的设备的名称</p>\n<p>挂载点：顾名思义</p>\n<p>文件系统类型：分区类型</p>\n<p>分区属性：默认defaults就行</p>\n<h3 id=\"df\"><a href=\"#df\" class=\"headerlink\" title=\"df\"></a>df</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230517232355258.png\" alt=\"image-20230517232355258\"></p>\n<p><code>df</code> （disk free）命令是 Linux 系统中的一个常用命令，用于显示文件系统使用情况。<code>df</code> 命令可以列出当前系统中所有挂载的文件系统、它们的设备名、文件系统类型、已使用空间、剩余空间以及挂载点等信息。</p>\n<p><code>df</code> 命令的常用选项和用法如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">df [选项] [文件系统或目录名]</code></pre>\n\n<ul>\n<li><code>-a</code>：显示所有文件系统，包括虚拟文件系统和未挂载的设备。</li>\n<li><code>-h</code>：以人类可读的方式显示磁盘空间大小。</li>\n<li><code>-i</code>：以 inode 的数量而非以块数显示。</li>\n<li><code>-T</code>：显示文件系统类型。</li>\n<li><code>-x &lt;文件系统类型&gt;</code>：排除指定类型的文件系统信息。</li>\n<li><code>&lt;文件系统或目录名&gt;</code>：指定需要查询的文件系统或目录名，默认为当前工作目录。</li>\n</ul>\n<p><code>df</code> 命令还可以用于查询单个文件或目录所在的文件系统和其使用情况。例如，运行 <code>df -h /var/log</code> 命令可以查询 <code>/var/log</code> 目录所在的文件系统使用情况。</p>\n<p>需要注意的是，<code>df</code> 命令只能查询已经挂载的文件系统，没有挂载的文件系统不会被列出。如果需要查看所有文件系统，可以使用 <code>-a</code> 选项。另外，<code>df</code> 命令只能查询文件系统空间使用情况，无法查询单个文件或目录的大小，如果需要查询单个文件或目录的大小，可以使用 <code>du</code> 命令。</p>\n<h3 id=\"lsblk\"><a href=\"#lsblk\" class=\"headerlink\" title=\"lsblk\"></a>lsblk</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230517232842022.png\" alt=\"image-20230517232842022\"></p>\n<p><code>lsblk</code> 命令可以用来列出系统中的块设备及其相关的信息，包括磁盘分区、软盘、CD-ROM、USB 设备等。它可以帮助用户快速了解系统中的存储情况。</p>\n<p>以下是 <code>lsblk</code> 命令的常用选项和用法：</p>\n<p>列出所有块设备及其相关信息：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">lsblk</code></pre>\n\n<p>列出指定设备及其子设备的信息：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">lsblk &#x2F;dev&#x2F;sda  # 列出 &#x2F;dev&#x2F;sda 设备及其所有子设备的信息</code></pre>\n\n<p>以树形结构列出指定设备及其子设备的信息：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">lsblk -f &#x2F;dev&#x2F;sda  # 以树形结构列出 &#x2F;dev&#x2F;sda 设备及其子设备的信息</code></pre>\n\n<p>只列出指定类型的设备：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">lsblk -d -p  # 只列出磁盘设备（不包括分区）\nlsblk -o name,type,size,mountpoint  # 只列出指定字段的信息，例如设备名称、类型、大小、挂载点等</code></pre>\n\n<p>需要注意的是，<code>lsblk</code> 命令只能列出已经被内核识别的块设备，对于未被识别的设备，它将不会显示。在使用 <code>lsblk</code> 命令时，请确认您有足够的权限以访问系统中的块设备。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@centos7kls-aby ~]# lsblk\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda      8:0    0   40G  0 disk \n├─sda1   8:1    0    1G  0 part &#x2F;boot\n├─sda2   8:2    0    4G  0 part [SWAP]\n└─sda3   8:3    0   35G  0 part &#x2F;\nsdb      8:16   0    2G  0 disk \nsdc      8:32   0    2G  0 disk \nsdd      8:48   0   20G  0 disk \nsr0     11:0    1 1024M  0 rom  \nRM：定义了设备是否可移除0：不可移除，1：可移除\nSIZE：容量\nRO：只读设备的属性\nTYPE：类型，disk硬盘，part分区，\nMOUNTPOINT：挂载点</code></pre>\n\n<h3 id=\"blkid\"><a href=\"#blkid\" class=\"headerlink\" title=\"blkid\"></a>blkid</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230517233719618.png\" alt=\"image-20230517233719618\"></p>\n<p>可以通过<code>blkid</code>查看设备的UUID号,也能看到文件系统类型</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@centos7kls-aby ~]# blkid\n&#x2F;dev&#x2F;sda1: UUID&#x3D;&quot;9cce1bac-5816-4afc-8e60-0bd6c3f775d5&quot; TYPE&#x3D;&quot;xfs&quot; \n&#x2F;dev&#x2F;sda2: UUID&#x3D;&quot;27ad1e50-f74e-4a5c-9e21-86ce61621233&quot; TYPE&#x3D;&quot;swap&quot; \n&#x2F;dev&#x2F;sda3: UUID&#x3D;&quot;de73c023-ad68-4853-9ff6-5c57c4e193d8&quot; TYPE&#x3D;&quot;xfs&quot; \n&#x2F;dev&#x2F;sdb1: UUID&#x3D;&quot;b96e8a2f-7cfe-463a-81df-21657f75c9be&quot; TYPE&#x3D;&quot;xfs&quot; \n&#x2F;dev&#x2F;sdb2: UUID&#x3D;&quot;309c9fe1-2f28-4e5e-a3b0-e1f0dfb3690f&quot; TYPE&#x3D;&quot;xfs&quot; \n&#x2F;dev&#x2F;sdb5: UUID&#x3D;&quot;539657f4-b2bc-4e45-b595-573ed89c38a2&quot; TYPE&#x3D;&quot;ext4&quot; \n&#x2F;dev&#x2F;sdd: UUID&#x3D;&quot;72c77c7d-3840-471b-be1c-af6b7c95cbb0&quot; TYPE&#x3D;&quot;xfs&quot; </code></pre>\n\n<h3 id=\"文件系统修复\"><a href=\"#文件系统修复\" class=\"headerlink\" title=\"文件系统修复\"></a>文件系统修复</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230517233812538.png\" alt=\"image-20230517233812538\"></p>\n<p>这两个命令都是检查，修正文件系统错误的命令</p>\n<p>区别是<code>xfs_repair</code>是用来修复xfs文件系统</p>\n<p><code>fsck.ext4</code>是用来修复ext4的</p>\n<p>这两个命令只有在文件系统有问题时root才可以用</p>\n<h2 id=\"Linux磁盘和文件系统管理（二）\"><a href=\"#Linux磁盘和文件系统管理（二）\" class=\"headerlink\" title=\"Linux磁盘和文件系统管理（二）\"></a>Linux磁盘和文件系统管理（二）</h2><h3 id=\"LVM\"><a href=\"#LVM\" class=\"headerlink\" title=\"LVM\"></a>LVM</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230517234505371.png\" alt=\"image-20230517234505371\"></p>\n<h4 id=\"LVM概述\"><a href=\"#LVM概述\" class=\"headerlink\" title=\"LVM概述\"></a>LVM概述</h4><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230517234806415.png\" alt=\"image-20230517234806415\"></p>\n<p>lvm的优势除了动态调整磁盘容量外，还在于整合闲置的磁盘空间</p>\n<p>可以把散的磁盘的空间拼成一个卷组，就可以做到让本来只能分别存储2g，3g，和5g的磁盘一起存一个8g的文件</p>\n<p>lvm两种写⼊⽅式——交错写⼊，顺序写⼊</p>\n<p>lvm能动态调整分区⼤⼩，xfs分区只能放⼤不能缩⼩，ext4可以放⼤缩⼩</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230517235553311.png\" alt=\"image-20230517235553311\"></p>\n<p>物理卷指的就是之前例子中的2g，3g，5g的磁盘</p>\n<p>先把要做成lvm的分区初始化为物理卷，然后再整合为卷组，再划分空间制作逻辑卷，逻辑卷的⼤⼩不能⼤于卷组⼤⼩</p>\n<p>PE：物理区块，实际上是lvm寻址最小的一个单元（默认大小4M），lvm1中物理区块受限，PE的数量最多是65536个，所以限制了lvm最大的容量是65536*4M约等于256个g，想要更大的容量就要改变PE的大小，在lvm2中PE的数量就不受限了</p>\n<h4 id=\"主要命令\"><a href=\"#主要命令\" class=\"headerlink\" title=\"主要命令\"></a>主要命令</h4><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518001221877.png\" alt=\"image-20230518001221877\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518001523975.png\" alt=\"image-20230518001523975\"></p>\n<p><strong>物理卷</strong></p>\n<p>先使用pvscan查看哪些物理卷可以拿来做LVM</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@centos7kls-aby ~]# pvscan\n  No matching physical volumes found</code></pre>\n\n<p>没有的话就先创建</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@centos7kls-aby ~]# pvcreate &#x2F;dev&#x2F;sdb1 &#x2F;dev&#x2F;sdb2 &#x2F;dev&#x2F;sdb3\n  Physical volume &quot;&#x2F;dev&#x2F;sdb1&quot; successfully created.\n  Physical volume &quot;&#x2F;dev&#x2F;sdb2&quot; successfully created.\n  Physical volume &quot;&#x2F;dev&#x2F;sdb3&quot; successfully created.\n[root@centos7kls-aby ~]# pvcreate &#x2F;dev&#x2F;sdc1 &#x2F;dev&#x2F;sdc2 &#x2F;dev&#x2F;sdc3\n  Physical volume &quot;&#x2F;dev&#x2F;sdc1&quot; successfully created.\n  Physical volume &quot;&#x2F;dev&#x2F;sdc2&quot; successfully created.\n  Physical volume &quot;&#x2F;dev&#x2F;sdc3&quot; successfully created.</code></pre>\n\n<p>再查看</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@centos7kls-aby ~]# pvscan\n  PV &#x2F;dev&#x2F;sdc2                      lvm2 [3.00 GiB]\n  PV &#x2F;dev&#x2F;sdc1                      lvm2 [1.00 GiB]\n  PV &#x2F;dev&#x2F;sdb2                      lvm2 [2.00 GiB]\n  PV &#x2F;dev&#x2F;sdc3                      lvm2 [1023.00 MiB]\n  PV &#x2F;dev&#x2F;sdb1                      lvm2 [1.00 GiB]\n  PV &#x2F;dev&#x2F;sdb3                      lvm2 [&lt;2.00 GiB]\n  Total: 6 [&lt;10.00 GiB] &#x2F; in use: 0 [0   ] &#x2F; in no VG: 6 [&lt;10.00 GiB]</code></pre>\n\n<p>pvdispaly</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@centos7kls-aby ~]# pvdisplay &#x2F;dev&#x2F;sdc1\n  &quot;&#x2F;dev&#x2F;sdc1&quot; is a new physical volume of &quot;1.00 GiB&quot;\n  --- NEW Physical volume ---\n  PV Name               &#x2F;dev&#x2F;sdc1\n  VG Name               \n  PV Size               1.00 GiB\n  Allocatable           NO\n  PE Size               0   \n  Total PE              0\n  Free PE               0\n  Allocated PE          0\n  PV UUID               xKFBl7-Q9SR-dmHo-SXUD-ScRW-Kuwf-7urNDJ</code></pre>\n\n<p><strong>卷组</strong></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518012143324.png\" alt=\"image-20230518012143324\"></p>\n<p>这个时候再查看&#x2F;dev&#x2F;sdc1，可以发现变化</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518012345318.png\" alt=\"image-20230518012345318\"></p>\n<p>创建逻辑卷：<code>lvcreate -l 500 -n lvtest vgtest</code>，其中<code>-l</code>是指定分多少个PE，或者可以使用<code>-L</code>直接指定容量，<code>-n</code>指定逻辑卷的名称，最后跟上逻辑卷的名称</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518062832651.png\" alt=\"image-20230518062832651\"></p>\n<p><code>lvdisplat /dev/vgtest/lvtest</code></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518063246735.png\" alt=\"image-20230518063246735\"></p>\n<p>新建挂载点<code>mkdir -p /mnt/lvmtest</code></p>\n<p>格式化逻辑卷<code>mkfs.ext4 /dev/vgtest/lvtest</code></p>\n<p>挂载：<code>mount /dev/vgtest/lvtest /mnt/lvmtest</code></p>\n<p>检查是否挂载成功<code>mount | grep lvm</code></p>\n<p>删除要先unmount然后从上往下删除</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518064555109.png\" alt=\"image-20230518064555109\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@centos7kls-aby ~]# pvcreate &#x2F;dev&#x2F;sdb3\n  Physical volume &quot;&#x2F;dev&#x2F;sdb3&quot; successfully created.\n[root@centos7kls-aby ~]# vgextend vgtest &#x2F;dev&#x2F;sdb3\n  Volume group &quot;vgtest&quot; successfully extended\n[root@centos7kls-aby ~]# lvextend -L +50M &#x2F;dev&#x2F;vgtest&#x2F;lvtest\n  Rounding size to boundary between physical extents: 52.00 MiB.\n  Size of logical volume vgtest&#x2F;lvtest changed from 1.95 GiB (500 extents) to 2.00 GiB (513 extents).\n  Logical volume vgtest&#x2F;lvtest successfully resized.\n[root@centos7kls-aby ~]# resize2fx &#x2F;dev&#x2F;vgtest&#x2F;lvtest\nbash: resize2fx: command not found...\n[root@centos7kls-aby ~]# resize2fs &#x2F;dev&#x2F;vgtest&#x2F;lvtest\nresize2fs 1.42.9 (28-Dec-2013)\nFilesystem at &#x2F;dev&#x2F;vgtest&#x2F;lvtest is mounted on &#x2F;mnt&#x2F;lvmtest; on-line resizing required\nold_desc_blocks &#x3D; 1, new_desc_blocks &#x3D; 1\nThe filesystem on &#x2F;dev&#x2F;vgtest&#x2F;lvtest is now 525312 blocks long.\n\n[root@centos7kls-aby ~]# </code></pre>\n\n<h4 id=\"磁盘配额\"><a href=\"#磁盘配额\" class=\"headerlink\" title=\"磁盘配额\"></a>磁盘配额</h4><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518065321387.png\" alt=\"image-20230518065321387\"></p>\n<h5 id=\"quota方式配置配额\"><a href=\"#quota方式配置配额\" class=\"headerlink\" title=\"quota方式配置配额\"></a>quota方式配置配额</h5><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518070914466.png\" alt=\"image-20230518070914466\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518071022779.png\" alt=\"image-20230518071022779\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518071057917.png\" alt=\"image-20230518071057917\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518071353350.png\" alt=\"image-20230518071353350\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518071532545.png\" alt=\"image-20230518071532545\"></p>\n<p>开启配额功能quotaon </p>\n<p>关闭quotaoff</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518071559927.png\" alt=\"image-20230518071559927\"></p>\n<p>生成大文件<code>dd if=/dev/zero of=/tmp/1G.txt bs=1M count=1024</code></p>\n<h5 id=\"xfx-quota管理配额\"><a href=\"#xfx-quota管理配额\" class=\"headerlink\" title=\"xfx_quota管理配额\"></a>xfx_quota管理配额</h5><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518081149616.png\" alt=\"image-20230518081149542\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518081302695.png\" alt=\"image-20230518081302695\"></p>\n<p>未格式化，使⽤限制会报错</p>\n<p>bsoft软限制 bhard硬链接</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518081523845.png\" alt=\"image-20230518081523845\"></p>\n<p>u：看⽤户 </p>\n<p>g：组的 </p>\n<p>I：inode节点</p>\n<h2 id=\"进程和计划任务管理\"><a href=\"#进程和计划任务管理\" class=\"headerlink\" title=\"进程和计划任务管理\"></a>进程和计划任务管理</h2><h3 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps\"></a>ps</h3><p>进程：就是一个程序在他自身的虚拟地址空间的执行活动</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518081758158.png\" alt=\"image-20230518081758158\"></p>\n<p>程序就是静态指令集合， 进程是程序的执⾏周期</p>\n<p><code>pstree</code>查看进程的父子关系</p>\n<p>ps 静态进程管理命令,可以帮助我们查看到ps命令在执⾏那⼀刻后台进程的状态 </p>\n<ul>\n<li>-A 所有进程，等同于-ax </li>\n<li>-a 显示所有进程（与终端有关的除外） </li>\n<li>-x 与参数a⼀起使⽤等同于-A </li>\n<li>-u 显示指定⽤户的进程 </li>\n<li>-l ⻓格式 </li>\n<li>-f 完整输出 </li>\n<li>-e 等同于-A</li>\n</ul>\n<p><code>ps aux | more</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@centos7kls-aby ~]# ps aux\nUSER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot          1  0.0  0.2 125716  4224 ?        Ss   06:20   0:02 &#x2F;usr&#x2F;lib&#x2F;syste\nroot          2  0.0  0.0      0     0 ?        S    06:20   0:00 [kthreadd]\nroot          4  0.0  0.0      0     0 ?        S&lt;   06:20   0:00 [kworker&#x2F;0:0H]\nroot          5  0.0  0.0      0     0 ?        S    06:20   0:00 [kworker&#x2F;u256:\nroot          6  0.0  0.0      0     0 ?        S    06:20   0:00 [ksoftirqd&#x2F;0]\nroot          7  0.0  0.0      0     0 ?        S    06:20   0:00 [migration&#x2F;0]\n哪个用户创建的进程 进程号 cpu占用率 内存占用率 虚拟内存占用量（单位kb） 物理内存占用量 tty 进程状态 进程开始时间 进程运行时间 </code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND\nUSER 该进程是由哪个⽤户产⽣的\nPID 进程的ID\n%CPU 该进程占⽤CPU资源的百分⽐，占⽤的百分⽐越⾼。进程越耗费资源\n-%MEM- 该进程占⽤物理内存的百分⽐。占⽤的百分⽐越⾼。进程越耗费资源\nVSZ 该进程占⽤虚拟内存的⼤⼩，单位为KB\nRSS 该进程占⽤实际物理内存的⼤⼩，单位为KB\nTTY 该进程是在哪个终端运⾏的。其中，tty1~tty7代表本地控制台终端（可以通过alt+F1 ~ F7快捷\n键切换不同的终端）。tty1tty6是本地的字符界⾯终端，tty7是图形终端。pts&#x2F;0255代表虚拟终端，\n⼀般是远程连接的终端。第⼀个远程连接占⽤pts&#x2F;0，第⼆个远程连接占⽤pts&#x2F;1，依次增⻓\nSTAT 进程状态\nSTART 该进程的启动时间\nTIME 该进程占⽤CPU的运算时间，注意不是系统时间\nCOMMAND 产⽣此进程的命令名</code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">STAT 进程状态:\nD：不可中断的睡眠 这种进程不会响应信号，⽐如不会被kill -9杀死\nS：可中断的睡眠 在等待某个特定的事件发⽣\nR：运⾏或就绪 Running\nT：停⽌\nZ：僵⼫ Zombie\n&lt;：⾼优先级进程q\nN：低优先级进程\n+：前台进程组中的进程\nl：多线程进程(Thread)\ns：进程组组⻓，下⾯有⼦进程</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518085153220.png\" alt=\"image-20230518085153220\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518085203885.png\" alt=\"image-20230518085203885\"></p>\n<h3 id=\"top\"><a href=\"#top\" class=\"headerlink\" title=\"top\"></a>top</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518085526811.png\" alt=\"image-20230518085526811\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518090519581.png\" alt=\"image-20230518090519581\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518090638886.png\" alt=\"image-20230518090638886\"></p>\n<p>load average：负载平均值，5,10,15 三个时间段的值</p>\n<h3 id=\"pgrep-查询PID\"><a href=\"#pgrep-查询PID\" class=\"headerlink\" title=\"pgrep(查询PID)\"></a>pgrep(查询PID)</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518090813332.png\" alt=\"image-20230518090813332\"></p>\n<h3 id=\"pstree\"><a href=\"#pstree\" class=\"headerlink\" title=\"pstree\"></a>pstree</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518090953218.png\" alt=\"image-20230518090953218\"></p>\n<p>pstree：查看⽗、⼦进程的关系</p>\n<h3 id=\"进程的启动⽅式\"><a href=\"#进程的启动⽅式\" class=\"headerlink\" title=\"进程的启动⽅式\"></a>进程的启动⽅式</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518091446109.png\" alt=\"image-20230518091446109\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">jobs：查看运⾏\nfg 编号 ：停⽌\nbg 编号 ：停⽌变运⾏\nkill %编号：终⽌进程\n信号：标准信号，实时信号</code></pre>\n\n<h3 id=\"dd\"><a href=\"#dd\" class=\"headerlink\" title=\"dd\"></a>dd</h3><p><code>dd if=/dev/zero of=/dev/null</code> 是一个经常用来测试系统 I&#x2F;O 性能的 Linux 命令。</p>\n<p>该命令的作用是从 <code>/dev/zero</code> 中读取数据并将其写入 <code>/dev/null</code>，因为 <code>/dev/zero</code> 会生成无限的“0”数据流，而 <code>/dev/null</code> 则会忽略所有写入到其中的数据，所以这个命令实际上并不会在磁盘上创建任何文件。</p>\n<p>运行这个命令可以测试磁盘读写速度和 CPU 处理能力。当输入和输出都指向 <code>/dev/null</code> 设备时，它只会占用极少量的 CPU 资源和内存，并且不会产生任何磁盘 I&#x2F;O 操作。因此，如果 <code>dd</code> 命令能够快速地完成，那么很可能磁盘 I&#x2F;O 瓶颈已经得到解决。</p>\n<p>如果需要使用 <code>dd</code> 命令测试磁盘 I&#x2F;O 性能，可以将输出设备指向一个普通的文件而非 <code>/dev/null</code>，然后通过比较输入数据的大小和命令执行时间来评估磁盘的读写性能。例如，可以使用以下命令测试 1GB 文件的写入速度：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;testfile bs&#x3D;1M count&#x3D;1000</code></pre>\n\n<p>其中，<code>bs</code> 指定了块大小，<code>count</code> 指定了块的数量，<code>bs * count</code> 等于文件大小。这个命令会通过写入 1GB 的数据到 <code>testfile</code> 文件中来测试磁盘写入速度。完成后，可以使用 <code>sync</code> 命令将所有缓存在内存中的数据刷写到磁盘上，然后再通过 <code>dd</code> 命令读取该文件并比较读取所需时间，以评估磁盘读取速度。</p>\n<h3 id=\"kill\"><a href=\"#kill\" class=\"headerlink\" title=\"kill\"></a>kill</h3><p><code>kill</code> 命令是 Linux&#x2F;Unix 系统中的一个常用命令，用于向指定进程发送信号，以通知该进程执行特定操作，例如终止进程、重新载入配置文件等。</p>\n<p><code>kill</code> 命令的语法格式如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">kill [信号选项] 进程号</code></pre>\n\n<p>其中 <code>[信号选项]</code> 可以是以下任意一个：</p>\n<ul>\n<li><code>-s &lt;信号&gt;</code>：使用指定的信号代替默认的 <code>TERM</code> 信号。</li>\n<li><code>-l</code>：列出支持的信号列表。</li>\n<li><code>-SIGNAL</code>：使用指定的信号代替默认的 <code>TERM</code> 信号（注意 <code>SIGNAL</code> 要大写）。</li>\n</ul>\n<p>如果不指定任何参数，则默认向指定进程发送 <code>TERM</code> 信号，该信号会要求该进程正常退出。如果指定了其他信号，则会根据信号的类型执行对应的操作。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">kill -1 1000 &#x3D;&#x3D; systemctl reload servername\nkill -2 11111 &#x3D;&#x3D; ctrl+c\nkill -9 1111 ：强制终⽌\nkill -15 123112 &#x3D;&#x3D; systemctl stop servername</code></pre>\n\n<h3 id=\"pkill\"><a href=\"#pkill\" class=\"headerlink\" title=\"pkill\"></a>pkill</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518093047787.png\" alt=\"image-20230518093047787\"></p>\n<p>针对⽤户 杀死进程</p>\n<h3 id=\"xkill\"><a href=\"#xkill\" class=\"headerlink\" title=\"xkill\"></a>xkill</h3><p><code>xkill</code> 命令是 Linux&#x2F;Unix 系统中的一个图形界面命令，用于强制终止 X Window System 中的某个窗口或程序。</p>\n<p>使用 <code>xkill</code> 命令可通过单击鼠标在图形界面上选中应用程序窗口，将其强制终止。</p>\n<h2 id=\"计划任务\"><a href=\"#计划任务\" class=\"headerlink\" title=\"计划任务\"></a>计划任务</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518093344256.png\" alt=\"image-20230518093344256\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518093723247.png\" alt=\"image-20230518093723247\"></p>\n<h3 id=\"日志切割\"><a href=\"#日志切割\" class=\"headerlink\" title=\"日志切割\"></a>日志切割</h3><p>Linux百分之80的日志都存放在<code>/var/log/messages</code>中</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518094113171.png\" alt=\"image-20230518094113171\"></p>\n<h5 id=\"使用-crontab-定时任务\"><a href=\"#使用-crontab-定时任务\" class=\"headerlink\" title=\"使用 crontab 定时任务\"></a>使用 crontab 定时任务</h5><p>一种常见的日志切割方法是使用系统的定时任务工具 <code>crontab</code>，通过设置定时任务来定期运行脚本或命令，实现日志切割等功能。</p>\n<p>例如，可以创建一个 shell 脚本 <code>/usr/local/bin/logcut.sh</code>，用于对 <code>/var/log/test.log</code> 文件进行备份和切割：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#!&#x2F;bin&#x2F;bash\n\nLOGFILE&#x3D;&#x2F;var&#x2F;log&#x2F;test.log\nDAY&#x3D;&#96;date +%Y_%m_%d&#96;\nBAKFILE&#x3D;$&#123;LOGFILE&#125;.bak.$DAY\n\ncp $LOGFILE $BAKFILE &amp;&amp; echo &quot;&quot; &gt; $LOGFILE</code></pre>\n\n<p>该脚本将会将 <code>/var/log/test.log</code> 文件备份为 <code>/var/log/test.log.bak.YYYY_MM_DD</code> 的格式，然后清空原文件，实现日志切割的效果。</p>\n<p>然后，在 <code>/etc/crontab</code> 文件中添加以下一行，表示每天凌晨 0:00 运行 <code>/usr/local/bin/logcut.sh</code> 脚本：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">0 0 * * * root &#x2F;usr&#x2F;local&#x2F;bin&#x2F;logcut.sh</code></pre>\n\n<p>该定时任务配置表示在每天的 0 点 0 分时，以 root 用户身份运行 <code>/usr/local/bin/logcut.sh</code> 脚本。可以根据需要设置其他时间间隔。</p>\n<h3 id=\"at命令\"><a href=\"#at命令\" class=\"headerlink\" title=\"at命令\"></a>at命令</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518100206731.png\" alt=\"image-20230518100206731\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518100516224.png\" alt=\"image-20230518100516224\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518100735190.png\" alt=\"image-20230518100735190\"></p>\n<p><code>atp</code>查看任务</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518100838405.png\" alt=\"image-20230518100838405\"></p>\n<p><code>atrm</code>删除</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518100941212.png\" alt=\"image-20230518100941212\"></p>\n<p>想查看任务 到&#x2F;var&#x2F;spool&#x2F;at下⾯去找</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518101102063.png\" alt=\"image-20230518101102063\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518101105797.png\" alt=\"image-20230518101105797\"></p>\n<h3 id=\"周期执行的计划任务（crontab）\"><a href=\"#周期执行的计划任务（crontab）\" class=\"headerlink\" title=\"周期执行的计划任务（crontab）\"></a>周期执行的计划任务（crontab）</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518101408036.png\" alt=\"image-20230518101408036\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518101736842.png\" alt=\"image-20230518101736842\"></p>\n<p><code>/etc/crontab</code>：系统计划任务</p>\n<p><code>/etc/cron.*</code>：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518101929516.png\" alt=\"image-20230518101929516\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518102038952.png\" alt=\"image-20230518102038952\"></p>\n<p><code>crontab -e</code>：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518102434461.png\" alt=\"image-20230518102434461\"></p>\n<p>0&#x2F;7都是星期日</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518102724370.png\" alt=\"image-20230518102724370\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518102740760.png\" alt=\"image-20230518102740760\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230518102845167.png\" alt=\"image-20230518102845167\"></p>\n","text":"首先关闭虚拟机，在VMware中给虚拟机加几块新的硬盘 Linux磁盘和文件系统管理管理磁盘全流程查看信息 ll /dev/sd* lsblk # 列出块状设备 创建分区 fidsk /dev/sdb # 具体创建流程看下面 partprobe /dev/sdb # 刷新分区表 ...","link":"","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":28,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":15,"path":"api/tags/kls.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Linux%E7%A3%81%E7%9B%98%E5%92%8C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">Linux磁盘和文件系统管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%A1%E7%90%86%E7%A3%81%E7%9B%98%E5%85%A8%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">管理磁盘全流程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fdisk\"><span class=\"toc-text\">fdisk</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#partprobe\"><span class=\"toc-text\">partprobe</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mkfs\"><span class=\"toc-text\">mkfs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mkswap\"><span class=\"toc-text\">mkswap</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%82%E8%BD%BD%E4%B8%8E%E5%8D%B8%E8%BD%BD\"><span class=\"toc-text\">挂载与卸载</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mount\"><span class=\"toc-text\">mount</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#x2F-etc-x2F-fstab\"><span class=\"toc-text\">&#x2F;etc&#x2F;fstab</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#df\"><span class=\"toc-text\">df</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lsblk\"><span class=\"toc-text\">lsblk</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#blkid\"><span class=\"toc-text\">blkid</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BF%AE%E5%A4%8D\"><span class=\"toc-text\">文件系统修复</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Linux%E7%A3%81%E7%9B%98%E5%92%8C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%EF%BC%88%E4%BA%8C%EF%BC%89\"><span class=\"toc-text\">Linux磁盘和文件系统管理（二）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#LVM\"><span class=\"toc-text\">LVM</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#LVM%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">LVM概述</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E8%A6%81%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">主要命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A3%81%E7%9B%98%E9%85%8D%E9%A2%9D\"><span class=\"toc-text\">磁盘配额</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#quota%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%AE%E9%85%8D%E9%A2%9D\"><span class=\"toc-text\">quota方式配置配额</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#xfx-quota%E7%AE%A1%E7%90%86%E9%85%8D%E9%A2%9D\"><span class=\"toc-text\">xfx_quota管理配额</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E5%92%8C%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">进程和计划任务管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ps\"><span class=\"toc-text\">ps</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#top\"><span class=\"toc-text\">top</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pgrep-%E6%9F%A5%E8%AF%A2PID\"><span class=\"toc-text\">pgrep(查询PID)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pstree\"><span class=\"toc-text\">pstree</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%90%AF%E5%8A%A8%E2%BD%85%E5%BC%8F\"><span class=\"toc-text\">进程的启动⽅式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#dd\"><span class=\"toc-text\">dd</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#kill\"><span class=\"toc-text\">kill</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pkill\"><span class=\"toc-text\">pkill</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#xkill\"><span class=\"toc-text\">xkill</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">计划任务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2\"><span class=\"toc-text\">日志切割</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-crontab-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">使用 crontab 定时任务</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#at%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">at命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%91%A8%E6%9C%9F%E6%89%A7%E8%A1%8C%E7%9A%84%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%EF%BC%88crontab%EF%BC%89\"><span class=\"toc-text\">周期执行的计划任务（crontab）</span></a></li></ol></li></ol>","author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Linux基本网络服务-klsday5","uid":"67f56756dfbe83c6b9950a6e6b251147","slug":"klsday5-Linux","date":"2023-05-18T02:35:21.065Z","updated":"2023-05-25T01:53:40.027Z","comments":true,"path":"api/articles/klsday5-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-1pq6zg.jpg","text":" yum服务 概述 准备安装源 yum是如何知道依赖关系的？ 在光盘中的repodata文件中存放着依赖关系 使⽤createrepo⼯具来建⽴本地yum仓库（有的OS版本没有装需要在光盘安装） 命令：rpm -ivh /run/media/root/CentOS\\ 7\\ x86...","link":"","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":28,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":15,"path":"api/tags/kls.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}},"next_post":{"title":"Linux软件安装与账户权限-klsday3","uid":"4fcf9285313e12db2565769c48460179","slug":"klsday3-Linux","date":"2023-05-15T01:04:37.919Z","updated":"2023-05-15T23:24:08.338Z","comments":true,"path":"api/articles/klsday3-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-zyy7ro.jpg","text":"Linux应用程序基础 rpm命令 rpm命令用于管理软件。rpm原本是 Red Hat Linux 发行版专门用来管理 Linux 各项套件的程序，由于它遵循 GPL 规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用。RPM 套件管理方式的出现，让 Linux 易于安...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":28,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":15,"path":"api/tags/kls.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}}}