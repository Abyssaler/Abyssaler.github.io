{"title":"系统安全-Linux操作系统","uid":"ba8a2682be8b63e52959cbada397fdd0","slug":"Linux操作系统","date":"2023-01-12T04:13:11.493Z","updated":"2023-01-20T10:34:21.808Z","comments":true,"path":"api/articles/Linux操作系统.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typorawallhaven-zyx9lw.jpg","content":"<h2 id=\"一-Linux操作系统概述\"><a href=\"#一-Linux操作系统概述\" class=\"headerlink\" title=\"一:Linux操作系统概述\"></a>一:Linux操作系统概述</h2><h3 id=\"Linux操作系统介绍及作用\"><a href=\"#Linux操作系统介绍及作用\" class=\"headerlink\" title=\"Linux操作系统介绍及作用\"></a>Linux操作系统介绍及作用</h3><h4 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h4><p>​\t目前业界客户端大多采用Windows系统，<strong>而服务端大多数使用的是Linux</strong>，究其根源主要是开源免费，安全性高，支持多用户，支持关闭任意不需要的功能和对硬件资源要求低等因素。同时，Linux也是众多开源产品首先支持的平台，也是实际意义上的服务器和云平台的标准，包括众多安全设备，其内置的也是Linux操作系统（如防火墙，路由器，交换机，IDS和IPS，网闸等产品），对于网络安全的学习来说，掌握Linux操作系统起着至关重要的作用</p>\n<h4 id=\"操作系统的作用\"><a href=\"#操作系统的作用\" class=\"headerlink\" title=\"操作系统的作用\"></a>操作系统的作用</h4><p><strong>五大基本功能</strong></p>\n<ul>\n<li>进程和线程的管理</li>\n<li>存储管理</li>\n<li>文件管理</li>\n<li>设备管理</li>\n<li>用户接口</li>\n</ul>\n<p><strong>三个作用</strong></p>\n<ul>\n<li>资源的管理者</li>\n<li>向用户提供服务</li>\n<li>对硬件机器的扩展</li>\n</ul>\n<h3 id=\"层次\"><a href=\"#层次\" class=\"headerlink\" title=\"层次\"></a>层次</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typoraimage-20230108112728920.png\" alt=\"image-20230108112728920\"></p>\n<p>内核（Kernel）：<strong>用来实现上述的作用</strong>，是一个 操作系统 的核心。 是基于硬件的第一层软件扩充，提供操作系统的最基本的功能，是操作系统工作的基础，它负责管理系统的进程、 内存 、设备 驱动 程序、文件和 网络 系统，决定着系统的性能和稳定性。</p>\n<p>壳（Shell）：提供了命令接口，通俗点来说就是让用户直接操作内核的程序，通用的操作系统都要提供一个称为shell（外壳）的程序，用户（操作人员）使用这个程序来操作计算机系统进行工作</p>\n<p>应用程序（Application）：用户平时接触的程序</p>\n<h3 id=\"Linux操作系统版本\"><a href=\"#Linux操作系统版本\" class=\"headerlink\" title=\"Linux操作系统版本\"></a>Linux操作系统版本</h3><p>首先要知道，<strong>Linux</strong>是源于<strong>Unix</strong></p>\n<p>因为Linux开源免费 的特性，吸引了很多厂商来开发维护，渐渐的就形成了Linux的很多种版本</p>\n<ul>\n<li><strong>RedHat</strong>：<code>RHEL（Red Hat Enterprise Linux）</code>毕竟是商业版<code>Linux</code>系统，一般多用于企业生产环境，提供完善的商业支持，在性能、稳定性方面也有很大的保障。</li>\n<li><strong>Debian</strong>：<code>Debian</code>和<code>Ubuntu</code>是一个派系的，但界面可能没有<code>Ubuntu</code>那么华丽，但是比较稳定，也适合用作服务器操作系统。<code>Debian</code>在开源圈子用得十分广泛，也有一大批开源爱好者活跃于其中。</li>\n<li><strong>中科红旗</strong>：红旗Linux是由北京中科红旗软件技术有限公司开发的一系列Linux发行版，包括桌面版、工作站版、数据中心服务器版、HA集群版和红旗嵌入式Linux等产品。红旗Linux是中国较大、较成熟的Linux发行版之一，2014年被大连五甲万京信息科技产业集团收购</li>\n<li><strong>Ubuntu</strong>：<code>Ubuntu</code>界面比较华丽，包管理器很完善，社区也非常活跃，个人用户确实很多，所以从市面上看的确比较大众化。</li>\n<li><strong>CentOS</strong>：<code>CentOS</code>可以理解为是基于<code>RedHat</code>商业版系统的社区编译重发布版，完全开源免费，因此相较于其他一些免费的<code>Linux</code>发行版会更加稳定，也因此一般企业里常用作服务器操作系统。</li>\n<li><strong>Fedora</strong>：<code>Fedora</code>其实和<code>RedHat</code>也同属一个派系，背后的支撑企业也是红帽子公司。但是<code>Fedora</code>是免费发行版，而且更加侧重于新技术的试验和加持，因此稳定性方面的考量较<code>CentOS</code>会稍微次要一些。</li>\n<li><strong>SUSE</strong>：<code>SUSE</code>背后也算是有大公司的支持了，目前主要也还是多用于企业用户。</li>\n<li><strong>Arch</strong>： <code>Arch</code>的确比较适合好奇心强的人尝鲜，它的官方<code>Wiki</code>做得好，<code>AUR</code>仓库很繁荣，适合<code>DIY</code>玩家去折腾，确实也吸引了不少粉丝。</li>\n<li><strong>Manjaro</strong>：<code>Manjaro</code>可以看成是<code>Arch Linux</code>的衍生分支，既包含了<code>Arch</code>的常见优点，但也对用户友好，注重体验和稳定性。<code>Manjaro</code>的安装和使用都比较方便，目前使用用户非常多。</li>\n<li><strong>Gentoo</strong>：<code>Gentoo</code>适合极客范化的折腾，也比较适合有特殊需要和特殊化定制的需求，总体来说比较小众。但是用得很6的大佬们都说好，因为这些大佬们大多有系统洁癖，控制欲很强，什么都需要自己编译、自己定制，这个对他们来说简直就是天堂了。</li>\n<li><strong>Kali</strong>：kali是一个面向安全的基于Debian的Linux发行版，预装了大量的安全软件。其主要功能有三个：数字取证、安全审计、渗透测试。kali首先是一个操作系统，更确切的说它是一个基于Linux kernel的操作系统，该系统从BackTrack发展而来。而BT是2006年推出的一个用于渗透测试及黑客攻防的专用平台，基于Knoppix（linux的一个发行版）开发。Backtrack从2006年的起始版本BackTrack v.1.0Beta开始，到2012年推出最终版本BackTrack 5 R3 relerse。之后，2013年offensive Security的Mati Aharoni和Devon Kearns基于Debian重新实现了BackTrack，新的产品命名为kali，从此kali成为新的替代品和后继者。</li>\n<li>。。。。。</li>\n</ul>\n<p><strong>通常情况下,服务器端操作系统(Windows,Linux)是不会安装GUI界面的,只有一个内核加Shell,再加少量命令行</strong></p>\n<h2 id=\"二-Linux系统安装\"><a href=\"#二-Linux系统安装\" class=\"headerlink\" title=\"二:Linux系统安装\"></a>二:Linux系统安装</h2><p>这里我安装的是centos7</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>具体安装过程可参考以下连接:</p>\n<p>bilibili:</p>\n<p><a href=\"https://www.bilibili.com/video/BV1SY411p7F9/?p=119&amp;vd_source=7c5a074543c3447221c9299649d0a816\">https://www.bilibili.com/video/BV1SY411p7F9/?p=119&amp;vd_source=7c5a074543c3447221c9299649d0a816</a></p>\n<p>其他:</p>\n<p><a href=\"https://blog.csdn.net/qq_45743985/article/details/121152504\">https://blog.csdn.net/qq_45743985/article/details/121152504</a></p></blockquote>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typoraimage-20230108122607302.png\" alt=\"image-20230108122607302\"></p>\n<h2 id=\"三-使用XShell远程连接Linux\"><a href=\"#三-使用XShell远程连接Linux\" class=\"headerlink\" title=\"三:使用XShell远程连接Linux\"></a>三:使用XShell远程连接Linux</h2><h3 id=\"ssh协议介绍\"><a href=\"#ssh协议介绍\" class=\"headerlink\" title=\"ssh协议介绍\"></a>ssh协议介绍</h3><p>​\tSSH 叫安全外壳协议（Secure Shell），是一种加密的网络传输协议，可在不安全的网络中网络服务提供安全的传输环境。它通过在网络中创建安全隧道来实现 SSH 客户端和服务器之间的连接。最早的时候，互联网通信都是明文通信，一旦被截获，内容就会被暴露。1995年，芬兰学者 Tatu Ylonen 设计了 SSH 协议，将登录信息全部加密，成为互联网安全的一个基本解决方案，迅速在全世界获得推广，目前已经成为所有操作系统的标准配置。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>贴几篇参考文章:</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/235610836\">https://zhuanlan.zhihu.com/p/235610836</a></p>\n<p><a href=\"https://info.support.huawei.com/info-finder/encyclopedia/zh/SSH.html\">https://info.support.huawei.com/info-finder/encyclopedia/zh/SSH.html</a></p></blockquote>\n<p>我们可以用一些远程shell连接通过ssh等协议来远程连接Linux服务器</p>\n<h3 id=\"XShell使用\"><a href=\"#XShell使用\" class=\"headerlink\" title=\"XShell使用\"></a>XShell使用</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>照例贴个参考文章</p>\n<p><a href=\"https://blog.csdn.net/weixin_47230291/article/details/126905158\">https://blog.csdn.net/weixin_47230291/article/details/126905158</a></p></blockquote>\n<p><strong>ps：在连接之前最好先配置一下你要连接的Linux主机的ip</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>linux配置ip参考:</p>\n<p><a href=\"https://blog.csdn.net/u010521062/article/details/114067036\">https://blog.csdn.net/u010521062/article/details/114067036</a></p></blockquote>\n<p>进入xshell后点击新建</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230112172201253.png\" alt=\"image-20230112172201253\"></p>\n<p>进行配置</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230112172438020.png\" alt=\"image-20230112172438020\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230112172339604.png\" alt=\"image-20230112172339604\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230112172502351.png\" alt=\"image-20230112172502351\"></p>\n<p>就连接成功了</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230112172549821.png\" alt=\"image-20230112172549821\"></p>\n<h3 id=\"ssh与scp命令\"><a href=\"#ssh与scp命令\" class=\"headerlink\" title=\"ssh与scp命令\"></a>ssh与scp命令</h3><h4 id=\"ssh命令\"><a href=\"#ssh命令\" class=\"headerlink\" title=\"ssh命令\"></a>ssh命令</h4><p>win10及Linux都自带了针对ssh远程连接的命令,假如你的电脑上没有安装xshell等工具,可以直接用系统自带的服务进行远程连接</p>\n<p><strong>windows连接:</strong></p>\n<p><code>ssh -l 用户名 ip</code></p>\n<p>比如:<code>ssh -l root 192.168.2.112</code>,然后输入密码</p>\n<p>或者<code>ssh root@192.168.2.112</code></p>\n<p><strong>Linux连接</strong></p>\n<p><code>ssh root@192.168.2.112</code></p>\n<h4 id=\"scp命令\"><a href=\"#scp命令\" class=\"headerlink\" title=\"scp命令\"></a>scp命令</h4><p><strong>从Windows上传文件到Linux</strong></p>\n<p>把<code>F:\\Photo\\ico\\1.ico</code>上传到Linux服务器的&#x2F;opt文件夹</p>\n<p><code>scp F:\\Photo\\ico\\1.ico root@192.168.2.112:/opt</code></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230112174753797.png\" alt=\"image-20230112174753797\"></p>\n<p><strong>从Linux下载文件到Windows</strong></p>\n<p><code>C:\\Users\\Denny&gt;scp root@192.168.112.225:/opttest.html E:\\</code></p>\n<h3 id=\"移动端ssh客户端工具\"><a href=\"#移动端ssh客户端工具\" class=\"headerlink\" title=\"移动端ssh客户端工具\"></a>移动端ssh客户端工具</h3><p><a href=\"https://cloud.tencent.com/developer/article/1071130\">juiceSSH</a></p>\n<p><a href=\"https://developer.aliyun.com/article/777406\">Termius</a></p>\n<p>…</p>\n<h2 id=\"四-Linux系统操作\"><a href=\"#四-Linux系统操作\" class=\"headerlink\" title=\"四:Linux系统操作\"></a>四:Linux系统操作</h2><h3 id=\"文件系统解读\"><a href=\"#文件系统解读\" class=\"headerlink\" title=\"文件系统解读\"></a>文件系统解读</h3><p>在Linux下运行<code>df -h</code>命令,可以查看到目前Linux中存在的硬盘分区情况,及每个分区的磁盘的使用情况</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@mycentos mysql]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\ndevtmpfs        900M     0  900M   0% &#x2F;dev\ntmpfs           910M     0  910M   0% &#x2F;dev&#x2F;shm\ntmpfs           910M  9.5M  901M   2% &#x2F;run\ntmpfs           910M     0  910M   0% &#x2F;sys&#x2F;fs&#x2F;cgroup\n&#x2F;dev&#x2F;sda3        39G  1.9G   37G   5% &#x2F;\n&#x2F;dev&#x2F;sda5        19G   33M   19G   1% &#x2F;home\n&#x2F;dev&#x2F;sda1      1014M  142M  873M  14% &#x2F;boot\ntmpfs           182M     0  182M   0% &#x2F;run&#x2F;user&#x2F;0</code></pre>\n\n<p>#filesystem:文件系统,size:分区大小,used:已经使用的空间,avail:剩余的空间,use%:使用率百分比,mounted on:挂载到哪个目录上面</p>\n<p>另外，对上述几个挂载的目录进行一下简单的说明。</p>\n<ul>\n<li>&#x2F;dev: dev是设备(device)的英文缩写。&#x2F;dev这个目录对所有的用户都十分重要。因为在这个目录中包含了所有Linux系统中使用的外部设备。</li>\n<li>&#x2F;dev&#x2F;shm: &#x2F;dev&#x2F;shm&#x2F;是linux下一 个非常有用的目录，因为这个目录不在硬盘上,而是在内存里。因此在linux下，就不需要大费周折去建ramdisk,直接使用&#x2F;dev&#x2F;shm&#x2F;就可达到很好的优化效果。该分区的大小通常是系统内存的一半大小，由于该目录是驻留在内存中，所以对于在系统中需要使用的临时数据，可以将其存储在该目录中，就相当于我们直接在使用内存读写文件，速度相当快。(基本上来说，内存的读写速度可以达到硬盘的100倍左右)。</li>\n<li>&#x2F;run: 一些运行过程中跟用户或进程有关的数据，属于内核级文件。</li>\n<li>&#x2F;sys&#x2F;fs&#x2F;cgroup: 关于运行过程中CPU、内存等数据，属于内核级文件。</li>\n<li>&#x2F;:根目录，用户可以使用的保存操作系统其他文件的目录,用户也可以创建自己的目录。</li>\n<li>&#x2F;boot:操作系统的内核及在引导过程中使用的文件。</li>\n<li>&#x2F;home:普通用户使用的根目录，通常也称之为“家目录”，类似于Windows’ 下的C:\\Users目录。</li>\n<li>&#x2F;run&#x2F;user&#x2F;0: 编号ID为0的用户(通常是指root)在运行过程中产生的数据。</li>\n</ul>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230115102542125.png\" alt=\"image-20230115102542125\"></p>\n<h3 id=\"linux目录说明\"><a href=\"#linux目录说明\" class=\"headerlink\" title=\"linux目录说明\"></a>linux目录说明</h3><p>根目录是整个系统最重要的一个目录，因为不但所有的目录都是由根目录衍生出来的， 同时根目录也与开机&#x2F;还原&#x2F;系统修复等动作有关。 由于系统开机时需要特定的开机软件、核心文件、开机所需程序、 函式库等等文件数据，若系统出现错误时，根目录也必须要包含有能够修复文件系统的程序才行。 因为根目录是这么的重要，所以在FHS的要求方面，他希望根目录不要放在非常大的分区， 因为越大的分区内你会放入越多的数据，如此一来根目录所在分区就可能会有较多发生错误的机会。</p>\n<p>因此FHS标准建议：根目录(&#x2F;)所在分区应该越小越好， 且应用程序所安装的软件最好不要与根目录放在同一个分区内，保持根目录越小越好。 如此不但效能较佳，根目录所在的文件系统也较不容易发生问题。说白了，就是根目录和Windows的C盘一个样。</p>\n<p>根据以上原因，FHS认为根目录(&#x2F;)下应该包含如下子目录：</p>\n<table>\n<thead>\n<tr>\n<th>目录</th>\n<th>应放置档案内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x2F;bin</td>\n<td>系统有很多放置执行档的目录，但&#x2F;bin比较特殊。因为&#x2F;bin放置的是在单人维护模式下还能够被操作的指令。在&#x2F;bin底下的指令可以被root与一般帐号所使用，主要有：cat,chmod(修改权限), chown, date, mv, mkdir, cp, bash等等常用的指令。</td>\n</tr>\n<tr>\n<td>&#x2F;boot</td>\n<td>主要放置开机会使用到的档案，包括Linux核心档案以及开机选单与开机所需设定档等等。Linux kernel常用的档名为：vmlinuz ，如果使用的是grub这个开机管理程式，则还会存在&#x2F;boot&#x2F;grub&#x2F;这个目录。</td>\n</tr>\n<tr>\n<td>&#x2F;dev</td>\n<td>在Linux系统上，任何装置与周边设备都是以档案的型态存在于这个目录当中。 只要通过存取这个目录下的某个档案，就等于存取某个装置。比要重要的档案有&#x2F;dev&#x2F;null, &#x2F;dev&#x2F;zero, &#x2F;dev&#x2F;tty , &#x2F;dev&#x2F;lp*, &#x2F; dev&#x2F;hd*, &#x2F;dev&#x2F;sd*等等</td>\n</tr>\n<tr>\n<td>&#x2F;etc</td>\n<td>系统主要的设定档几乎都放置在这个目录内，例如人员的帐号密码档、各种服务的启始档等等。 一般来说，这个目录下的各档案属性是可以让一般使用者查阅的，但是只有root有权力修改。 FHS建议不要放置可执行档(binary)在这个目录中。 比较重要的档案有：&#x2F;etc&#x2F;inittab, &#x2F;etc&#x2F;init.d&#x2F;, &#x2F;etc&#x2F;modprobe.conf, &#x2F;etc&#x2F;X11&#x2F;, &#x2F;etc&#x2F;fstab, &#x2F;etc&#x2F;sysconfig&#x2F;等等。 另外，其下重要的目录有：&#x2F;etc&#x2F;init.d&#x2F; ：所有服务的预设启动script都是放在这里的，例如要启动或者关闭iptables的话： &#x2F;etc&#x2F;init.d&#x2F;iptables start、&#x2F;etc&#x2F;init.d&#x2F; iptables stop&#x2F;etc&#x2F;xinetd.d&#x2F; ：这就是所谓的super daemon管理的各项服务的设定档目录。&#x2F;etc&#x2F;X11&#x2F; ：与X Window有关的各种设定档都在这里，尤其是xorg.conf或XF86Config这两个X Server的设定档。</td>\n</tr>\n<tr>\n<td>&#x2F;home</td>\n<td>这是系统预设的使用者家目录(home directory)。 在你新增一个一般使用者帐号时，预设的使用者家目录都会规范到这里来。比较重要的是，家目录有两种代号：  ~ ：代表当前使用者的家目录，而 ~guest：则代表用户名为guest的家目录。</td>\n</tr>\n<tr>\n<td>&#x2F;lib</td>\n<td>系统的函式库非常的多，而&#x2F;lib放置的则是在开机时会用到的函式库，以及在&#x2F;bin或&#x2F;sbin底下的指令会呼叫的函式库而已 。 什么是函式库呢？妳可以将他想成是外挂，某些指令必须要有这些外挂才能够顺利完成程式的执行之意。 尤其重要的是&#x2F;lib&#x2F;modules&#x2F;这个目录，因为该目录会放置核心相关的模组(驱动程式)。</td>\n</tr>\n<tr>\n<td>&#x2F;media</td>\n<td>media是媒体的英文，顾名思义，这个&#x2F;media底下放置的就是可移除的装置。 包括软碟、光碟、DVD等等装置都暂时挂载于此。 常见的档名有：&#x2F;media&#x2F;floppy, &#x2F;media&#x2F;cdrom等等。</td>\n</tr>\n<tr>\n<td>&#x2F;mnt</td>\n<td>如果妳想要暂时挂载某些额外的装置，一般建议妳可以放置到这个目录中。在古早时候，这个目录的用途与&#x2F;media相同啦。 只是有了&#x2F;media之后，这个目录就用来暂时挂载用了。</td>\n</tr>\n<tr>\n<td>&#x2F;opt</td>\n<td>这个是给第三方协力软体放置的目录 。 什么是第三方协力软体啊？举例来说，KDE这个桌面管理系统是一个独立的计画，不过他可以安装到Linux系统中，因此KDE的软体就建议放置到此目录下了。 另外，如果妳想要自行安装额外的软体(非原本的distribution提供的)，那么也能够将你的软体安装到这里来。 不过，以前的Linux系统中，我们还是习惯放置在&#x2F;usr&#x2F;local目录下。</td>\n</tr>\n<tr>\n<td>&#x2F;root</td>\n<td>系统管理员(root)的家目录。 之所以放在这里，是因为如果进入单人维护模式而仅挂载根目录时，该目录就能够拥有root的家目录，所以我们会希望root的家目录与根目录放置在同一个分区中。</td>\n</tr>\n<tr>\n<td>&#x2F;sbin</td>\n<td>Linux有非常多指令是用来设定系统环境的，这些指令只有root才能够利用来设定系统，其他使用者最多只能用来查询而已。放在&#x2F;sbin底下的为开机过程中所需要的，里面包括了开机、修复、还原系统所需要的指令。至于某些伺服器软体程式，一般则放置到&#x2F;usr&#x2F;sbin&#x2F;当中。至于本机自行安装的软体所产生的系统执行档(system binary)，则放置到&#x2F;usr&#x2F;local&#x2F;sbin&#x2F;当中了。常见的指令包括：fdisk, fsck, ifconfig, init, mkfs等等。</td>\n</tr>\n<tr>\n<td>&#x2F;srv</td>\n<td>srv可以视为service的缩写，是一些网路服务启动之后，这些服务所需要取用的资料目录。 常见的服务例如WWW, FTP等等。 举例来说，WWW伺服器需要的网页资料就可以放置在&#x2F;srv&#x2F;www&#x2F;里面。呵呵，看来平时我们编写的代码应该放到这里了。</td>\n</tr>\n<tr>\n<td>&#x2F;tmp</td>\n<td>这是让一般使用者或者是正在执行的程序暂时放置档案的地方。这个目录是任何人都能够存取的，所以你需要定期的清理一下。当然，重要资料不可放置在此目录啊。 因为FHS甚至建议在开机时，应该要将&#x2F;tmp下的资料都删除。</td>\n</tr>\n</tbody></table>\n<p>事实上FHS针对根目录所定义的标准就仅限于上表，不过仍旧有些目录也需要我们了解一下，具体如下：</p>\n<table>\n<thead>\n<tr>\n<th>目录</th>\n<th>应放置文件内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x2F;lost+found</td>\n<td>这个目录是使用标准的ext2&#x2F;ext3档案系统格式才会产生的一个目录，目的在于当档案系统发生错误时，将一些遗失的片段放置到这个目录下。 这个目录通常会在分割槽的最顶层存在，例如你加装一个硬盘于&#x2F;disk中，那在这个系统下就会自动产生一个这样的目录&#x2F;disk&#x2F;lost+found</td>\n</tr>\n<tr>\n<td>&#x2F;proc</td>\n<td>这个目录本身是一个虚拟文件系统(virtual filesystem)喔。 他放置的资料都是在内存当中，例如系统核心、行程资讯(process)（是进程吗?）、周边装置的状态及网络状态等等。因为这个目录下的资料都是在记忆体（内存）当中，所以本身不占任何硬盘空间。比较重要的档案（目录）例如： &#x2F;proc&#x2F;cpuinfo, &#x2F;proc&#x2F;dma, &#x2F;proc&#x2F;interrupts, &#x2F;proc&#x2F;ioports, &#x2F;proc&#x2F;net&#x2F;*，&#x2F;proc&#x2F;meminfo查看内存信息</td>\n</tr>\n<tr>\n<td>&#x2F;sys</td>\n<td>这个目录其实跟&#x2F;proc非常类似，也是一个虚拟的档案系统，主要也是记录与核心相关的资讯。 包括目前已载入的核心模组与核心侦测到的硬体装置资讯等等。 这个目录同样不占硬盘容量。</td>\n</tr>\n</tbody></table>\n<p>除了这些目录的内容之外，另外要注意的是，因为根目录与开机有关，开机过程中仅有根目录会被挂载， 其他分区则是在开机完成之后才会持续的进行挂载的行为。就是因为如此，因此根目录下与开机过程有关的目录， 就不能够与根目录放到不同的分区去。那哪些目录不可与根目录分开呢？有底下这些：</p>\n<ul>\n<li><p>&#x2F;etc：配置文件</p>\n</li>\n<li><p>&#x2F;bin：重要执行档</p>\n</li>\n<li><p>&#x2F;dev：所需要的装置文件</p>\n</li>\n<li><p>&#x2F;lib：执行档所需的函式库与核心所需的模块</p>\n</li>\n<li><p>&#x2F;sbin：重要的系统执行文件</p>\n</li>\n</ul>\n<p>这五个目录千万不可与根目录分开在不同的分区。</p>\n<p>通常情况下，我们可以使用&#x2F;opt和&#x2F;home目录，这两个目录均是由用户自由处理的，不存在敏感文件，也可以将程序安装在&#x2F;opt&#x2F;目录下，默认情况下，程序安装路径会在&#x2F;usr&#x2F;bin或&#x2F;var目录下</p>\n<p><strong>&#x2F;usr 的意义与内容：</strong></p>\n<p>依据FHS的基本定义，&#x2F;usr里面放置的数据属于可分享的与不可变动的(shareable, static)， 如果你知道如何透过网络进行分区的挂载(例如在服务器篇会谈到的NFS服务器)，那么&#x2F;usr确实可以分享给局域网络内的其他主机来使用喔。</p>\n<p>&#x2F;usr不是user的缩写，其实usr是Unix Software Resource的缩写， 也就是Unix操作系统软件资源所放置的目录，而不是用户的数据啦。这点要注意。 FHS建议所有软件开发者，应该将他们的数据合理的分别放置到这个目录下的次目录，而不要自行建立该软件自己独立的目录。</p>\n<p>因为是所有系统默认的软件(distribution发布者提供的软件)都会放置到&#x2F;usr底下，因此这个目录有点类似Windows 系统的C:\\Windows\\ + C:\\Program files\\这两个目录的综合体，系统刚安装完毕时，这个目录会占用最多的硬盘容量。 一般来说，&#x2F;usr的次目录建议有底下这些：</p>\n<table>\n<thead>\n<tr>\n<th>目录</th>\n<th>应放置文件内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x2F;usr&#x2F;X11R6&#x2F;</td>\n<td>为X Window System重要数据所放置的目录，之所以取名为X11R6是因为最后的X版本为第11版，且该版的第6次释出之意。</td>\n</tr>\n<tr>\n<td>&#x2F;usr&#x2F;bin&#x2F;</td>\n<td>绝大部分的用户可使用指令都放在这里。请注意到他与&#x2F;bin的不同之处。(是否与开机过程有关)</td>\n</tr>\n<tr>\n<td>&#x2F;usr&#x2F;include&#x2F;</td>\n<td>c&#x2F;c++等程序语言的档头(header)与包含档(include)放置处，当我们以tarball方式 (*.tar.gz 的方式安装软件)安装某些数据时，会使用到里头的许多包含档。</td>\n</tr>\n<tr>\n<td>&#x2F;usr&#x2F;lib&#x2F;</td>\n<td>包含各应用软件的函式库、目标文件(object file)，以及不被一般使用者惯用的执行档或脚本(script)。 某些软件会提供一些特殊的指令来进行服务器的设定，这些指令也不会经常被系统管理员操作， 那就会被摆放到这个目录下啦。要注意的是，如果你使用的是X86_64的Linux系统， 那可能会有&#x2F;usr&#x2F;lib64&#x2F;目录产生</td>\n</tr>\n<tr>\n<td>&#x2F;usr&#x2F;local&#x2F;</td>\n<td>统管理员在本机自行安装自己下载的软件(非distribution默认提供者)，建议安装到此目录， 这样会比较便于管理。举例来说，你的distribution提供的软件较旧，你想安装较新的软件但又不想移除旧版， 此时你可以将新版软件安装于&#x2F;usr&#x2F;local&#x2F;目录下，可与原先的旧版软件有分别啦。 你可以自行到&#x2F;usr&#x2F;local去看看，该目录下也是具有bin, etc, include, lib…的次目录</td>\n</tr>\n<tr>\n<td>&#x2F;usr&#x2F;sbin&#x2F;</td>\n<td>非系统正常运作所需要的系统指令。最常见的就是某些网络服务器软件的服务指令(daemon)</td>\n</tr>\n<tr>\n<td>&#x2F;usr&#x2F;share&#x2F;</td>\n<td>放置共享文件的地方，在这个目录下放置的数据几乎是不分硬件架构均可读取的数据， 因为几乎都是文本文件嘛。在此目录下常见的还有这些次目录：&#x2F;usr&#x2F;share&#x2F;man：联机帮助文件&#x2F;usr&#x2F;share&#x2F;doc：软件杂项的文件说明&#x2F;usr&#x2F;share&#x2F;zoneinfo：与时区有关的时区文件</td>\n</tr>\n<tr>\n<td>&#x2F;usr&#x2F;src&#x2F;</td>\n<td>一般原始码建议放置到这里，src有source的意思。至于核心原始码则建议放置到&#x2F;usr&#x2F;src&#x2F;linux&#x2F;目录下。</td>\n</tr>\n</tbody></table>\n<p><strong>&#x2F;var 的意义与内容：</strong></p>\n<p>如果&#x2F;usr是安装时会占用较大硬盘容量的目录，那么&#x2F;var就是在系统运作后才会渐渐占用硬盘容量的目录。 因为&#x2F;var目录主要针对常态性变动的文件，包括缓存(cache)、登录档(log file)以及某些软件运作所产生的文件， 包括程序文件(lock file, run file)，或者例如MySQL数据库的文件等等。常见的次目录有：</p>\n<table>\n<thead>\n<tr>\n<th>目录</th>\n<th>应放置文件内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x2F;var&#x2F;cache&#x2F;</td>\n<td>应用程序本身运作过程中会产生的一些暂存档</td>\n</tr>\n<tr>\n<td>&#x2F;var&#x2F;lib&#x2F;</td>\n<td>程序本身执行的过程中，需要使用到的数据文件放置的目录。在此目录下各自的软件应该要有各自的目录。 举例来说，MySQL的数据库放置到&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;而rpm的数据库则放到&#x2F;var&#x2F;lib&#x2F;rpm去</td>\n</tr>\n<tr>\n<td>&#x2F;var&#x2F;lock&#x2F;</td>\n<td>某些装置或者是文件资源一次只能被一个应用程序所使用，如果同时有两个程序使用该装置时， 就可能产生一些错误的状况，因此就得要将该装置上锁(lock)，以确保该装置只会给单一软件所使用。 举例来说，刻录机正在刻录一块光盘，你想一下，会不会有两个人同时在使用一个刻录机烧片？ 如果两个人同时刻录，那片子写入的是谁的数据？所以当第一个人在刻录时该刻录机就会被上锁， 第二个人就得要该装置被解除锁定(就是前一个人用完了)才能够继续使用</td>\n</tr>\n<tr>\n<td>&#x2F;var&#x2F;log&#x2F;</td>\n<td>非常重要。这是登录文件放置的目录。里面比较重要的文件如&#x2F;var&#x2F;log&#x2F;messages, &#x2F;var&#x2F;log&#x2F;wtmp(记录登入者的信息)等。</td>\n</tr>\n<tr>\n<td>&#x2F;var&#x2F;mail&#x2F;</td>\n<td>放置个人电子邮件信箱的目录，不过这个目录也被放置到&#x2F;var&#x2F;spool&#x2F;mail&#x2F;目录中，通常这两个目录是互为链接文件。</td>\n</tr>\n<tr>\n<td>&#x2F;var&#x2F;run&#x2F;</td>\n<td>某些程序或者是服务启动后，会将他们的PID放置在这个目录下</td>\n</tr>\n<tr>\n<td>&#x2F;var&#x2F;spool&#x2F;</td>\n<td>这个目录通常放置一些队列数据，所谓的“队列”就是排队等待其他程序使用的数据。 这些数据被使用后通常都会被删除。举例来说，系统收到新信会放置到&#x2F;var&#x2F;spool&#x2F;mail&#x2F;中， 但使用者收下该信件后该封信原则上就会被删除。信件如果暂时寄不出去会被放到&#x2F;var&#x2F;spool&#x2F;mqueue&#x2F;中， 等到被送出后就被删除。如果是工作排程数据(crontab)，就会被放置到&#x2F;var&#x2F;spool&#x2F;cron&#x2F;目录中。</td>\n</tr>\n</tbody></table>\n<h3 id=\"Linux的启动级别\"><a href=\"#Linux的启动级别\" class=\"headerlink\" title=\"Linux的启动级别\"></a>Linux的启动级别</h3><p>Linux下一共有七个启动级别（0-6）</p>\n<p>切换启动级别使用的命令是init</p>\n<p>语法：init 启动级别号</p>\n<p>文件<code>/etc/inittab</code>:设置默认启动级别</p>\n<p>启动级别分别是：</p>\n<ul>\n<li>0   系统停机模式，系统默认运行级别不能设置为0，不然的话是没办法正常启动的，这个启动级别下， 机器就是关机的状态 </li>\n<li>1   单用户模式，有root权限，用于系统的维护，禁止远程登录，没有网络功能，就像windows的安全模式 </li>\n<li>2   多用户模式，没有NFS和网络的支持 </li>\n<li><strong>3</strong>   完整的多用户文本模式，有NFS和网络，登录后进入控制台的命令行模式 ,代表命令行界面，即文本界面，是企业中服务器通用的启动模式</li>\n<li>4   系统未使用，保留，一般不用，在一些特殊情况下可以用它来做一些事情。比如说，笔记本电脑电池将 要用尽时，可以切换到这个模式来做一些设置 </li>\n<li><strong>5</strong>   图形化模式，登陆后进入图形GUI模式 ,代表图形界面，也是Linux系统启动时带GUI的默认启动模式</li>\n<li>6   重启模式，默认运行级别不能设置为6，否则系统会无限重启，不能正常启动。运行init 6 机器就会重启</li>\n</ul>\n<h3 id=\"Linux的关机与重启\"><a href=\"#Linux的关机与重启\" class=\"headerlink\" title=\"Linux的关机与重启\"></a>Linux的关机与重启</h3><table>\n<thead>\n<tr>\n<th>命令实例</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>reboot</td>\n<td>重启</td>\n</tr>\n<tr>\n<td>shutdown -r now</td>\n<td>现在立刻重启</td>\n</tr>\n<tr>\n<td>shutdown -r 11:30</td>\n<td>等到11:30进行重启</td>\n</tr>\n<tr>\n<td>shutdown -r +1</td>\n<td>等一分钟后重启</td>\n</tr>\n<tr>\n<td>halt</td>\n<td>关机</td>\n</tr>\n<tr>\n<td>shutdown -h now</td>\n<td>现在立刻关闭系统</td>\n</tr>\n<tr>\n<td>shutdown -h 11:30</td>\n<td>等到11:30关闭系统</td>\n</tr>\n<tr>\n<td>init 0</td>\n<td>关机</td>\n</tr>\n<tr>\n<td>init 6</td>\n<td>重启</td>\n</tr>\n</tbody></table>\n<h3 id=\"Linux常见命令使用\"><a href=\"#Linux常见命令使用\" class=\"headerlink\" title=\"Linux常见命令使用\"></a>Linux常见命令使用</h3><h4 id=\"top命令\"><a href=\"#top命令\" class=\"headerlink\" title=\"top命令\"></a>top命令</h4><p>类似于Windows的任务管理器，可以查看CPU和内存等使用情况，也可以查看每个进程所消耗CPU和内存,及进程ID等信息。</p>\n<p>直接输入top如下图,可直接看到资源使用情况</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230115110452135.png\" alt=\"image-20230115110452135\"></p>\n<p>按q或者ctrl+c退出</p>\n<h4 id=\"ls命令\"><a href=\"#ls命令\" class=\"headerlink\" title=\"ls命令\"></a>ls命令</h4><p>就是 list 的缩写，通过 ls 命令不仅可以查看 linux 文件夹包含的文件，而且可以查看文件权限(包括目录、文件夹、文件权限)查看目录信息等等。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ls -a 列出目录所有文件，包含以.开始的隐藏文件\nls -A 列出除.及..的其它文件\nls -r 反序排列\nls -t 以文件修改时间排序\nls -S 以文件大小排序\nls -h 以易读大小显示\nls -l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来</code></pre>\n\n<h4 id=\"cd-命令\"><a href=\"#cd-命令\" class=\"headerlink\" title=\"cd 命令\"></a>cd 命令</h4><p>cd(changeDirectory) 命令语法：</p>\n<p><code>cd [目录名]</code></p>\n<p>说明：切换当前目录至 dirName。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">（1）进入根目录\ncd &#x2F;\n（2）进入 &quot;home&quot; 目录\ncd &#x2F;home\n（3）进入上一次工作路径\ncd -\n（4）把上个命令的参数作为cd参数使用。\ncd !$</code></pre>\n\n<p>注:</p>\n<p>cd ~<br>~ 代表的就是 &#x2F;home&#x2F;user&#x2F;</p>\n<p>~ 表示代码主目录，也就是当前登录用户的用户目录。</p>\n<h4 id=\"pwd-命令\"><a href=\"#pwd-命令\" class=\"headerlink\" title=\"pwd 命令\"></a>pwd 命令</h4><p>pwd 命令用于查看当前工作目录路径。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1）查看当前路径\npwd\n（2）查看软链接的实际路径\npwd -P</code></pre>\n\n<h4 id=\"mkdir-命令\"><a href=\"#mkdir-命令\" class=\"headerlink\" title=\"mkdir 命令\"></a>mkdir 命令</h4><p>mkdir 命令用于创建文件夹。</p>\n<p>可用选项：</p>\n<ul>\n<li><strong>-m</strong>: 对新建目录设置存取权限，也可以用 chmod 命令设置;</li>\n<li><strong>-p</strong>: 可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后，系统将自动建立好那些尚不在的目录，即一次可以建立多个目录。</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">(1）当前工作目录下创建名为 t的文件夹\nmkdir t\n（2）在 tmp 目录下创建路径为 test&#x2F;t1&#x2F;t 的目录，若不存在，则创建：\nmkdir -p &#x2F;tmp&#x2F;test&#x2F;t1&#x2F;t</code></pre>\n\n<h4 id=\"rm命令\"><a href=\"#rm命令\" class=\"headerlink\" title=\"rm命令\"></a>rm命令</h4><p>Linux rm（英文全拼：remove）命令用于删除一个文件或者目录。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">rm [options] name...</code></pre>\n\n<ul>\n<li>-i 删除前逐一询问确认。</li>\n<li>-f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。</li>\n<li>-r 将目录及以下之档案亦逐一删除。</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># rm  test.txt \nrm：是否删除 一般文件 &quot;test.txt&quot;? y  \n# rm  homework  \nrm: 无法删除目录&quot;homework&quot;: 是一个目录  \n# rm  -r  homework  \nrm：是否删除 目录 &quot;homework&quot;? y </code></pre>\n\n<p>删除文件可以直接使用rm命令，若删除目录则必须配合选项”-r”</p>\n<h4 id=\"mv-命令\"><a href=\"#mv-命令\" class=\"headerlink\" title=\"mv 命令\"></a>mv 命令</h4><p>移动文件或修改文件名，根据第二参数类型（如目录，则移动文件；如为文件则重命令该文件）。</p>\n<p>当第二个参数为目录时，第一个参数可以是多个以空格分隔的文件或目录，然后移动第一个参数指定的多个文件到第二个参数指定的目录中。</p>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mv [options] source dest\nmv [options] source... directory</code></pre>\n\n<p><strong>参数说明</strong>：</p>\n<ul>\n<li><strong>-b</strong>: 当目标文件或目录存在时，在执行覆盖前，会为其创建一个备份。</li>\n<li><strong>-i</strong>: 如果指定移动的源目录或文件与目标的目录或文件同名，则会先询问是否覆盖旧文件，输入 y 表示直接覆盖，输入 n 表示取消该操作。</li>\n<li><strong>-f</strong>: 如果指定移动的源目录或文件与目标的目录或文件同名，不会询问，直接覆盖旧文件。</li>\n<li><strong>-n</strong>: 不要覆盖任何已存在的文件或目录。</li>\n<li><strong>-u</strong>：当源文件比目标文件新或者目标文件不存在时，才执行移动操作。</li>\n</ul>\n<p><strong>mv 参数设置与运行结果</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">命令格式</th>\n<th align=\"left\">运行结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>mv source_file(文件) dest_file(文件)</code></td>\n<td align=\"left\">将源文件名 source_file 改为目标文件名 dest_file</td>\n</tr>\n<tr>\n<td align=\"left\"><code>mv source_file(文件) dest_directory(目录)</code></td>\n<td align=\"left\">将文件 source_file 移动到目标目录 dest_directory 中</td>\n</tr>\n<tr>\n<td align=\"left\"><code>mv source_directory(目录) dest_directory(目录)</code></td>\n<td align=\"left\">目录名 dest_directory 已存在，将 source_directory 移动到目录名 dest_directory 中；目录名 dest_directory 不存在则 source_directory 改名为目录名 dest_directory</td>\n</tr>\n<tr>\n<td align=\"left\"><code>mv source_directory(目录) dest_file(文件)</code></td>\n<td align=\"left\">出错</td>\n</tr>\n</tbody></table>\n<p><strong>实例</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">将文件 aaa 改名为 bbb :\nmv aaa bbb\n将 info 目录放入 logs 目录中。注意，如果 logs 目录不存在，则该命令将 info 改名为 logs。\nmv info&#x2F; logs \n再如将 &#x2F;usr&#x2F;runoob 下的所有文件和目录移到当前目录下，命令行为：\n$ mv &#x2F;usr&#x2F;runoob&#x2F;*  . </code></pre>\n\n<h4 id=\"cp-命令\"><a href=\"#cp-命令\" class=\"headerlink\" title=\"cp 命令\"></a>cp 命令</h4><p>将源文件复制至目标文件，或将多个源文件复制至目标目录。</p>\n<p>注意：命令行复制，如果目标文件已经存在会提示是否覆盖，而在 shell 脚本中，如果不加 -i 参数，则不会提示，而是直接覆盖！</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-i 提示\n-r 复制目录及目录内所有项目\n-a 复制的文件与原文件时间一样</code></pre>\n\n<p><strong>实例</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">(1）复制 a.txt 到 test 目录下，保持原文件时间，如果原文件存在提示是否覆盖。\ncp -ai a.txt test\n（2）为 a.txt 建立一个链接（快捷方式）\ncp -s a.txt link_a.txt</code></pre>\n\n<h4 id=\"cat命令\"><a href=\"#cat命令\" class=\"headerlink\" title=\"cat命令\"></a>cat命令</h4><p>cat（英文全拼：concatenate）命令用于连接文件并打印到标准输出设备上</p>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cat [-AbeEnstTuv] [--help] [--version] fileName</code></pre>\n\n<p><strong>参数</strong></p>\n<p><strong>-n 或 –number</strong>：由 1 开始对所有输出的行数编号。</p>\n<p><strong>-b 或 –number-nonblank</strong>：和 -n 相似，只不过对于空白行不编号。</p>\n<p><strong>-s 或 –squeeze-blank</strong>：当遇到有连续两行以上的空白行，就代换为一行的空白行。</p>\n<p><strong>-v 或 –show-nonprinting</strong>：使用 ^ 和 M- 符号，除了 LFD 和 TAB 之外。</p>\n<p><strong>-E 或 –show-ends</strong> : 在每行结束处显示 $。</p>\n<p><strong>-T 或 –show-tabs</strong>: 将 TAB 字符显示为 ^I。</p>\n<p><strong>-A, –show-all</strong>：等价于 -vET。</p>\n<p><strong>-e：</strong>等价于”-vE”选项；</p>\n<p><strong>-t：</strong>等价于”-vT”选项；</p>\n<p><strong>实例</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">把 textfile1 的文档内容加上行号后输入 textfile2 这个文档里：\ncat -n textfile1 &gt; textfile2\n把 textfile1 和 textfile2 的文档内容加上行号（空白行不加）之后将内容附加到 textfile3 文档里：\ncat -b textfile1 textfile2 &gt;&gt; textfile3\n清空 &#x2F;etc&#x2F;test.txt 文档内容：\ncat &#x2F;dev&#x2F;null &gt; &#x2F;etc&#x2F;test.txt\ncat 也可以用来制作镜像文件。例如要制作软盘的镜像文件，将软盘放好后输入：\ncat &#x2F;dev&#x2F;fd0 &gt; OUTFILE\n相反的，如果想把 image file 写到软盘，输入：\ncat IMG_FILE &gt; &#x2F;dev&#x2F;fd0</code></pre>\n\n<h4 id=\"more-命令\"><a href=\"#more-命令\" class=\"headerlink\" title=\"more 命令\"></a>more 命令</h4><p>功能类似于 cat, more 会以一页一页的显示方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示。</p>\n<p><strong>命令参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">+n      从笫 n 行开始显示\n-n       定义屏幕大小为n行\n+&#x2F;pattern 在每个档案显示前搜寻该字串（pattern），然后从该字串前两行之后开始显示 \n-c       从顶部清屏，然后显示\n-d       提示“Press space to continue，’q’ to quit（按空格键继续，按q键退出）”，禁用响铃功能\n-l        忽略Ctrl+l（换页）字符\n-p       通过清除窗口而不是滚屏来对文件进行换页，与-c选项相似\n-s       把连续的多个空行显示为一行\n-u       把文件内容中的下画线去掉</code></pre>\n\n<p><strong>常用操作命令：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Enter    向下 n 行，需要定义。默认为 1 行\nCtrl+F   向下滚动一屏\n空格键  向下滚动一屏\nCtrl+B  返回上一屏\n&#x3D;       输出当前行的行号\n:f     输出文件名和当前行的行号\nV      调用vi编辑器\n!命令   调用Shell，并执行命令\nq       退出more</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）显示文件中从第3行起的内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">more +3 text.txt</code></pre>\n\n<p>（2）在所列出文件目录详细信息，借助管道使每次显示 5 行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ls -l | more -5</code></pre>\n\n<p>按空格显示下 5 行。</p>\n<h4 id=\"less-命令\"><a href=\"#less-命令\" class=\"headerlink\" title=\"less 命令\"></a>less 命令</h4><p>less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件。</p>\n<p><strong>常用命令参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-i  忽略搜索时的大小写\n-N  显示每行的行号\n-o  &lt;文件名&gt; 将less 输出的内容在指定文件中保存起来\n-s  显示连续空行为一行\n&#x2F;字符串：向下搜索“字符串”的功能\n?字符串：向上搜索“字符串”的功能\nn：重复前一个搜索（与 &#x2F; 或 ? 有关）\nN：反向重复前一个搜索（与 &#x2F; 或 ? 有关）\n-x &lt;数字&gt; 将“tab”键显示为规定的数字空格\nb  向后翻一页\nd  向后翻半页\nh  显示帮助界面\nQ  退出less 命令\nu  向前滚动半页\ny  向前滚动一行\n空格键 滚动一行\n回车键 滚动一页\n[pagedown]： 向下翻动一页\n[pageup]：   向上翻动一页</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）ps 查看进程信息并通过 less 分页显示</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps -aux | less -N</code></pre>\n\n<p>（2）查看多个文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">less 1.log 2.log</code></pre>\n\n<p>可以使用 n 查看下一个，使用 p 查看前一个。</p>\n<h4 id=\"head-命令\"><a href=\"#head-命令\" class=\"headerlink\" title=\"head 命令\"></a>head 命令</h4><p>head 用来显示档案的开头至标准输出中，默认 head 命令打印其相应文件的开头 10 行。</p>\n<p><strong>常用参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-n&lt;行数&gt; 显示的行数（行数为复数表示从最后向前数）</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）显示 1.log 文件中前 20 行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">head 1.log -n 20</code></pre>\n\n<p>（2）显示 1.log 文件前 20 字节</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">head -c 20 log2014.log</code></pre>\n\n<p>（3）显示 t.log最后 10 行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">head -n -10 t.log</code></pre>\n\n<h4 id=\"tail-命令\"><a href=\"#tail-命令\" class=\"headerlink\" title=\"tail 命令\"></a>tail 命令</h4><p>用于显示指定文件末尾内容，不指定文件时，作为输入信息进行处理。常用查看日志文件。</p>\n<p><strong>常用参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-f 循环读取（常用于查看递增的日志文件）\n-n&lt;行数&gt; 显示行数（从后向前）</code></pre>\n\n<p>（1）循环读取逐渐增加的文件内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ping 127.0.0.1 &gt; ping.log &amp;</code></pre>\n\n<p>后台运行：可使用 jobs -l 查看，也可使用 fg 将其移到前台运行。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tail -f ping.log</code></pre>\n\n<p>（查看日志）</p>\n<p><code>tail -f 文本文件</code>表示通过流的方式实时查看最新的文件内容</p>\n<h4 id=\"which-命令\"><a href=\"#which-命令\" class=\"headerlink\" title=\"which 命令\"></a>which 命令</h4><p>在 linux 要查找某个文件，但不知道放在哪里了，可以使用下面的一些命令来搜索：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">which     查看可执行文件的位置。\nwhereis 查看文件的位置。\nlocate  配合数据库查看文件位置。\nfind        实际搜寻硬盘查询文件名称。</code></pre>\n\n<p>which 是在 PATH 就是指定的路径中，搜索某个系统命令的位置，并返回第一个搜索结果。使用 which 命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p>\n<p><strong>常用参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-n 　指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）查看 ls 命令是否存在，执行哪个</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">which ls</code></pre>\n\n<p>（2）查看 which</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">which which</code></pre>\n\n<p>（3）查看 cd</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">which cd（显示不存在，因为 cd 是内建命令，而 which 查找显示是 PATH 中的命令）</code></pre>\n\n<p>查看当前 PATH 配置：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">echo $PATH</code></pre>\n\n<p>或使用 env 查看所有环境变量及对应值</p>\n<h4 id=\"whereis-命令\"><a href=\"#whereis-命令\" class=\"headerlink\" title=\"whereis 命令\"></a>whereis 命令</h4><p>whereis 命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。whereis 及 locate 都是基于系统内建的数据库进行搜索，因此效率很高，而find则是遍历硬盘查找文件。</p>\n<p><strong>常用参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-b   定位可执行文件。\n-m   定位帮助文件。\n-s   定位源代码文件。\n-u   搜索默认路径下除可执行文件、源代码文件、帮助文件以外的其它文件。</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）查找 locate 程序相关文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">whereis locate</code></pre>\n\n<p>（2）查找 locate 的源码文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">whereis -s locate</code></pre>\n\n<p>（3）查找 lcoate 的帮助文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">whereis -m locate</code></pre>\n\n<h4 id=\"locate-命令\"><a href=\"#locate-命令\" class=\"headerlink\" title=\"locate 命令\"></a>locate 命令</h4><p>locate 通过搜寻系统内建文档数据库达到快速找到档案，数据库由 updatedb 程序来更新，updatedb 是由 cron daemon 周期性调用的。默认情况下 locate 命令在搜寻数据库时比由整个由硬盘资料来搜寻资料来得快，但较差劲的是 locate 所找到的档案若是最近才建立或 刚更名的，可能会找不到，在内定值中，updatedb 每天会跑一次，可以由修改 crontab 来更新设定值 (etc&#x2F;crontab)。</p>\n<p>locate 与 find 命令相似，可以使用如 *、? 等进行正则匹配查找</p>\n<p><strong>常用参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-l num（要显示的行数）\n-f   将特定的档案系统排除在外，如将proc排除在外\n-r   使用正则运算式做为寻找条件</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）查找和 pwd 相关的所有文件(文件名中包含 pwd）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">locate pwd</code></pre>\n\n<p>（2）搜索 etc 目录下所有以 sh 开头的文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">locate &#x2F;etc&#x2F;sh</code></pre>\n\n<p>（3）查找 &#x2F;var 目录下，以 reason 结尾的文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">locate -r &#39;^&#x2F;var.*reason$&#39;（其中.表示一个字符，*表示任务多个；.*表示任意多个字符）</code></pre>\n\n<h4 id=\"find-命令\"><a href=\"#find-命令\" class=\"headerlink\" title=\"find 命令\"></a>find 命令</h4><p>用于在文件树中查找文件，并作出相应的处理。</p>\n<p>命令格式：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find pathname -options [-print -exec -ok ...]</code></pre>\n\n<p>命令参数：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">pathname: find命令所查找的目录路径。例如用.来表示当前目录，用&#x2F;来表示系统根目录。\n-print： find命令将匹配的文件输出到标准输出。\n-exec： find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为&#39;command&#39; &#123;  &#125; \\;，注意&#123;   &#125;和\\；之间的空格。\n-ok： 和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。</code></pre>\n\n<p><strong>命令选项：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-name 按照文件名查找文件\n-perm 按文件权限查找文件\n-user 按文件属主查找文件\n-group  按照文件所属的组来查找文件。\n-type  查找某一类型的文件，诸如：\n   b - 块设备文件\n   d - 目录\n   c - 字符设备文件\n   l - 符号链接文件\n   p - 管道文件\n   f - 普通文件\n\n-size n :[c] 查找文件长度为n块文件，带有c时表文件字节大小\n-amin n   查找系统中最后N分钟访问的文件\n-atime n  查找系统中最后n*24小时访问的文件\n-cmin n   查找系统中最后N分钟被改变文件状态的文件\n-ctime n  查找系统中最后n*24小时被改变文件状态的文件\n-mmin n   查找系统中最后N分钟被改变文件数据的文件\n-mtime n  查找系统中最后n*24小时被改变文件数据的文件\n(用减号-来限定更改时间在距今n日以内的文件，而用加号+来限定更改时间在距今n日以前的文件。 )\n-maxdepth n 最大查找目录深度\n-prune 选项来指出需要忽略的目录。在使用-prune选项时要当心，因为如果你同时使用了-depth选项，那么-prune选项就会被find命令忽略\n-newer 如果希望查找更改时间比某个文件新但比另一个文件旧的所有文件，可以使用-newer选项</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）查找 48 小时内修改过的文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find -atime -2</code></pre>\n\n<p>（2）在当前目录查找 以 .log 结尾的文件。 <strong>.</strong> 代表当前目录</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find .&#x2F; -name &#39;*.log&#39;</code></pre>\n\n<p>（3）查找 &#x2F;opt 目录下 权限为 777 的文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find &#x2F;opt -perm 777</code></pre>\n\n<p>（4）查找大于 1K 的文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find -size +1000c</code></pre>\n\n<p>查找等于 1000 字符的文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find -size 1000c </code></pre>\n\n<p>-exec 参数后面跟的是 command 命令，它的终止是以 ; 为结束标志的，所以这句命令后面的分号是不可缺少的，考虑到各个系统中分号会有不同的意义，所以前面加反斜杠。{} 花括号代表前面find查找出来的文件名。</p>\n<p><strong>实例：</strong></p>\n<p>（5）在当前目录中查找更改时间在10日以前的文件并删除它们(无提醒）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find . -type f -mtime +10 -exec rm -f &#123;&#125; \\;</code></pre>\n\n<p>（6）当前目录中查找所有文件名以.log结尾、更改时间在5日以上的文件，并删除它们，只不过在删除之前先给出提示。 按y键删除文件，按n键不删除</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find . -name &#39;*.log&#39; mtime +5 -ok -exec rm &#123;&#125; \\;</code></pre>\n\n<p>（7）当前目录下查找文件名以 passwd 开头，内容包含 “pkg” 字符的文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find . -f -name &#39;passwd*&#39; -exec grep &quot;pkg&quot; &#123;&#125; \\;</code></pre>\n\n<p>（8）用 exec 选项执行 cp 命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find . -name &#39;*.log&#39; -exec cp &#123;&#125; test3 \\;</code></pre>\n\n<p>-xargs find 命令把匹配到的文件传递给 xargs 命令，而 xargs 命令每次只获取一部分文件而不是全部，不像 -exec 选项那样。这样它可以先处理最先获取的一部分文件，然后是下一批，并如此继续下去。</p>\n<p>实例：</p>\n<p>（9）查找当前目录下每个普通文件，然后使用 xargs 来判断文件类型</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find . -type f -print | xargs file</code></pre>\n\n<p>（10）查找当前目录下所有以 js 结尾的并且其中包含 ‘editor’ 字符的普通文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find . -type f -name &quot;*.js&quot; -exec grep -lF &#39;ueditor&#39; &#123;&#125; \\;\nfind -type f -name &#39;*.js&#39; | xargs grep -lF &#39;editor&#39;</code></pre>\n\n<p>（11）利用 xargs 执行 mv 命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find . -name &quot;*.log&quot; | xargs -i mv &#123;&#125; test4</code></pre>\n\n<p>（12）用 grep 命令在当前目录下的所有普通文件中搜索 hostnames 这个词，并标出所在行：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find . -name \\*(转义） -type f -print | xargs grep -n &#39;hostnames&#39;</code></pre>\n\n<p>（13）查找当前目录中以一个小写字母开头，最后是 4 到 9 加上 .log 结束的文件：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find . -name &#39;[a-z]*[4-9].log&#39; -print</code></pre>\n\n<p>（14）在 test 目录查找不在 test4 子目录查找</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find test -path &#39;test&#x2F;test4&#39; -prune -o -print</code></pre>\n\n<p>（15）实例1：查找更改时间比文件 log2012.log新但比文件 log2017.log 旧的文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find -newer log2012.log ! -newer log2017.log</code></pre>\n\n<p><strong>使用 depth 选项：</strong></p>\n<p>depth 选项可以使 find 命令向磁带上备份文件系统时，希望首先备份所有的文件，其次再备份子目录中的文件。</p>\n<p>实例：find 命令从文件系统的根目录开始，查找一个名为 CON.FILE 的文件。 它将首先匹配所有的文件然后再进入子目录中查找</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find &#x2F; -name &quot;CON.FILE&quot; -depth -print</code></pre>\n\n<h4 id=\"chmod-命令\"><a href=\"#chmod-命令\" class=\"headerlink\" title=\"chmod 命令\"></a>chmod 命令</h4><p>用于改变 linux 系统文件或目录的访问权限。用它控制文件或目录的访问权限。该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。</p>\n<p>每一文件或目录的访问权限都有三组，每组用三位表示，分别为文件属主的读、写和执行权限；与属主同组的用户的读、写和执行权限；系统中其他用户的读、写和执行权限。可使用 ls -l test.txt 查找。</p>\n<p>以文件 log2012.log 为例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-rw-r--r-- 1 root root 296K 11-13 06:03 log2012.log</code></pre>\n\n<p>第一列共有 10 个位置，第一个字符指定了文件类型。在通常意义上，一个目录也是一个文件。如果第一个字符是横线，表示是一个非目录的文件。如果是 d，表示是一个目录。从第二个字符开始到第十个 9 个字符，3 个字符一组，分别表示了 3 组用户对文件或者目录的权限。权限字符用横线代表空许可，r 代表只读，w 代表写，x 代表可执行。</p>\n<p>常用参数：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-c 当发生改变时，报告处理信息\n-R 处理指定目录以及其子目录下所有文件</code></pre>\n\n<p>权限范围：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">u ：目录或者文件的当前的用户\ng ：目录或者文件的当前的群组\no ：除了目录或者文件的当前用户或群组之外的用户或者群组\na ：所有的用户及群组</code></pre>\n\n<p>权限代号：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">r ：读权限，用数字4表示\nw ：写权限，用数字2表示\nx ：执行权限，用数字1表示\n- ：删除权限，用数字0表示\ns ：特殊权限</code></pre>\n\n<p>实例：</p>\n<p>（1）增加文件 t.log 所有用户可执行权限</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chmod a+x t.log</code></pre>\n\n<p>（2）撤销原来所有的权限，然后使拥有者具有可读权限,并输出处理信息</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chmod u&#x3D;r t.log -c</code></pre>\n\n<p>（3）给 file 的属主分配读、写、执行(7)的权限，给file的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chmod 751 t.log -c（或者：chmod u&#x3D;rwx,g&#x3D;rx,o&#x3D;x t.log -c)</code></pre>\n\n<p>（4）将 test 目录及其子目录所有文件添加可读权限</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chmod u+r,g+r,o+r -R text&#x2F; -c</code></pre>\n\n<p>19、tar 命令</p>\n<p>用来压缩和解压文件。tar 本身不具有压缩功能，只具有打包功能，有关压缩及解压是调用其它的功能来完成。</p>\n<p>弄清两个概念：打包和压缩。打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过一些压缩算法变成一个小文件</p>\n<p><strong>常用参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-c 建立新的压缩文件\n-f 指定压缩文件\n-r 添加文件到已经压缩文件包中\n-u 添加改了和现有的文件到压缩包中\n-x 从压缩包中抽取文件\n-t 显示压缩文件中的内容\n-z 支持gzip压缩\n-j 支持bzip2压缩\n-Z 支持compress解压文件\n-v 显示操作过程</code></pre>\n\n<p>有关 gzip 及 bzip2 压缩:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">gzip 实例：压缩 gzip fileName .tar.gz 和.tgz  解压：gunzip filename.gz 或 gzip -d filename.gz\n          对应：tar zcvf filename.tar.gz     tar zxvf filename.tar.gz\n\nbz2实例：压缩 bzip2 -z filename .tar.bz2 解压：bunzip filename.bz2或bzip -d filename.bz2\n       对应：tar jcvf filename.tar.gz         解压：tar jxvf filename.tar.bz2</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）将文件全部打包成 tar 包</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tar -cvf log.tar 1.log,2.log 或tar -cvf log.*</code></pre>\n\n<p>（2）将 &#x2F;etc 下的所有文件及目录打包到指定目录，并使用 gz 压缩</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tar -zcvf &#x2F;tmp&#x2F;etc.tar.gz &#x2F;etc</code></pre>\n\n<p>（3）查看刚打包的文件内容（一定加z，因为是使用 gzip 压缩的）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tar -ztvf &#x2F;tmp&#x2F;etc.tar.gz</code></pre>\n\n<p>（4）要压缩打包 &#x2F;home, &#x2F;etc ，但不要 &#x2F;home&#x2F;dmtsai</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tar --exclude &#x2F;home&#x2F;dmtsai -zcvf myfile.tar.gz &#x2F;home&#x2F;* &#x2F;etc</code></pre>\n\n<h4 id=\"chown-命令\"><a href=\"#chown-命令\" class=\"headerlink\" title=\"chown 命令\"></a>chown 命令</h4><p>chown 将指定文件的拥有者改为指定的用户或组，用户可以是用户名或者用户 ID；组可以是组名或者组 ID；文件是以空格分开的要改变权限的文件列表，支持通配符。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-c 显示更改的部分的信息\n-R 处理指定目录及子目录</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）改变拥有者和群组 并显示改变信息</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chown -c mail:mail log2012.log</code></pre>\n\n<p>（2）改变文件群组</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chown -c :mail t.log</code></pre>\n\n<p>（3）改变文件夹及子文件目录属主及属组为 mail</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chown -cR mail: test&#x2F;</code></pre>\n\n<h4 id=\"df-命令\"><a href=\"#df-命令\" class=\"headerlink\" title=\"df 命令\"></a>df 命令</h4><p>显示磁盘空间使用情况。获取硬盘被占用了多少空间，目前还剩下多少空间等信息，如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示。默认情况下，磁盘空间将以 1KB 为单位进行显示，除非环境变量 POSIXLY_CORRECT 被指定，那样将以512字节为单位进行显示：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-a 全部文件系统列表\n-h 以方便阅读的方式显示信息\n-i 显示inode信息\n-k 区块为1024字节\n-l 只显示本地磁盘\n-T 列出文件系统类型</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）显示磁盘使用情况</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">df -l</code></pre>\n\n<p>（2）以易读方式列出所有文件系统及其类型</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">df -haT</code></pre>\n\n<h4 id=\"du-命令\"><a href=\"#du-命令\" class=\"headerlink\" title=\"du 命令\"></a>du 命令</h4><p>du 命令也是查看使用空间的，但是与 df 命令不同的是 Linux du 命令是对文件和目录磁盘使用的空间的查看：</p>\n<p>命令格式：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">du [选项] [文件]</code></pre>\n\n<p><strong>常用参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-a 显示目录中所有文件大小\n-k 以KB为单位显示文件大小\n-m 以MB为单位显示文件大小\n-g 以GB为单位显示文件大小\n-h 以易读方式显示文件大小\n-s 仅显示总计\n-c或--total  除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）以易读方式显示文件夹内及子文件夹大小</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">du -h scf&#x2F;</code></pre>\n\n<p>（2）以易读方式显示文件夹内所有文件大小</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">du -ah scf&#x2F;</code></pre>\n\n<p>（3）显示几个文件或目录各自占用磁盘空间的大小，还统计它们的总和</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">du -hc test&#x2F; scf&#x2F;</code></pre>\n\n<p>（4）输出当前目录下各个子目录所使用的空间</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">du -hc --max-depth&#x3D;1 scf&#x2F;</code></pre>\n\n<h4 id=\"ln-命令\"><a href=\"#ln-命令\" class=\"headerlink\" title=\"ln 命令\"></a>ln 命令</h4><p>功能是为文件在另外一个位置建立一个同步的链接，当在不同目录需要该问题时，就不需要为每一个目录创建同样的文件，通过 ln 创建的链接（link）减少磁盘占用量。</p>\n<p>链接分类：软件链接及硬链接</p>\n<p>软链接：</p>\n<ul>\n<li>1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式</li>\n<li>2.软链接可以 跨文件系统 ，硬链接不可以</li>\n<li>3.软链接可以对一个不存在的文件名进行链接</li>\n<li>4.软链接可以对目录进行链接</li>\n</ul>\n<p>硬链接:</p>\n<ul>\n<li>1.硬链接，以文件副本的形式存在。但不占用实际空间。</li>\n<li>2.不允许给目录创建硬链接</li>\n<li>3.硬链接只有在同一个文件系统中才能创建</li>\n</ul>\n<p><strong>需要注意：</strong></p>\n<ul>\n<li>第一：ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化；</li>\n<li>第二：ln的链接又分软链接和硬链接两种，软链接就是ln –s 源文件 目标文件，它只会在你选定的位置上生成一个文件的镜像，不会占用磁盘空间，硬链接 ln 源文件 目标文件，没有参数-s， 它会在你选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。</li>\n<li>第三：ln指令用在链接文件或目录，如同时指定两个以上的文件或目录，且最后的目的地是一个已经存在的目录，则会把前面指定的所有文件或目录复制到该目录中。若同时指定多个文件或目录，且最后的目的地并非是一个已存在的目录，则会出现错误信息。</li>\n</ul>\n<p><strong>常用参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-b 删除，覆盖以前建立的链接\n-s 软链接（符号链接）\n-v 显示详细处理过程</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）给文件创建软链接，并显示操作信息</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ln -sv source.log link.log</code></pre>\n\n<p>（2）给文件创建硬链接，并显示操作信息</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ln -v source.log link1.log</code></pre>\n\n<p>（3）给目录创建软链接</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ln -sv &#x2F;opt&#x2F;soft&#x2F;test&#x2F;test3 &#x2F;opt&#x2F;soft&#x2F;test&#x2F;test5</code></pre>\n\n<h4 id=\"date-命令\"><a href=\"#date-命令\" class=\"headerlink\" title=\"date 命令\"></a>date 命令</h4><p>显示或设定系统的日期与时间。</p>\n<p>命令参数：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-d&lt;字符串&gt; 　显示字符串所指的日期与时间。字符串前后必须加上双引号。\n-s&lt;字符串&gt; 　根据字符串来设置日期与时间。字符串前后必须加上双引号。\n-u 　显示GMT。\n%H 小时(00-23)\n%I 小时(00-12)\n%M 分钟(以00-59来表示)\n%s 总秒数。起算时间为1970-01-01 00:00:00 UTC。\n%S 秒(以本地的惯用法来表示)\n%a 星期的缩写。\n%A 星期的完整名称。\n%d 日期(以01-31来表示)。\n%D 日期(含年月日)。\n%m 月份(以01-12来表示)。\n%y 年份(以00-99来表示)。\n%Y 年份(以四位数来表示)。</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）显示下一天</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">date +%Y%m%d --date&#x3D;&quot;+1 day&quot;  &#x2F;&#x2F;显示下一天的日期</code></pre>\n\n<p>（2）-d参数使用</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">date -d &quot;nov 22&quot;  今年的 11 月 22 日是星期三\ndate -d &#39;2 weeks&#39; 2周后的日期\ndate -d &#39;next monday&#39; (下周一的日期)\ndate -d next-day +%Y%m%d（明天的日期）或者：date -d tomorrow +%Y%m%d\ndate -d last-day +%Y%m%d(昨天的日期) 或者：date -d yesterday +%Y%m%d\ndate -d last-month +%Y%m(上个月是几月)\ndate -d next-month +%Y%m(下个月是几月)</code></pre>\n\n<h4 id=\"cal-命令\"><a href=\"#cal-命令\" class=\"headerlink\" title=\"cal 命令\"></a>cal 命令</h4><p>可以用户显示公历（阳历）日历如只有一个参数，则表示年份(1-9999)，如有两个参数，则表示月份和年份：</p>\n<p>常用参数：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-3 显示前一月，当前月，后一月三个月的日历\n-m 显示星期一为第一列\n-j 显示在当前年第几天\n-y [year]显示当前年[year]份的日历</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）显示指定年月日期</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cal 9 2012</code></pre>\n\n<p>（2）显示2013年每个月日历</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cal -y 2013</code></pre>\n\n<p>（3）将星期一做为第一列,显示前中后三月</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cal -3m</code></pre>\n\n<h4 id=\"grep-命令\"><a href=\"#grep-命令\" class=\"headerlink\" title=\"grep 命令\"></a>grep 命令</h4><p>强大的文本搜索命令，grep(Global Regular Expression Print) 全局正则表达式搜索。</p>\n<p>grep 的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到标准输出，不影响原文件内容。</p>\n<p>命令格式：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">grep [option] pattern file|dir</code></pre>\n\n<p>常用参数：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-A n --after-context显示匹配字符后n行\n-B n --before-context显示匹配字符前n行\n-C n --context 显示匹配字符前后n行\n-c --count 计算符合样式的列数\n-i 忽略大小写\n-l 只列出文件内容符合指定的样式的文件名称\n-f 从文件中读取关键词\n-n 显示匹配内容的所在文件中行数\n-R 递归查找文件夹</code></pre>\n\n<p>grep 的规则表达式:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">^  #锚定行的开始 如：&#39;^grep&#39;匹配所有以grep开头的行。 \n$  #锚定行的结束 如：&#39;grep$&#39;匹配所有以grep结尾的行。 \n.  #匹配一个非换行符的字符 如：&#39;gr.p&#39;匹配gr后接一个任意字符，然后是p。  \n*  #匹配零个或多个先前字符 如：&#39;*grep&#39;匹配所有一个或多个空格后紧跟grep的行。\n.*   #一起用代表任意字符。  \n[]   #匹配一个指定范围内的字符，如&#39;[Gg]rep&#39;匹配Grep和grep。 \n[^]  #匹配一个不在指定范围内的字符，如：&#39;[^A-FH-Z]rep&#39;匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。  \n\\(..\\)  #标记匹配字符，如&#39;\\(love\\)&#39;，love被标记为1。   \n\\&lt;      #锚定单词的开始，如:&#39;\\&lt;grep&#39;匹配包含以grep开头的单词的行。\n\\&gt;      #锚定单词的结束，如&#39;grep\\&gt;&#39;匹配包含以grep结尾的单词的行。\nx\\&#123;m\\&#125;  #重复字符x，m次，如：&#39;0\\&#123;5\\&#125;&#39;匹配包含5个o的行。 \nx\\&#123;m,\\&#125;  #重复字符x,至少m次，如：&#39;o\\&#123;5,\\&#125;&#39;匹配至少有5个o的行。  \nx\\&#123;m,n\\&#125;  #重复字符x，至少m次，不多于n次，如：&#39;o\\&#123;5,10\\&#125;&#39;匹配5--10个o的行。  \n\\w    #匹配文字和数字字符，也就是[A-Za-z0-9]，如：&#39;G\\w*p&#39;匹配以G后跟零个或多个文字或数字字符，然后是p。  \n\\W    #\\w的反置形式，匹配一个或多个非单词字符，如点号句号等。  \n\\b    #单词锁定符，如: &#39;\\bgrep\\b&#39;只匹配grep。</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）查找指定进程</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps -ef | grep svn</code></pre>\n\n<p>（2）查找指定进程个数</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps -ef | grep svn -c</code></pre>\n\n<p>（3）从文件中读取关键词</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cat test1.txt | grep -f key.log</code></pre>\n\n<p>（4）从文件夹中递归查找以grep开头的行，并只列出文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">grep -lR &#39;^grep&#39; &#x2F;tmp</code></pre>\n\n<p>（5）查找非x开关的行内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">grep &#39;^[^x]&#39; test.txt</code></pre>\n\n<p>（6）显示包含 ed 或者 at 字符的内容行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">grep -E &#39;ed|at&#39; test.txt</code></pre>\n\n<p>wc(word count)功能为统计指定的文件中字节数、字数、行数，并将统计结果输出</p>\n<p>命令格式：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wc [option] file..</code></pre>\n\n<p><strong>命令参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-c 统计字节数\n-l 统计行数\n-m 统计字符数\n-w 统计词数，一个字被定义为由空白、跳格或换行字符分隔的字符串</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）查找文件的 行数 单词数 字节数 文件名</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wc text.txt</code></pre>\n\n<p>结果：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">7     8     70     test.txt</code></pre>\n\n<p>（2）统计输出结果的行数</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cat test.txt | wc -l</code></pre>\n\n<h4 id=\"ps-命令\"><a href=\"#ps-命令\" class=\"headerlink\" title=\"ps 命令\"></a>ps 命令</h4><p>ps(process status)，用来查看当前运行的进程状态，一次性查看，如果需要动态连续结果使用 top</p>\n<p>linux上进程有5种状态:</p>\n<ul>\n<li>\\1. 运行(正在运行或在运行队列中等待)</li>\n<li>\\2. 中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)</li>\n<li>\\3. 不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)</li>\n<li>\\4. 僵死(进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)</li>\n<li>\\5. 停止(进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行)</li>\n</ul>\n<p>ps 工具标识进程的5种状态码:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">D 不可中断 uninterruptible sleep (usually IO)\nR 运行 runnable (on run queue)\nS 中断 sleeping\nT 停止 traced or stopped\nZ 僵死 a defunct (”zombie”) process</code></pre>\n\n<p><strong>命令参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-A 显示所有进程\na 显示所有进程\n-a 显示同一终端下所有进程\nc 显示进程真实名称\ne 显示环境变量\nf 显示进程间的关系\nr 显示当前终端运行的进程\n-aux 显示所有包含其它使用的进程</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）显示当前所有进程环境变量及进程间关系</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps -ef</code></pre>\n\n<p>（2）显示当前所有进程</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps -A</code></pre>\n\n<p>（3）与grep联用查找某进程</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps -aux | grep apache</code></pre>\n\n<p>（4）找出与 cron 与 syslog 这两个服务有关的 PID 号码</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps aux | grep &#39;(cron|syslog)&#39;</code></pre>\n\n<p>29、top 命令</p>\n<p>显示当前系统正在执行的进程的相关信息，包括进程 ID、内存占用率、CPU 占用率等</p>\n<p><strong>常用参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-c 显示完整的进程命令\n-s 保密模式\n-p &lt;进程号&gt; 指定进程显示\n-n &lt;次数&gt;循环显示次数</code></pre>\n\n<p>实例：</p>\n<p><strong>（1）</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">top - 14:06:23 up 70 days, 16:44,  2 users,  load average: 1.25, 1.32, 1.35\nTasks: 206 total,   1 running, 205 sleeping,   0 stopped,   0 zombie\nCpu(s):  5.9%us,  3.4%sy,  0.0%ni, 90.4%id,  0.0%wa,  0.0%hi,  0.2%si,  0.0%st\nMem:  32949016k total, 14411180k used, 18537836k free,   169884k buffers\nSwap: 32764556k total,        0k used, 32764556k free,  3612636k cached\nPID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND  \n28894 root      22   0 1501m 405m  10m S 52.2  1.3   2534:16 java  </code></pre>\n\n<p>前五行是当前系统情况整体的统计信息区。</p>\n<p><strong>第一行，任务队列信息，同 uptime 命令的执行结果，具体参数说明情况如下：</strong></p>\n<p>14:06:23 — 当前系统时间</p>\n<p>up 70 days, 16:44 — 系统已经运行了70天16小时44分钟（在这期间系统没有重启过的吆！）</p>\n<p>2 users — 当前有2个用户登录系统</p>\n<p>load average: 1.15, 1.42, 1.44 — load average后面的三个数分别是1分钟、5分钟、15分钟的负载情况。</p>\n<p>load average数据是每隔5秒钟检查一次活跃的进程数，然后按特定算法计算出的数值。如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了。</p>\n<p><strong>第二行，Tasks — 任务（进程），具体信息说明如下：</strong></p>\n<p>系统现在共有206个进程，其中处于运行中的有1个，205个在休眠（sleep），stoped状态的有0个，zombie状态（僵尸）的有0个。</p>\n<p><strong>第三行，cpu状态信息，具体属性说明如下：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">5.9%us — 用户空间占用CPU的百分比。\n3.4% sy — 内核空间占用CPU的百分比。\n0.0% ni — 改变过优先级的进程占用CPU的百分比\n90.4% id — 空闲CPU百分比\n0.0% wa — IO等待占用CPU的百分比\n0.0% hi — 硬中断（Hardware IRQ）占用CPU的百分比\n0.2% si — 软中断（Software Interrupts）占用CPU的百分比</code></pre>\n\n<p><strong>备注：</strong>在这里CPU的使用比率和windows概念不同，需要理解linux系统用户空间和内核空间的相关知识！</p>\n<p>第四行，内存状态，具体信息如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">32949016k total — 物理内存总量（32GB）\n14411180k used — 使用中的内存总量（14GB）\n18537836k free — 空闲内存总量（18GB）\n169884k buffers — 缓存的内存量 （169M）</code></pre>\n\n<p><strong>第五行，swap交换分区信息，具体信息说明如下：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">32764556k total — 交换区总量（32GB）\n0k used — 使用的交换区总量（0K）\n32764556k free — 空闲交换区总量（32GB）\n3612636k cached — 缓冲的交换区总量（3.6GB）</code></pre>\n\n<p><strong>第六行，空行。</strong></p>\n<p><strong>第七行以下：各进程（任务）的状态监控，项目列信息说明如下：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">PID — 进程id\nUSER — 进程所有者\nPR — 进程优先级\nNI — nice值。负值表示高优先级，正值表示低优先级\nVIRT — 进程使用的虚拟内存总量，单位kb。VIRT&#x3D;SWAP+RES\nRES — 进程使用的、未被换出的物理内存大小，单位kb。RES&#x3D;CODE+DATA\nSHR — 共享内存大小，单位kb\nS — 进程状态。D&#x3D;不可中断的睡眠状态 R&#x3D;运行 S&#x3D;睡眠 T&#x3D;跟踪&#x2F;停止 Z&#x3D;僵尸进程\n%CPU — 上次更新到现在的CPU时间占用百分比\n%MEM — 进程使用的物理内存百分比\nTIME+ — 进程使用的CPU时间总计，单位1&#x2F;100秒\nCOMMAND — 进程名称（命令名&#x2F;命令行）</code></pre>\n\n<p><strong>top 交互命令</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">h 显示top交互命令帮助信息\nc 切换显示命令名称和完整命令行\nm 以内存使用率排序\nP 根据CPU使用百分比大小进行排序\nT 根据时间&#x2F;累计时间进行排序\nW 将当前设置写入~&#x2F;.toprc文件中\no或者O 改变显示项目的顺序</code></pre>\n\n<h4 id=\"kill-命令\"><a href=\"#kill-命令\" class=\"headerlink\" title=\"kill 命令\"></a>kill 命令</h4><p>发送指定的信号到相应进程。不指定型号将发送SIGTERM（15）终止指定进程。如果任无法终止该程序可用”-KILL” 参数，其发送的信号为SIGKILL(9) ，将强制结束进程，使用ps命令或者jobs 命令可以查看进程号。root用户将影响用户的进程，非root用户只能影响自己的进程。</p>\n<p><strong>常用参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-l  信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称\n-a  当处理当前进程时，不限制命令名和进程号的对应关系\n-p  指定kill 命令只打印相关进程的进程号，而不发送任何信号\n-s  指定发送信号\n-u  指定用户</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）先使用ps查找进程pro1，然后用kill杀掉</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">kill -9 $(ps -ef | grep pro1)</code></pre>\n\n<h4 id=\"free-命令\"><a href=\"#free-命令\" class=\"headerlink\" title=\"free 命令\"></a>free 命令</h4><p>显示系统内存使用情况，包括物理内存、交互区内存(swap)和内核缓冲区内存。</p>\n<p><strong>命令参数：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-b 以Byte显示内存使用情况\n-k 以kb为单位显示内存使用情况\n-m 以mb为单位显示内存使用情况\n-g 以gb为单位显示内存使用情况\n-s&lt;间隔秒数&gt; 持续显示内存\n-t 显示内存使用总合</code></pre>\n\n<p><strong>实例：</strong></p>\n<p>（1）显示内存使用情况</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">free\nfree -k\nfree -m</code></pre>\n\n<p>（2）以总和的形式显示内存的使用信息</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">free -t</code></pre>\n\n<p>（3）周期性查询内存使用情况</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">free -s 10</code></pre>\n\n\n\n<h2 id=\"五-文本编辑器vi的使用\"><a href=\"#五-文本编辑器vi的使用\" class=\"headerlink\" title=\"五:文本编辑器vi的使用\"></a>五:文本编辑器vi的使用</h2><h3 id=\"文本文件的创建\"><a href=\"#文本文件的创建\" class=\"headerlink\" title=\"文本文件的创建\"></a>文本文件的创建</h3><h4 id=\"在Linux上使用重定向符（-gt-）创建一个文件\"><a href=\"#在Linux上使用重定向符（-gt-）创建一个文件\" class=\"headerlink\" title=\"在Linux上使用重定向符（&gt;）创建一个文件\"></a>在Linux上使用重定向符（&gt;）创建一个文件</h4><p>标准重定向符允许我们创建一个0KB的空文件。它通常用于重定向一个命令的输出到一个新文件中。在没有命令的情况下使用重定向符时，它会创建一个文件。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@mycentos test]# &gt; test.txt 111\n-bash: 111: command not found\n[root@mycentos test]# &gt; test.txt\n[root@mycentos test]# ls\ntest.txt\n[root@mycentos test]# cat test.txt\n[root@mycentos test]# </code></pre>\n\n<h4 id=\"在Linux上使用touch命令创建一个文件\"><a href=\"#在Linux上使用touch命令创建一个文件\" class=\"headerlink\" title=\"在Linux上使用touch命令创建一个文件\"></a>在Linux上使用touch命令创建一个文件</h4><p>touch命令常用于将每个文件的访问和修改时间更新为当前时间。<br>如果指定文件名不存在，就将新建一个文件。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@mycentos test]# touch test2.txt\n[root@mycentos test]# ls\ntest2.txt  test.txt\n[root@mycentos test]# </code></pre>\n\n<h4 id=\"在linux上使用echo命令创建一个文件\"><a href=\"#在linux上使用echo命令创建一个文件\" class=\"headerlink\" title=\"在linux上使用echo命令创建一个文件\"></a>在linux上使用echo命令创建一个文件</h4><p>echo内置于大多数操作系统中，他常用于脚本，批处理文件，以及作为插入文本的单个命令的一部分。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@mycentos test]# echo &quot;111&quot; &gt; test3.txt\n[root@mycentos test]# ls\ntest2.txt  test3.txt  test.txt\n[root@mycentos test]# cat test3.txt\n111</code></pre>\n\n<p>或者</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@mycentos test]# cat &gt; test6.txt &lt;&lt; end\n&gt; 1\n&gt; 2\n&gt; 3\n&gt; end\n[root@mycentos test]# cat test6.txt\n1\n2\n3\n[root@mycentos test]# </code></pre>\n\n<h4 id=\"在linux中使用cat创建一个文件\"><a href=\"#在linux中使用cat创建一个文件\" class=\"headerlink\" title=\"在linux中使用cat创建一个文件\"></a>在linux中使用cat创建一个文件</h4><p>cat表示串联concatrenate。在linux中进场用于读取一个文件中的数据。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@mycentos test]# cat &gt; test4.txt\n111\n222\n333^C\n[root@mycentos test]# ls\ntest2.txt  test3.txt  test4.txt  test.txt\n[root@mycentos test]# cat test4.txt\n111\n222\n[root@mycentos test]# </code></pre>\n\n<h4 id=\"在linux中使用vi-x2F-vm命令创建一个文件\"><a href=\"#在linux中使用vi-x2F-vm命令创建一个文件\" class=\"headerlink\" title=\"在linux中使用vi&#x2F;vm命令创建一个文件\"></a>在linux中使用vi&#x2F;vm命令创建一个文件</h4><p>Vim 是从 vi 发展出来的一个文本编辑器。他通常用于编辑所有种类的纯文本。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@mycentos test]# vi test5.txt\n[root@mycentos test]# ls\ntest2.txt  test3.txt  test4.txt  test5.txt  test.txt</code></pre>\n\n\n\n<p><strong>至于vi&#x2F;vim的使用,由于内容极多而且都很重要,所以我直接把菜鸟教程的参考文章贴过来了,反正都是给自己查资料的时候用,能看明白就行</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>文章出处</p>\n<p><a href=\"https://www.runoob.com/linux/linux-vim.html\">https://www.runoob.com/linux/linux-vim.html</a></p></blockquote>\n<h3 id=\"Linux-vi-x2F-vim\"><a href=\"#Linux-vi-x2F-vim\" class=\"headerlink\" title=\"Linux vi&#x2F;vim\"></a>Linux vi&#x2F;vim</h3><p>所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。</p>\n<p>但是目前我们使用比较多的是 vim 编辑器。</p>\n<p>vim 具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性，方便程序设计。</p>\n<p>相关文章：<a href=\"https://www.runoob.com/w3cnote/all-vim-cheatsheat.html\">史上最全Vim快捷键键位图 — 入门到进阶</a></p>\n<hr>\n<h4 id=\"什么是-vim？\"><a href=\"#什么是-vim？\" class=\"headerlink\" title=\"什么是 vim？\"></a>什么是 vim？</h4><p>Vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p>\n<p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。</p>\n<p>连 vim 的官方网站 (<a href=\"https://www.vim.org/\">https://www.vim.org/</a>) 自己也说 vim 是一个程序开发工具而不是文字处理软件。</p>\n<p>vim 键盘图：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/vi-vim-cheat-sheet-sch.gif\" alt=\"img\"></p>\n<hr>\n<h4 id=\"vi-x2F-vim-的使用\"><a href=\"#vi-x2F-vim-的使用\" class=\"headerlink\" title=\"vi&#x2F;vim 的使用\"></a>vi&#x2F;vim 的使用</h4><p>基本上 vi&#x2F;vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。 这三种模式的作用分别是：</p>\n<h5 id=\"命令模式：\"><a href=\"#命令模式：\" class=\"headerlink\" title=\"命令模式：\"></a>命令模式：</h5><p>用户刚刚启动 vi&#x2F;vim，便进入了命令模式。</p>\n<p>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</p>\n<p>以下是常用的几个命令：</p>\n<ul>\n<li><strong>i</strong> 切换到输入模式，以输入字符。</li>\n<li><strong>x</strong> 删除当前光标所在处的字符。</li>\n<li><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。</li>\n</ul>\n<p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</p>\n<p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p>\n<h5 id=\"输入模式\"><a href=\"#输入模式\" class=\"headerlink\" title=\"输入模式\"></a>输入模式</h5><p>在命令模式下按下i就进入了输入模式。</p>\n<p>在输入模式中，可以使用以下按键：</p>\n<ul>\n<li><strong>字符按键以及Shift组合</strong>，输入字符</li>\n<li><strong>ENTER</strong>，回车键，换行</li>\n<li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li>\n<li><strong>DEL</strong>，删除键，删除光标后一个字符</li>\n<li><strong>方向键</strong>，在文本中移动光标</li>\n<li><strong>HOME</strong>&#x2F;<strong>END</strong>，移动光标到行首&#x2F;行尾</li>\n<li><strong>Page Up</strong>&#x2F;<strong>Page Down</strong>，上&#x2F;下翻页</li>\n<li><strong>Insert</strong>，切换光标为输入&#x2F;替换模式，光标将变成竖线&#x2F;下划线</li>\n<li><strong>ESC</strong>，退出输入模式，切换到命令模式</li>\n</ul>\n<h5 id=\"底线命令模式\"><a href=\"#底线命令模式\" class=\"headerlink\" title=\"底线命令模式\"></a>底线命令模式</h5><p>在命令模式下按下:（英文冒号）就进入了底线命令模式。</p>\n<p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p>\n<p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p>\n<ul>\n<li>q 退出程序</li>\n<li>w 保存文件</li>\n</ul>\n<p>按ESC键可随时退出底线命令模式。</p>\n<p>简单的说，我们可以将这三个模式想成底下的图标来表示：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/vim-vi-workmodel.png\" alt=\"img\"></p>\n<hr>\n<h4 id=\"vi-x2F-vim-使用实例\"><a href=\"#vi-x2F-vim-使用实例\" class=\"headerlink\" title=\"vi&#x2F;vim 使用实例\"></a>vi&#x2F;vim 使用实例</h4><h5 id=\"使用-vi-x2F-vim-进入一般模式\"><a href=\"#使用-vi-x2F-vim-进入一般模式\" class=\"headerlink\" title=\"使用 vi&#x2F;vim 进入一般模式\"></a>使用 vi&#x2F;vim 进入一般模式</h5><p>如果你想要使用 vi 来建立一个名为 runoob.txt 的文件时，你可以这样做：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ vim runoob.txt</code></pre>\n\n<p>直接输入 <strong>vi 文件名</strong> 就能够进入 vi 的一般模式了。请注意，记得 vi 后面一定要加文件名，不管该文件存在与否！</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/078207F0-B204-4464-AAEF-982F45EDDAE9.jpg\" alt=\"img\"></p>\n<h5 id=\"按下-i-进入输入模式-也称为编辑模式-，开始编辑文字\"><a href=\"#按下-i-进入输入模式-也称为编辑模式-，开始编辑文字\" class=\"headerlink\" title=\"按下 i 进入输入模式(也称为编辑模式)，开始编辑文字\"></a>按下 i 进入输入模式(也称为编辑模式)，开始编辑文字</h5><p>在一般模式之中，只要按下 i, o, a 等字符就可以进入输入模式了！</p>\n<p>在编辑模式当中，你可以发现在左下角状态栏中会出现 –INSERT- 的字样，那就是可以输入任意字符的提示。</p>\n<p>这个时候，键盘上除了 <strong>Esc</strong> 这个按键之外，其他的按键都可以视作为一般的输入按钮了，所以你可以进行任何的编辑。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/1C928383-471E-4AF1-A61E-9E2CCBD5A913.jpg\" alt=\"img\"></p>\n<h5 id=\"按下-ESC-按钮回到一般模式\"><a href=\"#按下-ESC-按钮回到一般模式\" class=\"headerlink\" title=\"按下 ESC 按钮回到一般模式\"></a>按下 ESC 按钮回到一般模式</h5><p>好了，假设我已经按照上面的样式给他编辑完毕了，那么应该要如何退出呢？是的！没错！就是给他按下 <strong>Esc</strong> 这个按钮即可！马上你就会发现画面左下角的 – INSERT – 不见了！</p>\n<h5 id=\"在一般模式中按下-wq-储存后离开-vi\"><a href=\"#在一般模式中按下-wq-储存后离开-vi\" class=\"headerlink\" title=\"在一般模式中按下 :wq 储存后离开 vi\"></a>在一般模式中按下 <strong>:wq</strong> 储存后离开 vi</h5><p>OK，我们要存档了，存盘并离开的指令很简单，输入 <strong>:wq</strong> 即可保存离开！</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/B2FB5146-327C-4019-AC96-DD7A8EE7460C.jpg\" alt=\"img\"></p>\n<p>OK! 这样我们就成功创建了一个 runoob.txt 的文件。</p>\n<hr>\n<h4 id=\"vi-x2F-vim-按键说明\"><a href=\"#vi-x2F-vim-按键说明\" class=\"headerlink\" title=\"vi&#x2F;vim 按键说明\"></a>vi&#x2F;vim 按键说明</h4><p>除了上面简易范例的 i, Esc, :wq 之外，其实 vim 还有非常多的按键可以使用。</p>\n<h5 id=\"第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等\"><a href=\"#第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等\" class=\"headerlink\" title=\"第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等\"></a>第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等</h5><table>\n<thead>\n<tr>\n<th align=\"left\">移动光标的方法</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">h 或 向左箭头键(←)</td>\n<td>光标向左移动一个字符</td>\n</tr>\n<tr>\n<td align=\"left\">j 或 向下箭头键(↓)</td>\n<td>光标向下移动一个字符</td>\n</tr>\n<tr>\n<td align=\"left\">k 或 向上箭头键(↑)</td>\n<td>光标向上移动一个字符</td>\n</tr>\n<tr>\n<td align=\"left\">l 或 向右箭头键(→)</td>\n<td>光标向右移动一个字符</td>\n</tr>\n<tr>\n<td align=\"left\">如果你将右手放在键盘上的话，你会发现 hjkl 是排列在一起的，因此可以使用这四个按钮来移动光标。 如果想要进行多次移动的话，例如向下移动 30 行，可以使用 “30j” 或 “30↓” 的组合按键， 亦即加上想要进行的次数(数字)后，按下动作即可！</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"left\">[Ctrl] + [f]</td>\n<td>屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)</td>\n</tr>\n<tr>\n<td align=\"left\">[Ctrl] + [b]</td>\n<td>屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</td>\n</tr>\n<tr>\n<td align=\"left\">[Ctrl] + [d]</td>\n<td>屏幕『向下』移动半页</td>\n</tr>\n<tr>\n<td align=\"left\">[Ctrl] + [u]</td>\n<td>屏幕『向上』移动半页</td>\n</tr>\n<tr>\n<td align=\"left\">+</td>\n<td>光标移动到非空格符的下一行</td>\n</tr>\n<tr>\n<td align=\"left\">-</td>\n<td>光标移动到非空格符的上一行</td>\n</tr>\n<tr>\n<td align=\"left\">n<space></td>\n<td>那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。例如 20<space> 则光标会向后面移动 20 个字符距离。</td>\n</tr>\n<tr>\n<td align=\"left\">0 或功能键[Home]</td>\n<td>这是数字『 0 』：移动到这一行的最前面字符处 (常用)</td>\n</tr>\n<tr>\n<td align=\"left\">$ 或功能键[End]</td>\n<td>移动到这一行的最后面字符处(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">H</td>\n<td>光标移动到这个屏幕的最上方那一行的第一个字符</td>\n</tr>\n<tr>\n<td align=\"left\">M</td>\n<td>光标移动到这个屏幕的中央那一行的第一个字符</td>\n</tr>\n<tr>\n<td align=\"left\">L</td>\n<td>光标移动到这个屏幕的最下方那一行的第一个字符</td>\n</tr>\n<tr>\n<td align=\"left\">G</td>\n<td>移动到这个档案的最后一行(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">nG</td>\n<td>n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)</td>\n</tr>\n<tr>\n<td align=\"left\">gg</td>\n<td>移动到这个档案的第一行，相当于 1G 啊！ (常用)</td>\n</tr>\n<tr>\n<td align=\"left\">n<Enter></td>\n<td>n 为数字。光标向下移动 n 行(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">搜索替换</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"left\">&#x2F;word</td>\n<td>向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 &#x2F;vbird 即可！ (常用)</td>\n</tr>\n<tr>\n<td align=\"left\">?word</td>\n<td>向光标之上寻找一个字符串名称为 word 的字符串。</td>\n</tr>\n<tr>\n<td align=\"left\">n</td>\n<td>这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 &#x2F;vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td>\n</tr>\n<tr>\n<td align=\"left\">N</td>\n<td>这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 &#x2F;vbird 后，按下 N 则表示『向上』搜寻 vbird 。</td>\n</tr>\n<tr>\n<td align=\"left\">使用 &#x2F;word 配合 n 及 N 是非常有帮助的！可以让你重复的找到一些你搜寻的关键词！</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"left\">:n1,n2s&#x2F;word1&#x2F;word2&#x2F;g</td>\n<td>n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则： 『:100,200s&#x2F;vbird&#x2F;VBIRD&#x2F;g』。(常用)</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>:1,$s&#x2F;word1&#x2F;word2&#x2F;g</strong> 或 <strong>:%s&#x2F;word1&#x2F;word2&#x2F;g</strong></td>\n<td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)</td>\n</tr>\n<tr>\n<td align=\"left\"><strong>:1,$s&#x2F;word1&#x2F;word2&#x2F;gc</strong> 或 <strong>:%s&#x2F;word1&#x2F;word2&#x2F;gc</strong></td>\n<td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">删除、复制与贴上</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"left\">x, X</td>\n<td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)</td>\n</tr>\n<tr>\n<td align=\"left\">nx</td>\n<td>n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。</td>\n</tr>\n<tr>\n<td align=\"left\">dd</td>\n<td>剪切游标所在的那一整行(常用)，用 p&#x2F;P 可以粘贴。</td>\n</tr>\n<tr>\n<td align=\"left\">ndd</td>\n<td>n 为数字。剪切光标所在的向下 n 行，例如 20dd 则是剪切 20 行(常用)，用 p&#x2F;P 可以粘贴。</td>\n</tr>\n<tr>\n<td align=\"left\">d1G</td>\n<td>删除光标所在到第一行的所有数据</td>\n</tr>\n<tr>\n<td align=\"left\">dG</td>\n<td>删除光标所在到最后一行的所有数据</td>\n</tr>\n<tr>\n<td align=\"left\">d$</td>\n<td>删除游标所在处，到该行的最后一个字符</td>\n</tr>\n<tr>\n<td align=\"left\">d0</td>\n<td>那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td>\n</tr>\n<tr>\n<td align=\"left\">yy</td>\n<td>复制游标所在的那一行(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">nyy</td>\n<td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">y1G</td>\n<td>复制游标所在行到第一行的所有数据</td>\n</tr>\n<tr>\n<td align=\"left\">yG</td>\n<td>复制游标所在行到最后一行的所有数据</td>\n</tr>\n<tr>\n<td align=\"left\">y0</td>\n<td>复制光标所在的那个字符到该行行首的所有数据</td>\n</tr>\n<tr>\n<td align=\"left\">y$</td>\n<td>复制光标所在的那个字符到该行行尾的所有数据</td>\n</tr>\n<tr>\n<td align=\"left\">p, P</td>\n<td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)</td>\n</tr>\n<tr>\n<td align=\"left\">J</td>\n<td>将光标所在行与下一行的数据结合成同一行</td>\n</tr>\n<tr>\n<td align=\"left\">c</td>\n<td>重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td>\n</tr>\n<tr>\n<td align=\"left\">u</td>\n<td>复原前一个动作。(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">[Ctrl]+r</td>\n<td>重做上一个动作。(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">这个 u 与 [Ctrl]+r 是很常用的指令！一个是复原，另一个则是重做一次～ 利用这两个功能按键，你的编辑，嘿嘿！很快乐的啦！</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"left\">.</td>\n<td>不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)</td>\n</tr>\n</tbody></table>\n<h5 id=\"第二部分：一般模式切换到编辑模式的可用的按钮说明\"><a href=\"#第二部分：一般模式切换到编辑模式的可用的按钮说明\" class=\"headerlink\" title=\"第二部分：一般模式切换到编辑模式的可用的按钮说明\"></a>第二部分：一般模式切换到编辑模式的可用的按钮说明</h5><table>\n<thead>\n<tr>\n<th align=\"left\">进入输入或取代的编辑模式</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">i, I</td>\n<td>进入输入模式(Insert mode)： i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)</td>\n</tr>\n<tr>\n<td align=\"left\">a, A</td>\n<td>进入输入模式(Insert mode)： a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">o, O</td>\n<td>进入输入模式(Insert mode)： 这是英文字母 o 的大小写。o 为在目前光标所在的下一行处输入新的一行； O 为在目前光标所在的上一行处输入新的一行！(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">r, R</td>\n<td>进入取代模式(Replace mode)： r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">上面这些按键中，在 vi 画面的左下角处会出现『–INSERT–』或『–REPLACE–』的字样。 由名称就知道该动作了吧！！特别注意的是，我们上面也提过了，你想要在档案里面输入字符时， 一定要在左下角处看到 INSERT 或 REPLACE 才能输入喔！</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"left\">[Esc]</td>\n<td>退出编辑模式，回到一般模式中(常用)</td>\n</tr>\n</tbody></table>\n<h5 id=\"第三部分：一般模式切换到指令行模式的可用的按钮说明\"><a href=\"#第三部分：一般模式切换到指令行模式的可用的按钮说明\" class=\"headerlink\" title=\"第三部分：一般模式切换到指令行模式的可用的按钮说明\"></a>第三部分：一般模式切换到指令行模式的可用的按钮说明</h5><table>\n<thead>\n<tr>\n<th align=\"left\">指令行的储存、离开等指令</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">:w</td>\n<td>将编辑的数据写入硬盘档案中(常用)</td>\n</tr>\n<tr>\n<td align=\"left\">:w!</td>\n<td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</td>\n</tr>\n<tr>\n<td align=\"left\">:q</td>\n<td>离开 vi (常用)</td>\n</tr>\n<tr>\n<td align=\"left\">:q!</td>\n<td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td>\n</tr>\n<tr>\n<td align=\"left\">注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"left\">:wq</td>\n<td>储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td>\n</tr>\n<tr>\n<td align=\"left\">ZZ</td>\n<td>这是大写的 Z 喔！如果修改过，保存当前文件，然后退出！效果等同于(保存并退出)</td>\n</tr>\n<tr>\n<td align=\"left\">ZQ</td>\n<td>不保存，强制退出。效果等同于 **:q!**。</td>\n</tr>\n<tr>\n<td align=\"left\">:w [filename]</td>\n<td>将编辑的数据储存成另一个档案（类似另存新档）</td>\n</tr>\n<tr>\n<td align=\"left\">:r [filename]</td>\n<td>在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面</td>\n</tr>\n<tr>\n<td align=\"left\">:n1,n2 w [filename]</td>\n<td>将 n1 到 n2 的内容储存成 filename 这个档案。</td>\n</tr>\n<tr>\n<td align=\"left\">:! command</td>\n<td>暂时离开 vi 到指令行模式下执行 command 的显示结果！例如 『:! ls &#x2F;home』即可在 vi 当中察看 &#x2F;home 底下以 ls 输出的档案信息！</td>\n</tr>\n<tr>\n<td align=\"left\">vim 环境的变更</td>\n<td></td>\n</tr>\n<tr>\n<td align=\"left\">:set nu</td>\n<td>显示行号，设定之后，会在每一行的前缀显示该行的行号</td>\n</tr>\n<tr>\n<td align=\"left\">:set nonu</td>\n<td>与 set nu 相反，为取消行号！</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230115130043917.png\" alt=\"image-20230115130043917\"></p>\n<p>特别注意，在 vi&#x2F;vim 中，数字是很有意义的！数字通常代表重复做几次的意思！ 也有可能是代表去到第几个什么什么的意思。</p>\n<p>举例来说，要删除 50 行，则是用 『50dd』 对吧！ 数字加在动作之前，如我要向下移动 20 行呢？那就是『20j』或者是『20↓』即可。</p>\n<h3 id=\"用vi修改IP地址为静态IP\"><a href=\"#用vi修改IP地址为静态IP\" class=\"headerlink\" title=\"用vi修改IP地址为静态IP\"></a>用vi修改IP地址为静态IP</h3><p>默认情况下,Linux的IP地址为DHCP动态分配,而面向服务器应用场景,通常建议设置为静态IP,操作步骤如下</p>\n<h4 id=\"查看默认网关\"><a href=\"#查看默认网关\" class=\"headerlink\" title=\"查看默认网关\"></a>查看默认网关</h4><p><code>ip route</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@mycentos opt]# ip route\ndefault via 192.168.2.1 dev ens33 proto static metric 100 \n192.168.2.0&#x2F;24 dev ens33 proto kernel scope link src 192.168.2.112 metric 100 </code></pre>\n\n<p>即网关地址为:192.168.2.1</p>\n<p>dns如果没有指定的话可以设置成网关地址,也可以用公网的dns服务器,比如<code>114.114.114.114</code>,<code>8.8.8.8</code></p>\n<h4 id=\"确认动态IP地址及网段等信息\"><a href=\"#确认动态IP地址及网段等信息\" class=\"headerlink\" title=\"确认动态IP地址及网段等信息\"></a>确认动态IP地址及网段等信息</h4><p><code>ip addr</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@mycentos opt]# ip a\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1&#x2F;8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1&#x2F;128 scope host \n       valid_lft forever preferred_lft forever\n2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link&#x2F;ether 00:0c:29:e2:e2:23 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.2.112&#x2F;24 brd 192.168.2.255 scope global noprefixroute ens33\n       valid_lft forever preferred_lft forever\n    inet6 fe80::c94b:6002:cc54:64ca&#x2F;64 scope link noprefixroute \n       valid_lft forever preferred_lft forever</code></pre>\n\n<h4 id=\"使用vi编辑静态IP地址\"><a href=\"#使用vi编辑静态IP地址\" class=\"headerlink\" title=\"使用vi编辑静态IP地址\"></a>使用vi编辑静态IP地址</h4><p>运行命令<code>vi /etc/sysconfig/network-scripts/ifcfg-ens33</code>其中ens33与ip addr看到的网上编号保持一致</p>\n<p>原来应该是这样的</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230115131946172.png\" alt=\"image-20230115131946172\"></p>\n<p>这里我已经修改过了</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">TBLBMCNYPE&#x3D;&quot;Ethernet&quot;\nPROXY_METHOD&#x3D;&quot;none&quot;\nBROWSER_ONLY&#x3D;&quot;no&quot;\n#BOOTPROTO&#x3D;&quot;dhcp&quot;\nBOOTPROTO&#x3D;&quot;static&quot;\nDEFROUTE&#x3D;&quot;yes&quot;\nIPV4_FAILURE_FATAL&#x3D;&quot;no&quot;\nIPV6INIT&#x3D;&quot;yes&quot;\nIPV6_AUTOCONF&#x3D;&quot;yes&quot;\nIPV6_DEFROUTE&#x3D;&quot;yes&quot;\nIPV6_FAILURE_FATAL&#x3D;&quot;no&quot;\nIPV6_ADDR_GEN_MODE&#x3D;&quot;stable-privacy&quot;\nNAME&#x3D;&quot;ens33&quot;\nUUID&#x3D;&quot;571e6521-373a-4fb4-a76f-e9cb7f85afe9&quot;\nDEVICE&#x3D;&quot;ens33&quot;\nONBOOT&#x3D;&quot;yes&quot;\nIPADDR&#x3D;&quot;192.168.2.112&quot;\nNETMASK&#x3D;&quot;255.255.255.0&quot;\nGATEWAY&#x3D;&quot;192.168.2.1&quot;\nDNS1&#x3D;&quot;192.168.2.1&quot;\nDNS2&#x3D;&quot;114.114.114.114&quot;\n~                    </code></pre>\n\n<h4 id=\"重启网卡-配置生效\"><a href=\"#重启网卡-配置生效\" class=\"headerlink\" title=\"重启网卡,配置生效\"></a>重启网卡,配置生效</h4><p><code>systemctl restart network</code></p>\n<p>可以ping一下百度检测是否修改成功</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@mycentos opt]# ping www.baidu.com\nPING www.baidu.com (39.156.66.18) 56(84) bytes of data.\n64 bytes from 39.156.66.18 (39.156.66.18): icmp_seq&#x3D;1 ttl&#x3D;51 time&#x3D;41.9 ms\n64 bytes from 39.156.66.18 (39.156.66.18): icmp_seq&#x3D;2 ttl&#x3D;51 time&#x3D;42.0 ms\n64 bytes from 39.156.66.18 (39.156.66.18): icmp_seq&#x3D;3 ttl&#x3D;51 time&#x3D;42.2 ms</code></pre>\n\n\n\n<h2 id=\"六-文件和文件夹的操作\"><a href=\"#六-文件和文件夹的操作\" class=\"headerlink\" title=\"六:文件和文件夹的操作\"></a>六:文件和文件夹的操作</h2><p>其实具体命令可以参考上文的Linux系统操作,这里就链接几篇写得比较详细的文章</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://blog.csdn.net/luorufeng/article/details/84765059\">https://blog.csdn.net/luorufeng/article/details/84765059</a></p>\n<p><a href=\"https://blog.csdn.net/numbibi/article/details/8026841\">https://blog.csdn.net/numbibi/article/details/8026841</a></p>\n<p><a href=\"https://www.woniuxy.com/book/reading/214\">https://www.woniuxy.com/book/reading/214</a></p></blockquote>\n<p>补充:</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230115143109464.png\" alt=\"image-20230115143109464\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230115143119258.png\" alt=\"image-20230115143119258\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230115143137248.png\" alt=\"image-20230115143137248\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230115143149016.png\" alt=\"image-20230115143149016\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230115143158556.png\" alt=\"image-20230115143158556\"></p>\n<h2 id=\"七-用户与用户组权限\"><a href=\"#七-用户与用户组权限\" class=\"headerlink\" title=\"七:用户与用户组权限\"></a>七:用户与用户组权限</h2><p><strong>在Linux中,root拥有最高权限,所有文件或者文件夹的权限设定,对root是无效的</strong>.所以在正式的生产环境和服务器中,尽量使用<strong>普通账户+人工授权</strong>的方式，避免出现安全漏洞后被人以root权限利用系统，导致安全问题。对于权限来说，无论是操作系统，还是应用系统，首先<strong>需要具备零信任的意识</strong>，永远使用最小权限进行操作。权限不够时再多授予权限即可。</p>\n<h3 id=\"用户和用户组\"><a href=\"#用户和用户组\" class=\"headerlink\" title=\"用户和用户组\"></a>用户和用户组</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230120180338609.png\" alt=\"image-20230120180338609\"></p>\n<p>Linux系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</p>\n<p>用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。</p>\n<p>每个用户账号都拥有一个唯一的用户名和各自的口令。</p>\n<p>用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录。</p>\n<p>实现用户账号的管理，要完成的工作主要有如下几个方面：</p>\n<ul>\n<li>用户账号的添加、删除与修改。</li>\n<li>用户口令的管理。</li>\n<li>用户组的管理。</li>\n</ul>\n<hr>\n<h4 id=\"一、Linux系统用户账号的管理\"><a href=\"#一、Linux系统用户账号的管理\" class=\"headerlink\" title=\"一、Linux系统用户账号的管理\"></a>一、Linux系统用户账号的管理</h4><p>用户账号的管理工作主要涉及到用户账号的添加、修改和删除。</p>\n<p>添加用户账号就是在系统中创建一个新账号，然后为新账号分配用户号、用户组、主目录和登录Shell等资源。刚添加的账号是被锁定的，无法使用。</p>\n<h5 id=\"1、添加新的用户账号使用useradd命令，其语法如下：\"><a href=\"#1、添加新的用户账号使用useradd命令，其语法如下：\" class=\"headerlink\" title=\"1、添加新的用户账号使用useradd命令，其语法如下：\"></a>1、添加新的用户账号使用useradd命令，其语法如下：</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">useradd 选项 用户名</code></pre>\n\n<p>参数说明：</p>\n<ul>\n<li><p>选项:</p>\n<ul>\n<li>-c comment 指定一段注释性描述。</li>\n<li>-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。</li>\n<li>-g 用户组 指定用户所属的用户组。</li>\n<li>-G 用户组，用户组 指定用户所属的附加组。</li>\n<li>-s Shell文件 指定用户的登录Shell。</li>\n<li>-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。</li>\n</ul>\n</li>\n<li><p>用户名:</p>\n<p>指定新账号的登录名。</p>\n</li>\n</ul>\n<p><strong>实例1</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># useradd –d  &#x2F;home&#x2F;sam -m sam</code></pre>\n\n<p>此命令创建了一个用户sam，其中-d和-m选项用来为登录名sam产生一个主目录 &#x2F;home&#x2F;sam（&#x2F;home为默认的用户主目录所在的父目录）。</p>\n<p><strong>实例2</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># useradd -s &#x2F;bin&#x2F;sh -g group –G adm,root gem</code></pre>\n\n<p>此命令新建了一个用户gem，该用户的登录Shell是 <code>/bin/sh</code>，它属于group用户组，同时又属于adm和root用户组，其中group用户组是其主组。</p>\n<p>这里可能新建组：<code>#groupadd group及groupadd adm</code></p>\n<p>增加用户账号就是在&#x2F;etc&#x2F;passwd文件中为新用户增加一条记录，同时更新其他系统文件如&#x2F;etc&#x2F;shadow, &#x2F;etc&#x2F;group等。</p>\n<p>Linux提供了集成的系统管理工具userconf，它可以用来对用户账号进行统一管理。</p>\n<h5 id=\"2、删除帐号\"><a href=\"#2、删除帐号\" class=\"headerlink\" title=\"2、删除帐号\"></a>2、删除帐号</h5><p>如果一个用户的账号不再使用，可以从系统中删除。删除用户账号就是要将&#x2F;etc&#x2F;passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。</p>\n<p>删除一个已有的用户账号使用<code>userdel</code>命令，其格式如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">userdel 选项 用户名</code></pre>\n\n<p>常用的选项是 <strong>-r</strong>，它的作用是把用户的主目录一起删除。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># userdel -r sam</code></pre>\n\n<p>此命令删除用户sam在系统文件中（主要是&#x2F;etc&#x2F;passwd, &#x2F;etc&#x2F;shadow, &#x2F;etc&#x2F;group等）的记录，同时删除用户的主目录。</p>\n<h5 id=\"3、修改帐号\"><a href=\"#3、修改帐号\" class=\"headerlink\" title=\"3、修改帐号\"></a>3、修改帐号</h5><p>修改用户账号就是根据实际情况更改用户的有关属性，如用户号、主目录、用户组、登录Shell等。</p>\n<p>修改已有用户的信息使用<code>usermod</code>命令，其格式如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">usermod 选项 用户名</code></pre>\n\n<p>常用的选项包括<code>-c, -d, -m, -g, -G, -s, -u以及-o等</code>，这些选项的意义与<code>useradd</code>命令中的选项一样，可以为用户指定新的资源值。</p>\n<p>另外，有些系统可以使用选项：-l 新用户名</p>\n<p>这个选项指定一个新的账号，即将原来的用户名改为新的用户名。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># usermod -s &#x2F;bin&#x2F;ksh -d &#x2F;home&#x2F;z –g developer sam</code></pre>\n\n<p>此命令将用户sam的登录Shell修改为ksh，主目录改为&#x2F;home&#x2F;z，用户组改为developer。</p>\n<h5 id=\"4、用户口令的管理\"><a href=\"#4、用户口令的管理\" class=\"headerlink\" title=\"4、用户口令的管理\"></a>4、用户口令的管理</h5><p>用户管理的一项重要内容是用户口令的管理。用户账号刚创建时没有口令，但是被系统锁定，无法使用，必须为其指定口令后才可以使用，即使是指定空口令。</p>\n<p>指定和修改用户口令的Shell命令是<code>passwd</code>。超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。命令的格式为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">passwd 选项 用户名</code></pre>\n\n<p>可使用的选项：</p>\n<ul>\n<li>-l 锁定口令，即禁用账号。</li>\n<li>-u 口令解锁。</li>\n<li>-d 使账号无口令。</li>\n<li>-f 强迫用户下次登录时修改口令。</li>\n</ul>\n<p>如果默认用户名，则修改当前用户的口令。</p>\n<p>例如，假设当前用户是sam，则下面的命令修改该用户自己的口令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ passwd \nOld password:****** \nNew password:******* \nRe-enter new password:*******</code></pre>\n\n<p>如果是超级用户，可以用下列形式指定任何用户的口令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># passwd sam \nNew password:******* \nRe-enter new password:*******</code></pre>\n\n<p>普通用户修改自己的口令时，passwd命令会先询问原口令，验证后再要求用户输入两遍新口令，如果两次输入的口令一致，则将这个口令指定给用户；而超级用户为用户指定口令时，就不需要知道原口令。</p>\n<p>为了系统安全起见，用户应该选择比较复杂的口令，例如最好使用8位长的口令，口令中包含有大写、小写字母和数字，并且应该与姓名、生日等不相同。</p>\n<p>为用户指定空口令时，执行下列形式的命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># passwd -d sam</code></pre>\n\n<p>此命令将用户 sam 的口令删除，这样用户 sam 下一次登录时，系统就不再允许该用户登录了。</p>\n<p>passwd 命令还可以用 -l(lock) 选项锁定某一用户，使其不能登录，例如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># passwd -l sam</code></pre>\n\n<hr>\n<h4 id=\"二、Linux系统用户组的管理\"><a href=\"#二、Linux系统用户组的管理\" class=\"headerlink\" title=\"二、Linux系统用户组的管理\"></a>二、Linux系统用户组的管理</h4><p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。</p>\n<p>用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对&#x2F;etc&#x2F;group文件的更新。</p>\n<h5 id=\"1、增加一个新的用户组使用groupadd命令。其格式如下：\"><a href=\"#1、增加一个新的用户组使用groupadd命令。其格式如下：\" class=\"headerlink\" title=\"1、增加一个新的用户组使用groupadd命令。其格式如下：\"></a>1、增加一个新的用户组使用groupadd命令。其格式如下：</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">groupadd 选项 用户组</code></pre>\n\n<p>可以使用的选项有：</p>\n<ul>\n<li>-g GID 指定新用户组的组标识号（GID）。</li>\n<li>-o 一般与-g选项同时使用，表示新用户组的GID可以与系统已有用户组的GID相同。</li>\n</ul>\n<p><strong>实例1：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># groupadd group1</code></pre>\n\n<p>此命令向系统中增加了一个新组group1，新组的组标识号是在当前已有的最大组标识号的基础上加1。</p>\n<p><strong>实例2：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># groupadd -g 101 group2</code></pre>\n\n<p>此命令向系统中增加了一个新组group2，同时指定新组的组标识号是101。</p>\n<h5 id=\"2、如果要删除一个已有的用户组，使用groupdel命令，其格式如下：\"><a href=\"#2、如果要删除一个已有的用户组，使用groupdel命令，其格式如下：\" class=\"headerlink\" title=\"2、如果要删除一个已有的用户组，使用groupdel命令，其格式如下：\"></a>2、如果要删除一个已有的用户组，使用groupdel命令，其格式如下：</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">groupdel 用户组</code></pre>\n\n<p>例如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># groupdel group1</code></pre>\n\n<p>此命令从系统中删除组group1。</p>\n<h5 id=\"3、修改用户组的属性使用groupmod命令。其语法如下：\"><a href=\"#3、修改用户组的属性使用groupmod命令。其语法如下：\" class=\"headerlink\" title=\"3、修改用户组的属性使用groupmod命令。其语法如下：\"></a>3、修改用户组的属性使用groupmod命令。其语法如下：</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">groupmod 选项 用户组</code></pre>\n\n<p>常用的选项有：</p>\n<ul>\n<li>-g GID 为用户组指定新的组标识号。</li>\n<li>-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。</li>\n<li>-n新用户组 将用户组的名字改为新名字</li>\n</ul>\n<p><strong>实例1：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># groupmod -g 102 group2</code></pre>\n\n<p>此命令将组group2的组标识号修改为102。</p>\n<p><strong>实例2：</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># groupmod –g 10000 -n group3 group2</code></pre>\n\n<p>此命令将组group2的标识号改为10000，组名修改为group3。</p>\n<h5 id=\"4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。\"><a href=\"#4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。\" class=\"headerlink\" title=\"4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。\"></a>4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。</h5><p>用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组。例如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ newgrp root</code></pre>\n\n<p>这条命令将当前用户切换到root用户组，前提条件是root用户组确实是该用户的主组或附加组。类似于用户账号的管理，用户组的管理也可以通过集成的系统管理工具来完成。</p>\n<hr>\n<h4 id=\"三、与用户账号有关的系统文件\"><a href=\"#三、与用户账号有关的系统文件\" class=\"headerlink\" title=\"三、与用户账号有关的系统文件\"></a>三、与用户账号有关的系统文件</h4><p>完成用户管理的工作有许多种方法，但是每一种方法实际上都是对有关的系统文件进行修改。</p>\n<p>与用户和用户组相关的信息都存放在一些系统文件中，这些文件包括&#x2F;etc&#x2F;passwd, &#x2F;etc&#x2F;shadow, &#x2F;etc&#x2F;group等。</p>\n<p>下面分别介绍这些文件的内容。</p>\n<h5 id=\"1、-x2F-etc-x2F-passwd文件是用户管理工作涉及的最重要的一个文件。\"><a href=\"#1、-x2F-etc-x2F-passwd文件是用户管理工作涉及的最重要的一个文件。\" class=\"headerlink\" title=\"1、&#x2F;etc&#x2F;passwd文件是用户管理工作涉及的最重要的一个文件。\"></a>1、&#x2F;etc&#x2F;passwd文件是用户管理工作涉及的最重要的一个文件。</h5><p>Linux系统中的每个用户都在&#x2F;etc&#x2F;passwd文件中有一个对应的记录行，它记录了这个用户的一些基本属性。</p>\n<p>这个文件对所有用户都是可读的。它的内容类似下面的例子：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">＃ cat &#x2F;etc&#x2F;passwd\n\nroot:x:0:0:Superuser:&#x2F;:\ndaemon:x:1:1:System daemons:&#x2F;etc:\nbin:x:2:2:Owner of system commands:&#x2F;bin:\nsys:x:3:3:Owner of system files:&#x2F;usr&#x2F;sys:\nadm:x:4:4:System accounting:&#x2F;usr&#x2F;adm:\nuucp:x:5:5:UUCP administrator:&#x2F;usr&#x2F;lib&#x2F;uucp:\nauth:x:7:21:Authentication administrator:&#x2F;tcb&#x2F;files&#x2F;auth:\ncron:x:9:16:Cron daemon:&#x2F;usr&#x2F;spool&#x2F;cron:\nlisten:x:37:4:Network daemon:&#x2F;usr&#x2F;net&#x2F;nls:\nlp:x:71:18:Printer administrator:&#x2F;usr&#x2F;spool&#x2F;lp:\nsam:x:200:50:Sam san:&#x2F;home&#x2F;sam:&#x2F;bin&#x2F;sh</code></pre>\n\n<p>从上面的例子我们可以看到，&#x2F;etc&#x2F;passwd中一行记录对应着一个用户，每行记录又被冒号(:)分隔为7个字段，其格式和具体含义如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell</code></pre>\n\n<h6 id=\"1）”用户名”是代表用户账号的字符串。\"><a href=\"#1）”用户名”是代表用户账号的字符串。\" class=\"headerlink\" title=\"1）”用户名”是代表用户账号的字符串。\"></a>1）”用户名”是代表用户账号的字符串。</h6><p>通常长度不超过8个字符，并且由大小写字母和&#x2F;或数字组成。登录名中不能有冒号(:)，因为冒号在这里是分隔符。</p>\n<p>为了兼容起见，登录名中最好不要包含点字符(.)，并且不使用连字符(-)和加号(+)打头。</p>\n<h6 id=\"2）“口令”一些系统中，存放着加密后的用户口令字。\"><a href=\"#2）“口令”一些系统中，存放着加密后的用户口令字。\" class=\"headerlink\" title=\"2）“口令”一些系统中，存放着加密后的用户口令字。\"></a>2）“口令”一些系统中，存放着加密后的用户口令字。</h6><p>虽然这个字段存放的只是用户口令的加密串，不是明文，但是由于&#x2F;etc&#x2F;passwd文件对所有用户都可读，所以这仍是一个安全隐患。因此，现在许多Linux 系统（如SVR4）都使用了shadow技术，把真正的加密后的用户口令字存放到&#x2F;etc&#x2F;shadow文件中，而在&#x2F;etc&#x2F;passwd文件的口令字段中只存放一个特殊的字符，例如“x”或者“*”。</p>\n<h6 id=\"3）“用户标识号”是一个整数，系统内部用它来标识用户。\"><a href=\"#3）“用户标识号”是一个整数，系统内部用它来标识用户。\" class=\"headerlink\" title=\"3）“用户标识号”是一个整数，系统内部用它来标识用户。\"></a>3）“用户标识号”是一个整数，系统内部用它来标识用户。</h6><p>一般情况下它与用户名是一一对应的。如果几个用户名对应的用户标识号是一样的，系统内部将把它们视为同一个用户，但是它们可以有不同的口令、不同的主目录以及不同的登录Shell等。</p>\n<p>通常用户标识号的取值范围是0～65 535。0是超级用户root的标识号，1～99由系统保留，作为管理账号，普通用户的标识号从100开始。在Linux系统中，这个界限是500。</p>\n<h6 id=\"4）“组标识号”字段记录的是用户所属的用户组。\"><a href=\"#4）“组标识号”字段记录的是用户所属的用户组。\" class=\"headerlink\" title=\"4）“组标识号”字段记录的是用户所属的用户组。\"></a>4）“组标识号”字段记录的是用户所属的用户组。</h6><p>它对应着&#x2F;etc&#x2F;group文件中的一条记录。</p>\n<h6 id=\"5-“注释性描述”字段记录着用户的一些个人情况。\"><a href=\"#5-“注释性描述”字段记录着用户的一些个人情况。\" class=\"headerlink\" title=\"5)“注释性描述”字段记录着用户的一些个人情况。\"></a>5)“注释性描述”字段记录着用户的一些个人情况。</h6><p>例如用户的真实姓名、电话、地址等，这个字段并没有什么实际的用途。在不同的Linux 系统中，这个字段的格式并没有统一。在许多Linux系统中，这个字段存放的是一段任意的注释性描述文字，用做finger命令的输出。</p>\n<h6 id=\"6-“主目录”，也就是用户的起始工作目录。\"><a href=\"#6-“主目录”，也就是用户的起始工作目录。\" class=\"headerlink\" title=\"6)“主目录”，也就是用户的起始工作目录。\"></a>6)“主目录”，也就是用户的起始工作目录。</h6><p>它是用户在登录到系统之后所处的目录。在大多数系统中，各用户的主目录都被组织在同一个特定的目录下，而用户主目录的名称就是该用户的登录名。各用户对自己的主目录有读、写、执行（搜索）权限，其他用户对此目录的访问权限则根据具体情况设置。</p>\n<h6 id=\"7-用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即Shell。\"><a href=\"#7-用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即Shell。\" class=\"headerlink\" title=\"7)用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即Shell。\"></a>7)用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即Shell。</h6><p>Shell是用户与Linux系统之间的接口。Linux的Shell有许多种，每种都有不同的特点。常用的有sh(Bourne Shell), csh(C Shell), ksh(Korn Shell), tcsh(TENEX&#x2F;TOPS-20 type C Shell), bash(Bourne Again Shell)等。</p>\n<p>系统管理员可以根据系统情况和用户习惯为用户指定某个Shell。如果不指定Shell，那么系统使用sh为默认的登录Shell，即这个字段的值为&#x2F;bin&#x2F;sh。</p>\n<p>用户的登录Shell也可以指定为某个特定的程序（此程序不是一个命令解释器）。</p>\n<p>利用这一特点，我们可以限制用户只能运行指定的应用程序，在该应用程序运行结束后，用户就自动退出了系统。有些Linux 系统要求只有那些在系统中登记了的程序才能出现在这个字段中。</p>\n<h6 id=\"8-系统中有一类用户称为伪用户（pseudo-users）。\"><a href=\"#8-系统中有一类用户称为伪用户（pseudo-users）。\" class=\"headerlink\" title=\"8)系统中有一类用户称为伪用户（pseudo users）。\"></a>8)系统中有一类用户称为伪用户（pseudo users）。</h6><p>这些用户在&#x2F;etc&#x2F;passwd文件中也占有一条记录，但是不能登录，因为它们的登录Shell为空。它们的存在主要是方便系统管理，满足相应的系统进程对文件属主的要求。</p>\n<p>常见的伪用户如下所示：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">伪 用 户 含 义 \nbin 拥有可执行的用户命令文件 \nsys 拥有系统文件 \nadm 拥有帐户文件 \nuucp UUCP使用 \nlp lp或lpd子系统使用 \nnobody NFS使用</code></pre>\n\n<hr>\n<h5 id=\"拥有帐户文件\"><a href=\"#拥有帐户文件\" class=\"headerlink\" title=\"拥有帐户文件\"></a>拥有帐户文件</h5><p><strong>1、除了上面列出的伪用户外，还有许多标准的伪用户，例如：audit, cron, mail, usenet等，它们也都各自为相关的进程和文件所需要。</strong></p>\n<p>由于&#x2F;etc&#x2F;passwd文件是所有用户都可读的，如果用户的密码太简单或规律比较明显的话，一台普通的计算机就能够很容易地将它破解，因此对安全性要求较高的Linux系统都把加密后的口令字分离出来，单独存放在一个文件中，这个文件是&#x2F;etc&#x2F;shadow文件。 有超级用户才拥有该文件读权限，这就保证了用户密码的安全性。</p>\n<p><strong>2、&#x2F;etc&#x2F;shadow中的记录行与&#x2F;etc&#x2F;passwd中的一一对应，它由pwconv命令根据&#x2F;etc&#x2F;passwd中的数据自动产生</strong></p>\n<p>它的文件格式与&#x2F;etc&#x2F;passwd类似，由若干个字段组成，字段之间用”:”隔开。这些字段是：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</code></pre>\n\n<ol>\n<li>“登录名”是与&#x2F;etc&#x2F;passwd文件中的登录名相一致的用户账号</li>\n<li>“口令”字段存放的是加密后的用户口令字，长度为13个字符。如果为空，则对应用户没有口令，登录时不需要口令；如果含有不属于集合 { .&#x2F;0-9A-Za-z }中的字符，则对应的用户不能登录。</li>\n<li>“最后一次修改时间”表示的是从某个时刻起，到用户最后一次修改口令时的天数。时间起点对不同的系统可能不一样。例如在SCO Linux 中，这个时间起点是1970年1月1日。</li>\n<li>“最小时间间隔”指的是两次修改口令之间所需的最小天数。</li>\n<li>“最大时间间隔”指的是口令保持有效的最大天数。</li>\n<li>“警告时间”字段表示的是从系统开始警告用户到用户密码正式失效之间的天数。</li>\n<li>“不活动时间”表示的是用户没有登录活动但账号仍能保持有效的最大天数。</li>\n<li>“失效时间”字段给出的是一个绝对的天数，如果使用了这个字段，那么就给出相应账号的生存期。期满后，该账号就不再是一个合法的账号，也就不能再用来登录了。</li>\n</ol>\n<p>下面是&#x2F;etc&#x2F;shadow的一个例子：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">＃ cat &#x2F;etc&#x2F;shadow\n\nroot:Dnakfw28zf38w:8764:0:168:7:::\ndaemon:*::0:0::::\nbin:*::0:0::::\nsys:*::0:0::::\nadm:*::0:0::::\nuucp:*::0:0::::\nnuucp:*::0:0::::\nauth:*::0:0::::\ncron:*::0:0::::\nlisten:*::0:0::::\nlp:*::0:0::::\nsam:EkdiSECLWPdSa:9740:0:0::::</code></pre>\n\n<h5 id=\"3、用户组的所有信息都存放在-x2F-etc-x2F-group文件中。\"><a href=\"#3、用户组的所有信息都存放在-x2F-etc-x2F-group文件中。\" class=\"headerlink\" title=\"3、用户组的所有信息都存放在&#x2F;etc&#x2F;group文件中。\"></a>3、用户组的所有信息都存放在&#x2F;etc&#x2F;group文件中。</h5><p>将用户分组是Linux 系统中对用户进行管理及控制访问权限的一种手段。</p>\n<p>每个用户都属于某个用户组；一个组中可以有多个用户，一个用户也可以属于不同的组。</p>\n<p>当一个用户同时是多个组中的成员时，在&#x2F;etc&#x2F;passwd文件中记录的是用户所属的主组，也就是登录时所属的默认组，而其他组称为附加组。</p>\n<p>用户要访问属于附加组的文件时，必须首先使用newgrp命令使自己成为所要访问的组中的成员。</p>\n<p>用户组的所有信息都存放在&#x2F;etc&#x2F;group文件中。此文件的格式也类似于&#x2F;etc&#x2F;passwd文件，由冒号(:)隔开若干个字段，这些字段有：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">组名:口令:组标识号:组内用户列表</code></pre>\n\n<ol>\n<li>“组名”是用户组的名称，由字母或数字构成。与&#x2F;etc&#x2F;passwd中的登录名一样，组名不应重复。</li>\n<li>“口令”字段存放的是用户组加密后的口令字。一般Linux 系统的用户组都没有口令，即这个字段一般为空，或者是*。</li>\n<li>“组标识号”与用户标识号类似，也是一个整数，被系统内部用来标识组。</li>\n<li>“组内用户列表”是属于这个组的所有用户的列表，不同用户之间用逗号(,)分隔。这个用户组可能是用户的主组，也可能是附加组。</li>\n</ol>\n<p>&#x2F;etc&#x2F;group文件的一个例子如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">root::0:root\nbin::2:root,bin\nsys::3:root,uucp\nadm::4:root,adm\ndaemon::5:root,daemon\nlp::7:root,lp\nusers::20:root,sam</code></pre>\n\n<h4 id=\"四、添加批量用户\"><a href=\"#四、添加批量用户\" class=\"headerlink\" title=\"四、添加批量用户\"></a>四、添加批量用户</h4><p>添加和删除用户对每位Linux系统管理员都是轻而易举的事，比较棘手的是如果要添加几十个、上百个甚至上千个用户时，我们不太可能还使用useradd一个一个地添加，必然要找一种简便的创建大量用户的方法。Linux系统提供了创建大量用户的工具，可以让您立即创建大量用户，方法如下：</p>\n<h5 id=\"（1）先编辑一个文本用户文件。\"><a href=\"#（1）先编辑一个文本用户文件。\" class=\"headerlink\" title=\"（1）先编辑一个文本用户文件。\"></a>（1）先编辑一个文本用户文件。</h5><p>每一列按照<code>/etc/passwd</code>密码文件的格式书写，要注意每个用户的用户名、UID、宿主目录都不可以相同，其中密码栏可以留做空白或输入x号。一个范例文件user.txt内容如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">user001::600:100:user:&#x2F;home&#x2F;user001:&#x2F;bin&#x2F;bash\nuser002::601:100:user:&#x2F;home&#x2F;user002:&#x2F;bin&#x2F;bash\nuser003::602:100:user:&#x2F;home&#x2F;user003:&#x2F;bin&#x2F;bash\nuser004::603:100:user:&#x2F;home&#x2F;user004:&#x2F;bin&#x2F;bash\nuser005::604:100:user:&#x2F;home&#x2F;user005:&#x2F;bin&#x2F;bash\nuser006::605:100:user:&#x2F;home&#x2F;user006:&#x2F;bin&#x2F;bash</code></pre>\n\n<h5 id=\"（2）以root身份执行命令-usr-sbin-newusers，从刚创建的用户文件user-txt中导入数据，创建用户：\"><a href=\"#（2）以root身份执行命令-usr-sbin-newusers，从刚创建的用户文件user-txt中导入数据，创建用户：\" class=\"headerlink\" title=\"（2）以root身份执行命令 /usr/sbin/newusers，从刚创建的用户文件user.txt中导入数据，创建用户：\"></a>（2）以root身份执行命令 <code>/usr/sbin/newusers</code>，从刚创建的用户文件<code>user.txt</code>中导入数据，创建用户：</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\"># newusers &lt; user.txt</code></pre>\n\n<p>然后可以执行命令 <code>vipw</code> 或 <code>vi /etc/passwd</code> 检查 <code>/etc/passwd</code> 文件是否已经出现这些用户的数据，并且用户的宿主目录是否已经创建。</p>\n<h5 id=\"（3）执行命令-x2F-usr-x2F-sbin-x2F-pwunconv。\"><a href=\"#（3）执行命令-x2F-usr-x2F-sbin-x2F-pwunconv。\" class=\"headerlink\" title=\"（3）执行命令&#x2F;usr&#x2F;sbin&#x2F;pwunconv。\"></a>（3）执行命令&#x2F;usr&#x2F;sbin&#x2F;pwunconv。</h5><p>将 <code>/etc/shadow</code> 产生的 <code>shadow</code> 密码解码，然后回写到 <code>/etc/passwd</code> 中，并将<code>/etc/shadow</code>的<code>shadow</code>密码栏删掉。这是为了方便下一步的密码转换工作，即先取消 <code>shadow password</code> 功能。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># pwunconv</code></pre>\n\n<h5 id=\"（4）编辑每个用户的密码对照文件。\"><a href=\"#（4）编辑每个用户的密码对照文件。\" class=\"headerlink\" title=\"（4）编辑每个用户的密码对照文件。\"></a>（4）编辑每个用户的密码对照文件。</h5><p>格式为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">用户名:密码</code></pre>\n\n<p>实例文件 <code>passwd.txt</code> 内容如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">user001:123456\nuser002:123456\nuser003:123456\nuser004:123456\nuser005:123456\nuser006:123456</code></pre>\n\n<h5 id=\"（5）以-root-身份执行命令-usr-sbin-chpasswd。\"><a href=\"#（5）以-root-身份执行命令-usr-sbin-chpasswd。\" class=\"headerlink\" title=\"（5）以 root 身份执行命令 /usr/sbin/chpasswd。\"></a>（5）以 root 身份执行命令 <code>/usr/sbin/chpasswd</code>。</h5><p>创建用户密码，<code>chpasswd</code> 会将经过 <code>/usr/bin/passwd</code> 命令编码过的密码写入 <code>/etc/passwd</code> 的密码栏。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># chpasswd &lt; passwd.txt</code></pre>\n\n<h5 id=\"（6）确定密码经编码写入-x2F-etc-x2F-passwd的密码栏后。\"><a href=\"#（6）确定密码经编码写入-x2F-etc-x2F-passwd的密码栏后。\" class=\"headerlink\" title=\"（6）确定密码经编码写入&#x2F;etc&#x2F;passwd的密码栏后。\"></a>（6）确定密码经编码写入&#x2F;etc&#x2F;passwd的密码栏后。</h5><p>执行命令 <code>/usr/sbin/pwconv</code> 将密码编码为 <code>shadow password</code>，并将结果写入 <code>/etc/shadow</code>。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># pwconv</code></pre>\n\n<p>这样就完成了大量用户的创建了，之后您可以到&#x2F;home下检查这些用户宿主目录的权限设置是否都正确，并登录验证用户密码是否正确。</p>\n<h3 id=\"文件和文件夹权限\"><a href=\"#文件和文件夹权限\" class=\"headerlink\" title=\"文件和文件夹权限\"></a>文件和文件夹权限</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230120181745416.png\" alt=\"image-20230120181745416\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230120181831608.png\" alt=\"image-20230120181831608\"></p>\n<p>Linux 系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。</p>\n<p>为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。</p>\n<p>在 Linux 中我们通常使用以下两个命令来修改文件或目录的所属用户与权限：</p>\n<ul>\n<li>chown (change owner) ： 修改所属用户与组。</li>\n<li>chmod (change mode) ： 修改用户的权限。</li>\n</ul>\n<p>下图中通过 chown 来授权用户，通过 chmod 为用户设置可以开门的权限。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/1_151733904241.png\" alt=\"img\"></p>\n<p>在 Linux 中我们可以使用 <strong>ll</strong> 或者 <strong>ls –l</strong> 命令来显示一个文件的属性以及文件所属的用户和组，如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@www &#x2F;]# ls -l\ntotal 64\ndr-xr-xr-x   2 root root 4096 Dec 14  2012 bin\ndr-xr-xr-x   4 root root 4096 Apr 19  2012 boot\n……</code></pre>\n\n<p>实例中，<strong>bin</strong> 文件的第一个属性用 <strong>d</strong> 表示。<strong>d</strong> 在 Linux 中代表该文件是一个目录文件。</p>\n<p>在 Linux 中第一个字符代表这个文件是目录、文件或链接文件等等。</p>\n<ul>\n<li>当为 <strong>d</strong> 则是目录</li>\n<li>当为 <strong>-</strong> 则是文件；</li>\n<li>若是 <strong>l</strong> 则表示为链接文档(link file)；</li>\n<li>若是 <strong>b</strong> 则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；</li>\n<li>若是 <strong>c</strong> 则表示为装置文件里 面的串行端口设备，例如键盘、鼠标(一次性读取装置)。</li>\n</ul>\n<p>接下来的字符中，以三个为一组，且均为 <strong>rwx</strong> 的三个参数的组合。其中， <strong>r</strong> 代表可读(read)、 <strong>w</strong> 代表可写(write)、 <strong>x</strong> 代表可执行(execute)。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号 <strong>-</strong> 而已。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/file-llls22.jpg\" alt=\"img\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230120183418325.png\" alt=\"image-20230120183418325\"></p>\n<p>每个文件的属性由左边第一部分的 10 个字符来确定（如下图）。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/363003_1227493859FdXT.png\" alt=\"363003_1227493859FdXT\"></p>\n<p>从左至右用 <strong>0-9</strong> 这些数字来表示。</p>\n<p>第 <strong>0</strong> 位确定文件类型，第 <strong>1-3</strong> 位确定属主（该文件的所有者）拥有该文件的权限。</p>\n<p>第4-6位确定属组（所有者的同组用户）拥有该文件的权限，第7-9位确定其他用户拥有该文件的权限。</p>\n<p>其中，第 <strong>1、4、7</strong> 位表示读权限，如果用 <strong>r</strong> 字符表示，则有读权限，如果用 <strong>-</strong> 字符表示，则没有读权限；</p>\n<p>第 <strong>2、5、8</strong> 位表示写权限，如果用 <strong>w</strong> 字符表示，则有写权限，如果用 <strong>-</strong> 字符表示没有写权限；第 <strong>3、6、9</strong> 位表示可执行权限，如果用 <strong>x</strong> 字符表示，则有执行权限，如果用 <strong>-</strong> 字符表示，则没有执行权限。</p>\n<hr>\n<h4 id=\"Linux文件属主和属组\"><a href=\"#Linux文件属主和属组\" class=\"headerlink\" title=\"Linux文件属主和属组\"></a>Linux文件属主和属组</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@www &#x2F;]# ls -l\ntotal 64\ndrwxr-xr-x 2 root  root  4096 Feb 15 14:46 cron\ndrwxr-xr-x 3 mysql mysql 4096 Apr 21  2014 mysql\n……</code></pre>\n\n<p>对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。</p>\n<p>同时，在Linux系统中，用户是按组分类的，一个用户属于一个或多个组。</p>\n<p>文件所有者以外的用户又可以分为文件所属组的同组用户和其他用户。</p>\n<p>因此，Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。</p>\n<p>在以上实例中，mysql 文件是一个目录文件，属主和属组都为 mysql，属主有可读、可写、可执行的权限；与属主同组的其他用户有可读和可执行的权限；其他用户也有可读和可执行的权限。</p>\n<p>对于 root 用户来说，一般情况下，文件的权限对其不起作用。</p>\n<hr>\n<h4 id=\"更改文件属性\"><a href=\"#更改文件属性\" class=\"headerlink\" title=\"更改文件属性\"></a>更改文件属性</h4><h5 id=\"1、chgrp：更改文件属组\"><a href=\"#1、chgrp：更改文件属组\" class=\"headerlink\" title=\"1、chgrp：更改文件属组\"></a>1、chgrp：更改文件属组</h5><p>语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chgrp [-R] 属组名 文件名</code></pre>\n\n<p>参数选项</p>\n<ul>\n<li>-R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改。</li>\n</ul>\n<h5 id=\"2、chown：更改文件属主，也可以同时更改文件属组\"><a href=\"#2、chown：更改文件属主，也可以同时更改文件属组\" class=\"headerlink\" title=\"2、chown：更改文件属主，也可以同时更改文件属组\"></a>2、chown：更改文件属主，也可以同时更改文件属组</h5><p>语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chown [–R] 属主名 文件名\nchown [-R] 属主名：属组名 文件名</code></pre>\n\n<p>进入 &#x2F;root 目录（~）将install.log的拥有者改为bin这个账号：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@www ~] cd ~\n[root@www ~]# chown bin install.log\n[root@www ~]# ls -l\n-rw-r--r--  1 bin  users 68495 Jun 25 08:53 install.log</code></pre>\n\n<p>将install.log的拥有者与群组改回为root：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@www ~]# chown root:root install.log\n[root@www ~]# ls -l\n-rw-r--r--  1 root root 68495 Jun 25 08:53 install.log</code></pre>\n\n<h5 id=\"3、chmod：更改文件9个属性\"><a href=\"#3、chmod：更改文件9个属性\" class=\"headerlink\" title=\"3、chmod：更改文件9个属性\"></a>3、chmod：更改文件9个属性</h5><p>Linux文件属性有两种设置方法，一种是数字，一种是符号。</p>\n<p>Linux 文件的基本权限就有九个，分别是 <strong>owner&#x2F;group&#x2F;others(拥有者&#x2F;组&#x2F;其他)</strong> 三种身份各有自己的 <strong>read&#x2F;write&#x2F;execute</strong> 权限。</p>\n<p>先复习一下刚刚上面提到的数据：文件的权限字符为： <strong>-rwxrwxrwx</strong> ， 这九个权限是三个三个一组的！其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下：</p>\n<ul>\n<li>r:4</li>\n<li>w:2</li>\n<li>x:1</li>\n</ul>\n<p>每种身份(owner&#x2F;group&#x2F;others)各自的三个权限(r&#x2F;w&#x2F;x)分数是需要累加的，例如当权限为： <strong>-rwxrwx—</strong> 分数则是：</p>\n<ul>\n<li>owner &#x3D; rwx &#x3D; 4+2+1 &#x3D; 7</li>\n<li>group &#x3D; rwx &#x3D; 4+2+1 &#x3D; 7</li>\n<li>others&#x3D; — &#x3D; 0+0+0 &#x3D; 0</li>\n</ul>\n<p>所以等一下我们设定权限的变更时，该文件的权限数字就是 <strong>770</strong>。变更权限的指令 chmod 的语法是这样的：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">chmod [-R] xyz 文件或目录</code></pre>\n\n<p>选项与参数：</p>\n<ul>\n<li><strong>xyz</strong> : 就是刚刚提到的数字类型的权限属性，为 <strong>rwx</strong> 属性数值的相加。</li>\n<li><strong>-R</strong> : 进行递归(recursive)的持续变更，以及连同次目录下的所有文件都会变更</li>\n</ul>\n<p>举例来说，如果要将 <strong>.bashrc</strong> 这个文件所有的权限都设定启用，那么命令如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@www ~]# ls -al .bashrc\n-rw-r--r--  1 root root 395 Jul  4 11:45 .bashrc\n[root@www ~]# chmod 777 .bashrc\n[root@www ~]# ls -al .bashrc\n-rwxrwxrwx  1 root root 395 Jul  4 11:45 .bashrc</code></pre>\n\n<p>那如果要将权限变成 <em>-rwxr-xr–</em> 呢？那么权限的分数就成为 [4+2+1][4+0+1][4+0+0]&#x3D;754。</p>\n<h4 id=\"符号类型改变文件权限\"><a href=\"#符号类型改变文件权限\" class=\"headerlink\" title=\"符号类型改变文件权限\"></a>符号类型改变文件权限</h4><p>还有一个改变权限的方法，从之前的介绍中我们可以发现，基本上就九个权限分别是：</p>\n<ul>\n<li>user：用户</li>\n<li>group：组</li>\n<li>others：其他</li>\n</ul>\n<p>那么我们就可以使用 <strong>u, g, o</strong> 来代表三种身份的权限。</p>\n<p>此外， <strong>a</strong> 则代表 <strong>all</strong>，即全部的身份。读写的权限可以写成 <strong>r, w, x</strong>，也就是可以使用下表的方式来看：</p>\n<table>\n<thead>\n<tr>\n<th>chmod</th>\n<th>u g o a</th>\n<th>+(加入) -(除去) &#x3D;(设定)</th>\n<th>r w x</th>\n<th>文件或目录</th>\n</tr>\n</thead>\n<tbody><tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<p>如果我们需要将文件权限设置为 <strong>-rwxr-xr–</strong> ，可以使用 <strong>chmod u&#x3D;rwx,g&#x3D;rx,o&#x3D;r 文件名</strong> 来设定:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#  touch test1    &#x2F;&#x2F; 创建 test1 文件\n# ls -al test1    &#x2F;&#x2F; 查看 test1 默认权限\n-rw-r--r-- 1 root root 0 Nov 15 10:32 test1\n# chmod u&#x3D;rwx,g&#x3D;rx,o&#x3D;r  test1    &#x2F;&#x2F; 修改 test1 权限\n# ls -al test1\n-rwxr-xr-- 1 root root 0 Nov 15 10:32 test1</code></pre>\n\n<p>而如果是要将权限去掉而不改变其他已存在的权限呢？例如要拿掉全部人的可执行权限，则：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#  chmod  a-x test1\n# ls -al test1\n-rw-r--r-- 1 root root 0 Nov 15 10:32 test1</code></pre>\n","feature":true,"text":"一:Linux操作系统概述Linux操作系统介绍及作用介绍​ 目前业界客户端大多采用Windows系统，而服务端大多数使用的是Linux，究其根源主要是开源免费，安全性高，支持多用户，支持关闭任意不需要的功能和对硬件资源要求低等因素。同时，Linux也是众多开源产品首先支持的平台...","link":"","photos":[],"count_time":{"symbolsCount":"54k","symbolsTime":"49 mins."},"categories":[{"name":"操作系统安全","slug":"操作系统安全","count":1,"path":"api/categories/操作系统安全.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80-Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">一:Linux操作系统概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">Linux操作系统介绍及作用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">介绍</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">操作系统的作用</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B1%82%E6%AC%A1\"><span class=\"toc-text\">层次</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">Linux操作系统版本</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C-Linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">二:Linux系统安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89-%E4%BD%BF%E7%94%A8XShell%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5Linux\"><span class=\"toc-text\">三:使用XShell远程连接Linux</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ssh%E5%8D%8F%E8%AE%AE%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">ssh协议介绍</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#XShell%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">XShell使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ssh%E4%B8%8Escp%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">ssh与scp命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ssh%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">ssh命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#scp%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">scp命令</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A7%BB%E5%8A%A8%E7%AB%AFssh%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">移动端ssh客户端工具</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B-Linux%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">四:Linux系统操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E8%A7%A3%E8%AF%BB\"><span class=\"toc-text\">文件系统解读</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#linux%E7%9B%AE%E5%BD%95%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">linux目录说明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E7%9A%84%E5%90%AF%E5%8A%A8%E7%BA%A7%E5%88%AB\"><span class=\"toc-text\">Linux的启动级别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E7%9A%84%E5%85%B3%E6%9C%BA%E4%B8%8E%E9%87%8D%E5%90%AF\"><span class=\"toc-text\">Linux的关机与重启</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Linux常见命令使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#top%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">top命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ls%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">ls命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cd-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">cd 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pwd-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">pwd 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mkdir-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">mkdir 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#rm%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">rm命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mv-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">mv 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cp-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">cp 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cat%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">cat命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#more-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">more 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#less-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">less 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#head-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">head 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#tail-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">tail 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#which-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">which 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#whereis-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">whereis 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#locate-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">locate 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#find-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">find 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#chmod-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">chmod 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#chown-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">chown 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#df-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">df 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#du-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">du 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ln-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">ln 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#date-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">date 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cal-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">cal 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#grep-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">grep 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ps-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">ps 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#kill-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">kill 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#free-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">free 命令</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94-%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8vi%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">五:文本编辑器vi的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E7%9A%84%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">文本文件的创建</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%A8Linux%E4%B8%8A%E4%BD%BF%E7%94%A8%E9%87%8D%E5%AE%9A%E5%90%91%E7%AC%A6%EF%BC%88-gt-%EF%BC%89%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">在Linux上使用重定向符（&gt;）创建一个文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%A8Linux%E4%B8%8A%E4%BD%BF%E7%94%A8touch%E5%91%BD%E4%BB%A4%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">在Linux上使用touch命令创建一个文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%A8linux%E4%B8%8A%E4%BD%BF%E7%94%A8echo%E5%91%BD%E4%BB%A4%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">在linux上使用echo命令创建一个文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%A8linux%E4%B8%AD%E4%BD%BF%E7%94%A8cat%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">在linux中使用cat创建一个文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%A8linux%E4%B8%AD%E4%BD%BF%E7%94%A8vi-x2F-vm%E5%91%BD%E4%BB%A4%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">在linux中使用vi&#x2F;vm命令创建一个文件</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux-vi-x2F-vim\"><span class=\"toc-text\">Linux vi&#x2F;vim</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-vim%EF%BC%9F\"><span class=\"toc-text\">什么是 vim？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#vi-x2F-vim-%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">vi&#x2F;vim 的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F%EF%BC%9A\"><span class=\"toc-text\">命令模式：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">输入模式</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%BA%95%E7%BA%BF%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">底线命令模式</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#vi-x2F-vim-%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B\"><span class=\"toc-text\">vi&#x2F;vim 使用实例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-vi-x2F-vim-%E8%BF%9B%E5%85%A5%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">使用 vi&#x2F;vim 进入一般模式</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8C%89%E4%B8%8B-i-%E8%BF%9B%E5%85%A5%E8%BE%93%E5%85%A5%E6%A8%A1%E5%BC%8F-%E4%B9%9F%E7%A7%B0%E4%B8%BA%E7%BC%96%E8%BE%91%E6%A8%A1%E5%BC%8F-%EF%BC%8C%E5%BC%80%E5%A7%8B%E7%BC%96%E8%BE%91%E6%96%87%E5%AD%97\"><span class=\"toc-text\">按下 i 进入输入模式(也称为编辑模式)，开始编辑文字</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8C%89%E4%B8%8B-ESC-%E6%8C%89%E9%92%AE%E5%9B%9E%E5%88%B0%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">按下 ESC 按钮回到一般模式</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F%E4%B8%AD%E6%8C%89%E4%B8%8B-wq-%E5%82%A8%E5%AD%98%E5%90%8E%E7%A6%BB%E5%BC%80-vi\"><span class=\"toc-text\">在一般模式中按下 :wq 储存后离开 vi</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#vi-x2F-vim-%E6%8C%89%E9%94%AE%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">vi&#x2F;vim 按键说明</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%EF%BC%9A%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F%E5%8F%AF%E7%94%A8%E7%9A%84%E5%85%89%E6%A0%87%E7%A7%BB%E5%8A%A8%E3%80%81%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E3%80%81%E6%90%9C%E7%B4%A2%E6%9B%BF%E6%8D%A2%E7%AD%89\"><span class=\"toc-text\">第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%EF%BC%9A%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F%E5%88%87%E6%8D%A2%E5%88%B0%E7%BC%96%E8%BE%91%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%8F%AF%E7%94%A8%E7%9A%84%E6%8C%89%E9%92%AE%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">第二部分：一般模式切换到编辑模式的可用的按钮说明</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86%EF%BC%9A%E4%B8%80%E8%88%AC%E6%A8%A1%E5%BC%8F%E5%88%87%E6%8D%A2%E5%88%B0%E6%8C%87%E4%BB%A4%E8%A1%8C%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%8F%AF%E7%94%A8%E7%9A%84%E6%8C%89%E9%92%AE%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">第三部分：一般模式切换到指令行模式的可用的按钮说明</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8vi%E4%BF%AE%E6%94%B9IP%E5%9C%B0%E5%9D%80%E4%B8%BA%E9%9D%99%E6%80%81IP\"><span class=\"toc-text\">用vi修改IP地址为静态IP</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E9%BB%98%E8%AE%A4%E7%BD%91%E5%85%B3\"><span class=\"toc-text\">查看默认网关</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A1%AE%E8%AE%A4%E5%8A%A8%E6%80%81IP%E5%9C%B0%E5%9D%80%E5%8F%8A%E7%BD%91%E6%AE%B5%E7%AD%89%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">确认动态IP地址及网段等信息</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8vi%E7%BC%96%E8%BE%91%E9%9D%99%E6%80%81IP%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">使用vi编辑静态IP地址</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%87%8D%E5%90%AF%E7%BD%91%E5%8D%A1-%E9%85%8D%E7%BD%AE%E7%94%9F%E6%95%88\"><span class=\"toc-text\">重启网卡,配置生效</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD-%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">六:文件和文件夹的操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%83-%E7%94%A8%E6%88%B7%E4%B8%8E%E7%94%A8%E6%88%B7%E7%BB%84%E6%9D%83%E9%99%90\"><span class=\"toc-text\">七:用户与用户组权限</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E5%92%8C%E7%94%A8%E6%88%B7%E7%BB%84\"><span class=\"toc-text\">用户和用户组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81Linux%E7%B3%BB%E7%BB%9F%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7%E7%9A%84%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">一、Linux系统用户账号的管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%B7%BB%E5%8A%A0%E6%96%B0%E7%9A%84%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7%E4%BD%BF%E7%94%A8useradd%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%85%B6%E8%AF%AD%E6%B3%95%E5%A6%82%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">1、添加新的用户账号使用useradd命令，其语法如下：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%88%A0%E9%99%A4%E5%B8%90%E5%8F%B7\"><span class=\"toc-text\">2、删除帐号</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81%E4%BF%AE%E6%94%B9%E5%B8%90%E5%8F%B7\"><span class=\"toc-text\">3、修改帐号</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81%E7%94%A8%E6%88%B7%E5%8F%A3%E4%BB%A4%E7%9A%84%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">4、用户口令的管理</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81Linux%E7%B3%BB%E7%BB%9F%E7%94%A8%E6%88%B7%E7%BB%84%E7%9A%84%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">二、Linux系统用户组的管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%A2%9E%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84%E7%94%A8%E6%88%B7%E7%BB%84%E4%BD%BF%E7%94%A8groupadd%E5%91%BD%E4%BB%A4%E3%80%82%E5%85%B6%E6%A0%BC%E5%BC%8F%E5%A6%82%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">1、增加一个新的用户组使用groupadd命令。其格式如下：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%A6%82%E6%9E%9C%E8%A6%81%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%B7%B2%E6%9C%89%E7%9A%84%E7%94%A8%E6%88%B7%E7%BB%84%EF%BC%8C%E4%BD%BF%E7%94%A8groupdel%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%85%B6%E6%A0%BC%E5%BC%8F%E5%A6%82%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">2、如果要删除一个已有的用户组，使用groupdel命令，其格式如下：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E7%BB%84%E7%9A%84%E5%B1%9E%E6%80%A7%E4%BD%BF%E7%94%A8groupmod%E5%91%BD%E4%BB%A4%E3%80%82%E5%85%B6%E8%AF%AD%E6%B3%95%E5%A6%82%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">3、修改用户组的属性使用groupmod命令。其语法如下：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81%E5%A6%82%E6%9E%9C%E4%B8%80%E4%B8%AA%E7%94%A8%E6%88%B7%E5%90%8C%E6%97%B6%E5%B1%9E%E4%BA%8E%E5%A4%9A%E4%B8%AA%E7%94%A8%E6%88%B7%E7%BB%84%EF%BC%8C%E9%82%A3%E4%B9%88%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%94%A8%E6%88%B7%E7%BB%84%E4%B9%8B%E9%97%B4%E5%88%87%E6%8D%A2%EF%BC%8C%E4%BB%A5%E4%BE%BF%E5%85%B7%E6%9C%89%E5%85%B6%E4%BB%96%E7%94%A8%E6%88%B7%E7%BB%84%E7%9A%84%E6%9D%83%E9%99%90%E3%80%82\"><span class=\"toc-text\">4、如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E4%B8%8E%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7%E6%9C%89%E5%85%B3%E7%9A%84%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">三、与用户账号有关的系统文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81-x2F-etc-x2F-passwd%E6%96%87%E4%BB%B6%E6%98%AF%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E5%B7%A5%E4%BD%9C%E6%B6%89%E5%8F%8A%E7%9A%84%E6%9C%80%E9%87%8D%E8%A6%81%E7%9A%84%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E3%80%82\"><span class=\"toc-text\">1、&#x2F;etc&#x2F;passwd文件是用户管理工作涉及的最重要的一个文件。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1%EF%BC%89%E2%80%9D%E7%94%A8%E6%88%B7%E5%90%8D%E2%80%9D%E6%98%AF%E4%BB%A3%E8%A1%A8%E7%94%A8%E6%88%B7%E8%B4%A6%E5%8F%B7%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%82\"><span class=\"toc-text\">1）”用户名”是代表用户账号的字符串。</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#2%EF%BC%89%E2%80%9C%E5%8F%A3%E4%BB%A4%E2%80%9D%E4%B8%80%E4%BA%9B%E7%B3%BB%E7%BB%9F%E4%B8%AD%EF%BC%8C%E5%AD%98%E6%94%BE%E7%9D%80%E5%8A%A0%E5%AF%86%E5%90%8E%E7%9A%84%E7%94%A8%E6%88%B7%E5%8F%A3%E4%BB%A4%E5%AD%97%E3%80%82\"><span class=\"toc-text\">2）“口令”一些系统中，存放着加密后的用户口令字。</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#3%EF%BC%89%E2%80%9C%E7%94%A8%E6%88%B7%E6%A0%87%E8%AF%86%E5%8F%B7%E2%80%9D%E6%98%AF%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%EF%BC%8C%E7%B3%BB%E7%BB%9F%E5%86%85%E9%83%A8%E7%94%A8%E5%AE%83%E6%9D%A5%E6%A0%87%E8%AF%86%E7%94%A8%E6%88%B7%E3%80%82\"><span class=\"toc-text\">3）“用户标识号”是一个整数，系统内部用它来标识用户。</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#4%EF%BC%89%E2%80%9C%E7%BB%84%E6%A0%87%E8%AF%86%E5%8F%B7%E2%80%9D%E5%AD%97%E6%AE%B5%E8%AE%B0%E5%BD%95%E7%9A%84%E6%98%AF%E7%94%A8%E6%88%B7%E6%89%80%E5%B1%9E%E7%9A%84%E7%94%A8%E6%88%B7%E7%BB%84%E3%80%82\"><span class=\"toc-text\">4）“组标识号”字段记录的是用户所属的用户组。</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#5-%E2%80%9C%E6%B3%A8%E9%87%8A%E6%80%A7%E6%8F%8F%E8%BF%B0%E2%80%9D%E5%AD%97%E6%AE%B5%E8%AE%B0%E5%BD%95%E7%9D%80%E7%94%A8%E6%88%B7%E7%9A%84%E4%B8%80%E4%BA%9B%E4%B8%AA%E4%BA%BA%E6%83%85%E5%86%B5%E3%80%82\"><span class=\"toc-text\">5)“注释性描述”字段记录着用户的一些个人情况。</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#6-%E2%80%9C%E4%B8%BB%E7%9B%AE%E5%BD%95%E2%80%9D%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E7%94%A8%E6%88%B7%E7%9A%84%E8%B5%B7%E5%A7%8B%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95%E3%80%82\"><span class=\"toc-text\">6)“主目录”，也就是用户的起始工作目录。</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#7-%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%90%8E%EF%BC%8C%E8%A6%81%E5%90%AF%E5%8A%A8%E4%B8%80%E4%B8%AA%E8%BF%9B%E7%A8%8B%EF%BC%8C%E8%B4%9F%E8%B4%A3%E5%B0%86%E7%94%A8%E6%88%B7%E7%9A%84%E6%93%8D%E4%BD%9C%E4%BC%A0%E7%BB%99%E5%86%85%E6%A0%B8%EF%BC%8C%E8%BF%99%E4%B8%AA%E8%BF%9B%E7%A8%8B%E6%98%AF%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%88%B0%E7%B3%BB%E7%BB%9F%E5%90%8E%E8%BF%90%E8%A1%8C%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A7%A3%E9%87%8A%E5%99%A8%E6%88%96%E6%9F%90%E4%B8%AA%E7%89%B9%E5%AE%9A%E7%9A%84%E7%A8%8B%E5%BA%8F%EF%BC%8C%E5%8D%B3Shell%E3%80%82\"><span class=\"toc-text\">7)用户登录后，要启动一个进程，负责将用户的操作传给内核，这个进程是用户登录到系统后运行的命令解释器或某个特定的程序，即Shell。</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#8-%E7%B3%BB%E7%BB%9F%E4%B8%AD%E6%9C%89%E4%B8%80%E7%B1%BB%E7%94%A8%E6%88%B7%E7%A7%B0%E4%B8%BA%E4%BC%AA%E7%94%A8%E6%88%B7%EF%BC%88pseudo-users%EF%BC%89%E3%80%82\"><span class=\"toc-text\">8)系统中有一类用户称为伪用户（pseudo users）。</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8B%A5%E6%9C%89%E5%B8%90%E6%88%B7%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">拥有帐户文件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81%E7%94%A8%E6%88%B7%E7%BB%84%E7%9A%84%E6%89%80%E6%9C%89%E4%BF%A1%E6%81%AF%E9%83%BD%E5%AD%98%E6%94%BE%E5%9C%A8-x2F-etc-x2F-group%E6%96%87%E4%BB%B6%E4%B8%AD%E3%80%82\"><span class=\"toc-text\">3、用户组的所有信息都存放在&#x2F;etc&#x2F;group文件中。</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E6%B7%BB%E5%8A%A0%E6%89%B9%E9%87%8F%E7%94%A8%E6%88%B7\"><span class=\"toc-text\">四、添加批量用户</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EF%BC%881%EF%BC%89%E5%85%88%E7%BC%96%E8%BE%91%E4%B8%80%E4%B8%AA%E6%96%87%E6%9C%AC%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%E3%80%82\"><span class=\"toc-text\">（1）先编辑一个文本用户文件。</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EF%BC%882%EF%BC%89%E4%BB%A5root%E8%BA%AB%E4%BB%BD%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4-usr-sbin-newusers%EF%BC%8C%E4%BB%8E%E5%88%9A%E5%88%9B%E5%BB%BA%E7%9A%84%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6user-txt%E4%B8%AD%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%EF%BC%9A\"><span class=\"toc-text\">（2）以root身份执行命令 &#x2F;usr&#x2F;sbin&#x2F;newusers，从刚创建的用户文件user.txt中导入数据，创建用户：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EF%BC%883%EF%BC%89%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4-x2F-usr-x2F-sbin-x2F-pwunconv%E3%80%82\"><span class=\"toc-text\">（3）执行命令&#x2F;usr&#x2F;sbin&#x2F;pwunconv。</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EF%BC%884%EF%BC%89%E7%BC%96%E8%BE%91%E6%AF%8F%E4%B8%AA%E7%94%A8%E6%88%B7%E7%9A%84%E5%AF%86%E7%A0%81%E5%AF%B9%E7%85%A7%E6%96%87%E4%BB%B6%E3%80%82\"><span class=\"toc-text\">（4）编辑每个用户的密码对照文件。</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EF%BC%885%EF%BC%89%E4%BB%A5-root-%E8%BA%AB%E4%BB%BD%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4-usr-sbin-chpasswd%E3%80%82\"><span class=\"toc-text\">（5）以 root 身份执行命令 &#x2F;usr&#x2F;sbin&#x2F;chpasswd。</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%EF%BC%886%EF%BC%89%E7%A1%AE%E5%AE%9A%E5%AF%86%E7%A0%81%E7%BB%8F%E7%BC%96%E7%A0%81%E5%86%99%E5%85%A5-x2F-etc-x2F-passwd%E7%9A%84%E5%AF%86%E7%A0%81%E6%A0%8F%E5%90%8E%E3%80%82\"><span class=\"toc-text\">（6）确定密码经编码写入&#x2F;etc&#x2F;passwd的密码栏后。</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E6%9D%83%E9%99%90\"><span class=\"toc-text\">文件和文件夹权限</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Linux%E6%96%87%E4%BB%B6%E5%B1%9E%E4%B8%BB%E5%92%8C%E5%B1%9E%E7%BB%84\"><span class=\"toc-text\">Linux文件属主和属组</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">更改文件属性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81chgrp%EF%BC%9A%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E5%B1%9E%E7%BB%84\"><span class=\"toc-text\">1、chgrp：更改文件属组</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81chown%EF%BC%9A%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E5%B1%9E%E4%B8%BB%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%90%8C%E6%97%B6%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E5%B1%9E%E7%BB%84\"><span class=\"toc-text\">2、chown：更改文件属主，也可以同时更改文件属组</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81chmod%EF%BC%9A%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B69%E4%B8%AA%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">3、chmod：更改文件9个属性</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AC%A6%E5%8F%B7%E7%B1%BB%E5%9E%8B%E6%94%B9%E5%8F%98%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90\"><span class=\"toc-text\">符号类型改变文件权限</span></a></li></ol></li></ol></li></ol>","author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"渗透测试工具-sqlmap详解","uid":"a6aaa0ab5b2e8cb7c48d0382e4a8493d","slug":"sqlmap详解","date":"2023-01-13T03:16:07.165Z","updated":"2023-01-13T03:38:32.842Z","comments":true,"path":"api/articles/sqlmap详解.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-496wr8.jpg","text":"谈到渗透测试就离不开sql注入，谈到sql注入就离不开sqlmap，本文旨在介绍sqlmap这款强大的自动化sql注入工具的使用，未来也会根据自己实际遇到的情况进行更新，话不多说，直接开整 sqlmap介绍其实对于sqlmap这款工具不需要过多介绍了，网上一搜一大把，这里还是简单...","link":"","photos":[],"count_time":{"symbolsCount":944,"symbolsTime":"1 mins."},"categories":[{"name":"渗透从入门到入土","slug":"渗透从入门到入土","count":8,"path":"api/categories/渗透从入门到入土.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":3,"path":"api/tags/渗透测试.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"DC-9靶机渗透","uid":"46f95e1a6a53e9fcd0762e6351e3937a","slug":"DC-9靶机渗透","date":"2023-01-12T03:44:50.829Z","updated":"2023-01-08T14:39:23.268Z","comments":true,"path":"api/articles/DC-9靶机渗透.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typorawallhaven-139vy1.jpg","text":"DC-9渗透全流程一:实验环境kali攻击机: 192.168.2.104 DC-9靶机: 192.168.2.103 二:信息收集主机发现arp-scan -l nmap -sn 192.168.2.0/24 端口扫描masscan --rate=10000 --ports 0...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"渗透从入门到入土","slug":"渗透从入门到入土","count":8,"path":"api/categories/渗透从入门到入土.json"}],"tags":[{"name":"DC系列靶机","slug":"DC系列靶机","count":7,"path":"api/tags/DC系列靶机.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}}}