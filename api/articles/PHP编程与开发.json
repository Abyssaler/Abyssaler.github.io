{"title":"PHP编程与开发","uid":"20917cafe9bad9b66ec14a8de4e80fe8","slug":"PHP编程与开发","date":"2023-02-01T02:09:04.026Z","updated":"2023-02-01T02:08:35.170Z","comments":true,"path":"api/articles/PHP编程与开发.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-vq9kjl.png","content":"<h1 id=\"PHP基本使用\"><a href=\"#PHP基本使用\" class=\"headerlink\" title=\"PHP基本使用\"></a>PHP基本使用</h1><h2 id=\"PHP基础\"><a href=\"#PHP基础\" class=\"headerlink\" title=\"PHP基础\"></a>PHP基础</h2><p>PHP 是一种创建动态交互性站点的强有力的服务器端脚本语言</p>\n<h3 id=\"PHP-是什么？\"><a href=\"#PHP-是什么？\" class=\"headerlink\" title=\"PHP 是什么？\"></a>PHP 是什么？</h3><ul>\n<li>PHP（全称：PHP：Hypertext Preprocessor，即”PHP：超文本预处理器”）是一种通用开源脚本语言。</li>\n<li>PHP 脚本在服务器上执行。</li>\n<li>PHP 可免费下载使用。</li>\n</ul>\n<h3 id=\"PHP-文件是什么？\"><a href=\"#PHP-文件是什么？\" class=\"headerlink\" title=\"PHP 文件是什么？\"></a>PHP 文件是什么？</h3><ul>\n<li>PHP 文件可包含文本、HTML、JavaScript代码和 PHP 代码</li>\n<li>PHP 代码在服务器上执行，结果以纯 HTML 形式返回给浏览器</li>\n<li>PHP 文件的默认文件扩展名是 “.php”</li>\n</ul>\n<h3 id=\"PHP-能做什么？\"><a href=\"#PHP-能做什么？\" class=\"headerlink\" title=\"PHP 能做什么？\"></a>PHP 能做什么？</h3><ul>\n<li>PHP 可以生成动态页面内容</li>\n<li>PHP 可以创建、打开、读取、写入、关闭服务器上的文件</li>\n<li>PHP 可以收集表单数据</li>\n<li>PHP 可以发送和接收 cookies</li>\n<li>PHP 可以添加、删除、修改您的数据库中的数据</li>\n<li>PHP 可以限制用户访问您的网站上的一些页面</li>\n<li>PHP 可以加密数据</li>\n</ul>\n<h3 id=\"为什么使用-PHP？\"><a href=\"#为什么使用-PHP？\" class=\"headerlink\" title=\"为什么使用 PHP？\"></a>为什么使用 PHP？</h3><ul>\n<li>PHP 可在不同的平台上运行（Windows、Linux、Unix、Mac OS X 等）</li>\n<li>PHP 与目前几乎所有的正在被使用的服务器相兼容（Apache、IIS 等）</li>\n<li>PHP 提供了广泛的数据库支持</li>\n<li>PHP 易于学习，并可高效地运行在服务器端</li>\n</ul>\n<h3 id=\"PHP语法\"><a href=\"#PHP语法\" class=\"headerlink\" title=\"PHP语法\"></a>PHP语法</h3><p>PHP 脚本可以放在文档中的任何位置。</p>\n<p>PHP 脚本以 <strong><?php** 开始，以 **?></strong> 结束：</p>\n<p>PHP 文件的默认文件扩展名是 “.php”。</p>\n<p>PHP 文件通常包含 HTML 标签和一些 PHP 脚本代码。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n&lt;h1&gt;My first PHP page&lt;&#x2F;h1&gt;\n\n&lt;?php\necho &quot;Hello World!&quot;;\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<p>PHP 中的每个代码行都必须以分号结束。分号是一种分隔符，用于把指令集区分开来。</p>\n<p>通过 PHP，有两种在浏览器输出文本的基础指令：<strong>echo</strong> 和 <strong>print</strong>。</p>\n<h3 id=\"PHP-注释\"><a href=\"#PHP-注释\" class=\"headerlink\" title=\"PHP 注释\"></a>PHP 注释</h3><ul>\n<li>&#x2F;&#x2F;      单行注释</li>\n<li>&#x2F;*  *&#x2F;   多行注释</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n&lt;?php\n&#x2F;&#x2F; 这是 PHP 单行注释\n\n&#x2F;*\n这是\nPHP 多行\n注释\n*&#x2F;\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n\n\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p>变量是用于存储信息的”容器”</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$x&#x3D;5;\n$y&#x3D;6;\n$z&#x3D;$x+$y;\necho $z;\n?&gt;</code></pre>\n\n\n\n<p><strong>PHP 变量规则</strong></p>\n<ul>\n<li>变量以 $ 符号开始，后面跟着变量的名称</li>\n<li>变量名必须以字母或者下划线字符开始</li>\n<li>变量名只能包含字母、数字以及下划线（A-z、0-9 和 _ ）</li>\n<li>变量名不能包含空格</li>\n<li>变量名是区分大小写的（$y 和 $Y 是两个不同的变量）</li>\n</ul>\n<h3 id=\"创建PHP变量\"><a href=\"#创建PHP变量\" class=\"headerlink\" title=\"创建PHP变量\"></a>创建PHP变量</h3><p>PHP 没有声明变量的命令。</p>\n<p>变量在您第一次赋值给它的时候被创建</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$txt&#x3D;&quot;Hello world!&quot;;\n$x&#x3D;5;\n$y&#x3D;10.5;\n?&gt;</code></pre>\n\n<p>在上面的语句执行中，变量 <strong>txt</strong> 将保存值 **Hello world!**，且变量 <strong>x</strong> 将保存值 <strong>5</strong>。</p>\n<p><strong>注释：</strong>当您赋一个文本值给变量时，请在文本值两侧加上引号。</p>\n<h3 id=\"PHP-是一门弱类型语言\"><a href=\"#PHP-是一门弱类型语言\" class=\"headerlink\" title=\"PHP 是一门弱类型语言\"></a>PHP 是一门弱类型语言</h3><p>PHP 会根据变量的值，自动把变量转换为正确的数据类型。</p>\n<p>在强类型的编程语言中，我们必须在使用变量前先声明（定义）变量的类型和名称。</p>\n<h3 id=\"echo-和-print-语句\"><a href=\"#echo-和-print-语句\" class=\"headerlink\" title=\"echo 和 print 语句\"></a>echo 和 print 语句</h3><p>echo 和 print 区别:</p>\n<ul>\n<li>echo - 可以输出一个或多个字符串</li>\n<li>print - 只允许输出一个字符串，返回值总为 1</li>\n</ul>\n<p><strong>提示：</strong>echo 输出的速度比 print 快， echo 没有返回值，print有返回值1。</p>\n<p>echo 是一个语言结构，使用的时候可以不用加括号，也可以加上括号： echo 或 echo()。</p>\n<p><strong>显示字符串</strong></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\necho &quot;&lt;h2&gt;PHP 很有趣!&lt;&#x2F;h2&gt;&quot;;\necho &quot;Hello world!&lt;br&gt;&quot;;\necho &quot;我要学 PHP!&lt;br&gt;&quot;;\necho &quot;这是一个&quot;, &quot;字符串，&quot;, &quot;使用了&quot;, &quot;多个&quot;, &quot;参数。&quot;;\n?&gt;</code></pre>\n\n\n\n<p><strong>显示变量</strong></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$txt1&#x3D;&quot;学习 PHP&quot;;\n$txt2&#x3D;&quot;xbxaq.com&quot;;\n$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);\n \necho $txt1;\necho &quot;&lt;br&gt;&quot;;\necho &quot;在 $txt2 学习 PHP &quot;;\necho &quot;&lt;br&gt;&quot;;\necho &quot;我车的品牌是 &#123;$cars[0]&#125;&quot;;\n?&gt;</code></pre>\n\n\n\n<p>print 同样是一个语言结构，可以使用括号，也可以不使用括号： print 或 print()。</p>\n<p><strong>显示字符串</strong></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nprint &quot;&lt;h2&gt;PHP 很有趣!&lt;&#x2F;h2&gt;&quot;;\nprint &quot;Hello world!&lt;br&gt;&quot;;\nprint &quot;我要学习 PHP!&quot;;\n?&gt;</code></pre>\n\n\n\n<p><strong>显示变量</strong></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$txt1&#x3D;&quot;学习 PHP&quot;;\n$txt2&#x3D;&quot;xbxaq.COM&quot;;\n$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);\n \nprint $txt1;\nprint &quot;&lt;br&gt;&quot;;\nprint &quot;在 $txt2 学习 PHP &quot;;\nprint &quot;&lt;br&gt;&quot;;\nprint &quot;我车的品牌是 &#123;$cars[0]&#125;&quot;;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><p>PHP 变量存储不同的类型的数据，不同的数据类型可以做不一样的事情。</p>\n<p>PHP 支持以下几种数据类型:</p>\n<ul>\n<li>String（字符串）</li>\n<li>Integer（整型）</li>\n<li>Float（浮点型）</li>\n<li>Boolean（布尔型）</li>\n<li>Array（数组）</li>\n<li>Object（对象）</li>\n<li>NULL（空值）</li>\n<li>Resource（资源类型）</li>\n</ul>\n<h3 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h3><p>一个字符串是一串字符的序列，就像 “Hello world!”。</p>\n<p>你可以将任何文本放在单引号和双引号中</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php \n$x &#x3D; &quot;Hello world!&quot;;\necho $x;\necho &quot;&lt;br&gt;&quot;; \n$x &#x3D; &#39;Hello world!&#39;;\necho $x;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"整型\"><a href=\"#整型\" class=\"headerlink\" title=\"整型\"></a>整型</h3><p>整数是一个没有小数的数字。</p>\n<p>整数规则:</p>\n<ul>\n<li>整数必须至少有一个数字 (0-9)</li>\n<li>整数不能包含逗号或空格</li>\n<li>整数是没有小数点的</li>\n<li>整数可以是正数或负数</li>\n<li>整型可以用三种格式来指定：十进制， 十六进制（ 以 0x 为前缀）或八进制（前缀为 0）。</li>\n</ul>\n<p>PHP <a href=\"https://www.xbxaq.com/php/php-var_dump-function.html\">var_dump() </a>函数返回变量的数据类型和值</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php \n$x &#x3D; 5985;\nvar_dump($x);\necho &quot;&lt;br&gt;&quot;; \n$x &#x3D; -345; &#x2F;&#x2F; 负数 \nvar_dump($x);\necho &quot;&lt;br&gt;&quot;; \n$x &#x3D; 0x8C; &#x2F;&#x2F; 十六进制数\nvar_dump($x);\necho &quot;&lt;br&gt;&quot;;\n$x &#x3D; 047; &#x2F;&#x2F; 八进制数\nvar_dump($x);\n?&gt;</code></pre>\n\n\n\n<h3 id=\"浮点型\"><a href=\"#浮点型\" class=\"headerlink\" title=\"浮点型\"></a>浮点型</h3><p>浮点数是带小数部分的数字，或是指数形式</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php \n$x &#x3D; 10.365;\nvar_dump($x);\necho &quot;&lt;br&gt;&quot;; \n$x &#x3D; 2.4e3;\nvar_dump($x);\necho &quot;&lt;br&gt;&quot;; \n$x &#x3D; 8E-5;\nvar_dump($x);\n?&gt;</code></pre>\n\n\n\n<h3 id=\"布尔型\"><a href=\"#布尔型\" class=\"headerlink\" title=\"布尔型\"></a>布尔型</h3><p>布尔型可以是 TRUE 或 FALSE</p>\n<p>布尔型通常用于条件判断</p>\n<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><p>数组可以在一个变量中存储多个值</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php \n$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);\nvar_dump($cars);\n?&gt;</code></pre>\n\n\n\n<h3 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h3><p>对象数据类型也可以用于存储数据。</p>\n<p>在 PHP 中，对象必须声明。</p>\n<p>首先，你必须使用class关键字声明类对象。类是可以包含属性和方法的结构。</p>\n<p>然后我们在类中定义数据类型，然后在实例化的类中使用数据类型</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nclass Car\n&#123;\n  var $color;\n  function __construct($color&#x3D;&quot;green&quot;) &#123;\n    $this-&gt;color &#x3D; $color;\n  &#125;\n  function what_color() &#123;\n    return $this-&gt;color;\n  &#125;\n&#125;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"NULL-值\"><a href=\"#NULL-值\" class=\"headerlink\" title=\"NULL 值\"></a>NULL 值</h3><p>NULL 值表示变量没有值。NULL 是数据类型为 NULL 的值。</p>\n<p>NULL 值指明一个变量是否为空值。 同样可用于数据空值和NULL值的区别。</p>\n<p>可以通过设置变量值为 NULL 来清空变量数据</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$x&#x3D;&quot;Hello world!&quot;;\n$x&#x3D;null;\nvar_dump($x);\n?&gt;</code></pre>\n\n\n\n<h3 id=\"类型比较\"><a href=\"#类型比较\" class=\"headerlink\" title=\"类型比较\"></a>类型比较</h3><p>虽然 PHP 是弱类型语言，但也需要明白变量类型及它们的意义，因为我们经常需要对 PHP 变量进行比较，包含松散和严格比较。</p>\n<ul>\n<li>松散比较：使用两个等号 <strong>&#x3D;&#x3D;</strong> 比较，只比较值，不比较类型。</li>\n<li>严格比较：用三个等号 <strong>&#x3D;&#x3D;&#x3D;</strong> 比较，除了比较值，也比较类型。</li>\n</ul>\n<p>例如，”42” 是一个字符串而 42 是一个整数。<strong>FALSE</strong> 是一个布尔值而 <strong>“FALSE”</strong> 是一个字符串。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nif(42 &#x3D;&#x3D; &quot;42&quot;) &#123;\n    echo &#39;1、值相等&#39;;\n&#125;\n \necho PHP_EOL; &#x2F;&#x2F; 换行符\n \nif(42 &#x3D;&#x3D;&#x3D; &quot;42&quot;) &#123;\n    echo &#39;2、类型相等&#39;;\n&#125; else &#123;\n    echo &#39;3、类型不相等&#39;;\n&#125;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"PHP中-比较-0、false、null\"><a href=\"#PHP中-比较-0、false、null\" class=\"headerlink\" title=\"PHP中 比较 0、false、null\"></a>PHP中 比较 0、false、null</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\necho &#39;0 &#x3D;&#x3D; false: &#39;;\nvar_dump(0 &#x3D;&#x3D; false);\necho &#39;0 &#x3D;&#x3D;&#x3D; false: &#39;;\nvar_dump(0 &#x3D;&#x3D;&#x3D; false);\necho PHP_EOL;\necho &#39;0 &#x3D;&#x3D; null: &#39;;\nvar_dump(0 &#x3D;&#x3D; null);\necho &#39;0 &#x3D;&#x3D;&#x3D; null: &#39;;\nvar_dump(0 &#x3D;&#x3D;&#x3D; null);\necho PHP_EOL;\necho &#39;false &#x3D;&#x3D; null: &#39;;\nvar_dump(false &#x3D;&#x3D; null);\necho &#39;false &#x3D;&#x3D;&#x3D; null: &#39;;\nvar_dump(false &#x3D;&#x3D;&#x3D; null);\necho PHP_EOL;\necho &#39;&quot;0&quot; &#x3D;&#x3D; false: &#39;;\nvar_dump(&quot;0&quot; &#x3D;&#x3D; false);\necho &#39;&quot;0&quot; &#x3D;&#x3D;&#x3D; false: &#39;;\nvar_dump(&quot;0&quot; &#x3D;&#x3D;&#x3D; false);\necho PHP_EOL;\necho &#39;&quot;0&quot; &#x3D;&#x3D; null: &#39;;\nvar_dump(&quot;0&quot; &#x3D;&#x3D; null);\necho &#39;&quot;0&quot; &#x3D;&#x3D;&#x3D; null: &#39;;\nvar_dump(&quot;0&quot; &#x3D;&#x3D;&#x3D; null);\necho PHP_EOL;\necho &#39;&quot;&quot; &#x3D;&#x3D; false: &#39;;\nvar_dump(&quot;&quot; &#x3D;&#x3D; false);\necho &#39;&quot;&quot; &#x3D;&#x3D;&#x3D; false: &#39;;\nvar_dump(&quot;&quot; &#x3D;&#x3D;&#x3D; false);\necho PHP_EOL;\necho &#39;&quot;&quot; &#x3D;&#x3D; null: &#39;;\nvar_dump(&quot;&quot; &#x3D;&#x3D; null);\necho &#39;&quot;&quot; &#x3D;&#x3D;&#x3D; null: &#39;;\nvar_dump(&quot;&quot; &#x3D;&#x3D;&#x3D; null);</code></pre>\n\n\n\n<h3 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h3><p>常量值被定义后，在脚本的其他任何地方都不能被改变</p>\n<p>常量是一个简单值的标识符。该值在脚本中不能改变。</p>\n<p>一个常量由英文字母、下划线、和数字组成,但数字不能作为首字母出现。 (常量名不需要加 $ 修饰符)。</p>\n<p><strong>注意：</strong> 常量在整个脚本中都可以使用。</p>\n<p>设置常量，使用 define() 函数，函数语法如下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">bool define ( string $name , mixed $value [, bool $case_insensitive &#x3D; false ] )</code></pre>\n\n<p>该函数有三个参数:</p>\n<ul>\n<li><strong>name：</strong>必选参数，常量名称，即标志符。</li>\n<li><strong>value：</strong>必选参数，常量的值。</li>\n<li><strong>case_insensitive</strong> ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。</li>\n</ul>\n<p>创建一个 <strong>区分大小写的常量</strong>, 常量值为 “欢迎访问 xbxaq.com”</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n&#x2F;&#x2F; 区分大小写的常量名\ndefine(&quot;GREETING&quot;, &quot;欢迎访问 xbxaq.com&quot;);\necho GREETING;    &#x2F;&#x2F; 输出 \necho &#39;&lt;br&gt;&#39;;\necho greeting;   &#x2F;&#x2F; 输出 &quot;greeting&quot;，但是有警告信息，表示该常量未定义\n?&gt;</code></pre>\n\n\n\n<h3 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h3><p> PHP 中，赋值运算符 <strong>&#x3D;</strong> 用于给变量赋值。</p>\n<p>在 PHP 中，算术运算符 <strong>+</strong> 用于把值加在一起。</p>\n<h3 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php \n$x&#x3D;10; \n$y&#x3D;6;\necho ($x + $y); &#x2F;&#x2F; 输出16\necho &#39;&lt;br&gt;&#39;;  &#x2F;&#x2F; 换行\n \necho ($x - $y); &#x2F;&#x2F; 输出4\necho &#39;&lt;br&gt;&#39;;  &#x2F;&#x2F; 换行\n \necho ($x * $y); &#x2F;&#x2F; 输出60\necho &#39;&lt;br&gt;&#39;;  &#x2F;&#x2F; 换行\n \necho ($x &#x2F; $y); &#x2F;&#x2F; 输出1.6666666666667\necho &#39;&lt;br&gt;&#39;;  &#x2F;&#x2F; 换行\n \necho ($x % $y); &#x2F;&#x2F; 输出4\necho &#39;&lt;br&gt;&#39;;  &#x2F;&#x2F; 换行\n \necho -$x;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"赋值运算符\"><a href=\"#赋值运算符\" class=\"headerlink\" title=\"赋值运算符\"></a>赋值运算符</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php \n$x&#x3D;10; \necho $x; &#x2F;&#x2F; 输出10\n \n$y&#x3D;20; \n$y +&#x3D; 100;\necho $y; &#x2F;&#x2F; 输出120\n \n$z&#x3D;50;\n$z -&#x3D; 25;\necho $z; &#x2F;&#x2F; 输出25\n \n$i&#x3D;5;\n$i *&#x3D; 6;\necho $i; &#x2F;&#x2F; 输出30\n \n$j&#x3D;10;\n$j &#x2F;&#x3D; 5;\necho $j; &#x2F;&#x2F; 输出2\n \n$k&#x3D;15;\n$k %&#x3D; 4;\necho $k; &#x2F;&#x2F; 输出3\n?&gt;</code></pre>\n\n\n\n<h3 id=\"递增-x2F-递减运算符\"><a href=\"#递增-x2F-递减运算符\" class=\"headerlink\" title=\"递增&#x2F;递减运算符\"></a>递增&#x2F;递减运算符</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$x&#x3D;10; \necho ++$x; &#x2F;&#x2F; 输出11\n \n$y&#x3D;10; \necho $y++; &#x2F;&#x2F; 输出10\n \n$z&#x3D;5;\necho --$z; &#x2F;&#x2F; 输出4\n \n$i&#x3D;5;\necho $i--; &#x2F;&#x2F; 输出5\n?&gt;</code></pre>\n\n\n\n<h3 id=\"比较运算符\"><a href=\"#比较运算符\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$x&#x3D;100; \n$y&#x3D;&quot;100&quot;;\n \nvar_dump($x &#x3D;&#x3D; $y);\necho &quot;&lt;br&gt;&quot;;\nvar_dump($x &#x3D;&#x3D;&#x3D; $y);\necho &quot;&lt;br&gt;&quot;;\nvar_dump($x !&#x3D; $y);\necho &quot;&lt;br&gt;&quot;;\nvar_dump($x !&#x3D;&#x3D; $y);\necho &quot;&lt;br&gt;&quot;;\n \n$a&#x3D;50;\n$b&#x3D;90;\n \nvar_dump($a &gt; $b);\necho &quot;&lt;br&gt;&quot;;\nvar_dump($a &lt; $b);\n?&gt;</code></pre>\n\n\n\n<h3 id=\"三元运算符\"><a href=\"#三元运算符\" class=\"headerlink\" title=\"三元运算符\"></a>三元运算符</h3><h4 id=\"语法格式\"><a href=\"#语法格式\" class=\"headerlink\" title=\"语法格式\"></a>语法格式</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">(expr1) ? (expr2) : (expr3) </code></pre>\n\n<p>对 expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3。</p>\n<h3 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h3><p>您编写代码时，您常常需要为不同的判断执行不同的动作。您可以在代码中使用条件语句来完成此任务。</p>\n<p>在 PHP 中，提供了下列条件语句：</p>\n<ul>\n<li><strong>if 语句</strong> - 在条件成立时执行代码</li>\n<li><strong>if…else 语句</strong> - 在条件成立时执行一块代码，条件不成立时执行另一块代码</li>\n<li><strong>if…elseif….else 语句</strong> - 在若干条件之一成立时执行一个代码块</li>\n<li><strong>switch 语句</strong> - 在若干条件之一成立时执行一个代码块</li>\n</ul>\n<p>if 语句用于<strong>仅当指定条件成立时执行代码</strong></p>\n<h4 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">if (条件)\n&#123;\n    条件成立时要执行的代码;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$t&#x3D;date(&quot;H&quot;);\nif ($t&lt;&quot;20&quot;)\n&#123;\n    echo &quot;Have a good day!&quot;;\n&#125;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"if…else-语句\"><a href=\"#if…else-语句\" class=\"headerlink\" title=\"if…else 语句\"></a>if…else 语句</h3><p><strong>在条件成立时执行一块代码，条件不成立时执行另一块代码</strong>，请使用 if….else 语句。</p>\n<h4 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法\"></a>语法</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">if (条件)\n&#123;\n条件成立时执行的代码;\n&#125;\nelse\n&#123;\n条件不成立时执行的代码;\n&#125;</code></pre>\n\n\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$t&#x3D;date(&quot;H&quot;);\nif ($t&lt;&quot;20&quot;)\n&#123;\n    echo &quot;Have a good day!&quot;;\n&#125;\nelse\n&#123;\n    echo &quot;Have a good night!&quot;;\n&#125;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"if…elseif…-else-语句\"><a href=\"#if…elseif…-else-语句\" class=\"headerlink\" title=\"if…elseif….else 语句\"></a>if…elseif….else 语句</h3><p><strong>在若干条件之一成立时执行一个代码块</strong>，请使用 if….elseif…else 语句。.</p>\n<h4 id=\"语法-2\"><a href=\"#语法-2\" class=\"headerlink\" title=\"语法\"></a>语法</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">if (条件)\n&#123;\n    if 条件成立时执行的代码;\n&#125;\nelseif (条件)\n&#123;\n    elseif 条件成立时执行的代码;\n&#125;\nelse\n&#123;\n    条件不成立时执行的代码;\n&#125;</code></pre>\n\n\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$t&#x3D;date(&quot;H&quot;);\nif ($t&lt;&quot;10&quot;)\n&#123;\n    echo &quot;Have a good morning!&quot;;\n&#125;\nelseif ($t&lt;&quot;20&quot;)\n&#123;\n    echo &quot;Have a good day!&quot;;\n&#125;\nelse\n&#123;\n    echo &quot;Have a good night!&quot;;\n&#125;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"Switch-语句\"><a href=\"#Switch-语句\" class=\"headerlink\" title=\"Switch 语句\"></a>Switch 语句</h3><p>switch 语句用于根据多个不同条件执行不同动作。</p>\n<p>如果您希望<strong>有选择地执行若干代码块之一</strong>，请使用 switch 语句。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$favcolor&#x3D;&quot;red&quot;;\nswitch ($favcolor)\n&#123;\ncase &quot;red&quot;:\n    echo &quot;你喜欢的颜色是红色!&quot;;\n    break;\ncase &quot;blue&quot;:\n    echo &quot;你喜欢的颜色是蓝色!&quot;;\n    break;\ncase &quot;green&quot;:\n    echo &quot;你喜欢的颜色是绿色!&quot;;\n    break;\ndefault:\n    echo &quot;你喜欢的颜色不是 红, 蓝, 或绿色!&quot;;\n&#125;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"数组-1\"><a href=\"#数组-1\" class=\"headerlink\" title=\"数组\"></a>数组</h3><p>数组能够在单个变量中存储多个值</p>\n<p>数组可以在单个变量中存储多个值，并且您可以根据键访问其中的值。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);\necho &quot;I like &quot; . $cars[0] . &quot;, &quot; . $cars[1] . &quot; and &quot; . $cars[2] . &quot;.&quot;;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"创建数组\"><a href=\"#创建数组\" class=\"headerlink\" title=\"创建数组\"></a>创建数组</h3><p>在 PHP 中，array() 函数用于创建数组：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">array();</code></pre>\n\n\n\n<p>在 PHP 中，有三种类型的数组：</p>\n<ul>\n<li><strong>数值数组</strong> - 带有数字 ID 键的数组</li>\n<li><strong>关联数组</strong> - 带有指定的键的数组，每个键关联一个值</li>\n<li><strong>多维数组</strong> - 包含一个或多个数组的数组</li>\n</ul>\n<h3 id=\"数值数组\"><a href=\"#数值数组\" class=\"headerlink\" title=\"数值数组\"></a>数值数组</h3><p>这里有两种创建数值数组的方法：</p>\n<p>自动分配 ID 键（ID 键总是从 0 开始）：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);</code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);\necho &quot;I like &quot; . $cars[0] . &quot;, &quot; . $cars[1] . &quot; and &quot; . $cars[2] . &quot;.&quot;;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"获取数组的长度-count-函数\"><a href=\"#获取数组的长度-count-函数\" class=\"headerlink\" title=\"获取数组的长度 - count() 函数\"></a>获取数组的长度 - count() 函数</h3><p>count() 函数用于返回数组的长度（元素的数量）</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);\necho count($cars);\n?&gt;</code></pre>\n\n\n\n<h3 id=\"遍历数值数组\"><a href=\"#遍历数值数组\" class=\"headerlink\" title=\"遍历数值数组\"></a>遍历数值数组</h3><p>遍历并打印数值数组中的所有值，您可以使用 for 循环</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$cars&#x3D;array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);\n$arrlength&#x3D;count($cars);\n \nfor($x&#x3D;0;$x&lt;$arrlength;$x++)\n&#123;\n    echo $cars[$x];\n    echo &quot;&lt;br&gt;&quot;;\n&#125;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"关联数组\"><a href=\"#关联数组\" class=\"headerlink\" title=\"关联数组\"></a>关联数组</h3><p>关联数组是使用您分配给数组的指定的键的数组。</p>\n<p>这里有两种创建关联数组的方法</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$age&#x3D;array(&quot;Peter&quot;&#x3D;&gt;&quot;35&quot;,&quot;Ben&quot;&#x3D;&gt;&quot;37&quot;,&quot;Joe&quot;&#x3D;&gt;&quot;43&quot;);\n\nor\n\n$age[&#39;Peter&#39;]&#x3D;&quot;35&quot;;\n$age[&#39;Ben&#39;]&#x3D;&quot;37&quot;;\n$age[&#39;Joe&#39;]&#x3D;&quot;43&quot;;</code></pre>\n\n\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$age&#x3D;array(&quot;Peter&quot;&#x3D;&gt;&quot;35&quot;,&quot;Ben&quot;&#x3D;&gt;&quot;37&quot;,&quot;Joe&quot;&#x3D;&gt;&quot;43&quot;);\necho &quot;Peter is &quot; . $age[&#39;Peter&#39;] . &quot; years old.&quot;;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"遍历关联数组\"><a href=\"#遍历关联数组\" class=\"headerlink\" title=\"遍历关联数组\"></a>遍历关联数组</h3><p>遍历并打印关联数组中的所有值，您可以使用 foreach 循环</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$age&#x3D;array(&quot;Peter&quot;&#x3D;&gt;&quot;35&quot;,&quot;Ben&quot;&#x3D;&gt;&quot;37&quot;,&quot;Joe&quot;&#x3D;&gt;&quot;43&quot;);\n \nforeach($age as $x&#x3D;&gt;$x_value)\n&#123;\n    echo &quot;Key&#x3D;&quot; . $x . &quot;, Value&#x3D;&quot; . $x_value;\n    echo &quot;&lt;br&gt;&quot;;\n&#125;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h3><p>循环执行代码块指定的次数，或者当指定的条件为真时循环执行代码块。</p>\n<p>在 PHP 中，提供了下列循环语句：</p>\n<ul>\n<li><strong>while</strong> - 只要指定的条件成立，则循环执行代码块</li>\n<li><strong>do…while</strong> - 首先执行一次代码块，然后在指定的条件成立时重复这个循环</li>\n<li><strong>for</strong> - 循环执行代码块指定的次数</li>\n<li><strong>foreach</strong> - 根据数组中每个元素来循环代码块</li>\n</ul>\n<h3 id=\"while-循环\"><a href=\"#while-循环\" class=\"headerlink\" title=\"while 循环\"></a>while 循环</h3><p>while 循环将重复执行代码块，直到指定的条件不成立。</p>\n<h4 id=\"语法-3\"><a href=\"#语法-3\" class=\"headerlink\" title=\"语法\"></a>语法</h4><pre class=\"line-numbers language-·\" data-language=\"·\"><code class=\"language-·\">while (条件)\n&#123;\n    要执行的代码;\n&#125;</code></pre>\n\n\n\n<p>实例首先设置变量 <em>i</em> 的值为 1 ($i&#x3D;1;)。</p>\n<p>然后，只要 <em>i</em> 小于或者等于 5，while 循环将继续运行。循环每运行一次，<em>i</em> 就会递增 1：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;html&gt;\n&lt;body&gt;\n\n&lt;?php\n$i&#x3D;1;\nwhile($i&lt;&#x3D;5)\n&#123;\n    echo &quot;The number is &quot; . $i . &quot;&lt;br&gt;&quot;;\n    $i++;\n&#125;\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n\n\n<h3 id=\"do…while-语句\"><a href=\"#do…while-语句\" class=\"headerlink\" title=\"do…while 语句\"></a>do…while 语句</h3><p>do…while 语句会至少执行一次代码，然后检查条件，只要条件成立，就会重复进行循环。</p>\n<h4 id=\"语法-4\"><a href=\"#语法-4\" class=\"headerlink\" title=\"语法\"></a>语法</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">do\n&#123;\n    要执行的代码;\n&#125;\nwhile (条件);</code></pre>\n\n\n\n<p>实例首先设置变量 <em>i</em> 的值为 1 ($i&#x3D;1;)。</p>\n<p>然后，开始 do…while 循环。循环将变量 <em>i</em> 的值递增 1，然后输出。先检查条件（<em>i</em> 小于或者等于 5），只要 <em>i</em> 小于或者等于 5，循环将继续运行</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;html&gt;\n&lt;body&gt;\n\n&lt;?php\n$i&#x3D;1;\ndo\n&#123;\n    $i++;\n    echo &quot;The number is &quot; . $i . &quot;&lt;br&gt;&quot;;\n&#125;\nwhile ($i&lt;&#x3D;5);\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h3 id=\"For-循环\"><a href=\"#For-循环\" class=\"headerlink\" title=\"For 循环\"></a>For 循环</h3><p>for 循环用于您预先知道脚本需要运行的次数的情况。</p>\n<h4 id=\"语法-5\"><a href=\"#语法-5\" class=\"headerlink\" title=\"语法\"></a>语法</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">for (初始值; 条件; 增量)\n&#123;\n    要执行的代码;\n&#125;</code></pre>\n\n<p>参数：</p>\n<ul>\n<li><strong>初始值</strong>：主要是初始化一个变量值，用于设置一个计数器（但可以是任何在循环的开始被执行一次的代码）。</li>\n<li><strong>条件</strong>：循环执行的限制条件。如果为 TRUE，则循环继续。如果为 FALSE，则循环结束。</li>\n<li><strong>增量</strong>：主要用于递增计数器（但可以是任何在循环的结束被执行的代码）。</li>\n</ul>\n<p><strong>注释：</strong>上面的<strong>初始值</strong>和<strong>增量</strong>参数可为空，或者有多个表达式（用逗号分隔）。</p>\n<p>实例</p>\n<p>下面的实例定义一个初始值为 i&#x3D;1 的循环。只要变量 <strong>i</strong> 小于或者等于 5，循环将继续运行。循环每运行一次，变量 <strong>i</strong> 就会递增 1</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nfor ($i&#x3D;1; $i&lt;&#x3D;5; $i++)\n&#123;\n    echo &quot;数字为 &quot; . $i;\n&#125;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"foreach-循环\"><a href=\"#foreach-循环\" class=\"headerlink\" title=\"foreach 循环\"></a>foreach 循环</h3><p>foreach 循环用于遍历数组。</p>\n<h4 id=\"语法-6\"><a href=\"#语法-6\" class=\"headerlink\" title=\"语法\"></a>语法</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">foreach ($array as $value)\n&#123;\n    要执行代码;\n&#125;</code></pre>\n\n<p>每进行一次循环，当前数组元素的值就会被赋值给 $value 变量（数组指针会逐一地移动），在进行下一次循环时，您将看到数组中的下一个值。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">foreach ($array as $key &#x3D;&gt; $value)\n&#123;\n    要执行代码;\n&#125;</code></pre>\n\n<p>每一次循环，当前数组元素的键与值就都会被赋值给 $key 和 $value 变量（数字指针会逐一地移动），在进行下一次循环时，你将看到数组中的下一个键与值。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$x&#x3D;array(&quot;Google&quot;,&quot;Runoob&quot;,&quot;Taobao&quot;);\nforeach ($x as $value)\n&#123;\n    echo $value . PHP_EOL;\n&#125;\n?&gt;</code></pre>\n\n\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$x&#x3D;array(1&#x3D;&gt;&quot;Google&quot;, 2&#x3D;&gt;&quot;Runoob&quot;, 3&#x3D;&gt;&quot;Taobao&quot;);\nforeach ($x as $key &#x3D;&gt; $value)\n&#123;\n    echo &quot;key  为 &quot; . $key . &quot;，对应的 value 为 &quot;. $value . PHP_EOL;\n&#125;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><h4 id=\"创建-PHP-函数\"><a href=\"#创建-PHP-函数\" class=\"headerlink\" title=\"创建 PHP 函数\"></a>创建 PHP 函数</h4><p>函数是通过调用函数来执行的。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nfunction functionName()\n&#123;\n    &#x2F;&#x2F; 要执行的代码\n&#125;\n?&gt;</code></pre>\n\n<p>函数准则：</p>\n<ul>\n<li>函数的名称应该提示出它的功能</li>\n<li>函数名称以字母或下划线开头（不能以数字开头）</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nfunction writeName()\n&#123;\n    echo &quot;Kai Jim Refsnes&quot;;\n&#125;\n \necho &quot;My name is &quot;;\nwriteName();\n?&gt;</code></pre>\n\n\n\n<h4 id=\"函数-添加参数\"><a href=\"#函数-添加参数\" class=\"headerlink\" title=\"函数 - 添加参数\"></a>函数 - 添加参数</h4><p>为了给函数添加更多的功能，我们可以添加参数，参数类似变量。</p>\n<p>参数就在函数名称后面的一个括号内指定。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nfunction writeName($fname)\n&#123;\n    echo $fname . &quot; Refsnes.&lt;br&gt;&quot;;\n&#125;\n \necho &quot;My name is &quot;;\nwriteName(&quot;Kai Jim&quot;);\necho &quot;My sister&#39;s name is &quot;;\nwriteName(&quot;Hege&quot;);\necho &quot;My brother&#39;s name is &quot;;\nwriteName(&quot;Stale&quot;);\n?&gt;</code></pre>\n\n\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nfunction writeName($fname,$punctuation)\n&#123;\n    echo $fname . &quot; Refsnes&quot; . $punctuation . &quot;&lt;br&gt;&quot;;\n&#125;\n \necho &quot;My name is &quot;;\nwriteName(&quot;Kai Jim&quot;,&quot;.&quot;);\necho &quot;My sister&#39;s name is &quot;;\nwriteName(&quot;Hege&quot;,&quot;!&quot;);\necho &quot;My brother&#39;s name is &quot;;\nwriteName(&quot;Ståle&quot;,&quot;?&quot;);\n?&gt;</code></pre>\n\n\n\n<h4 id=\"函数-返回值\"><a href=\"#函数-返回值\" class=\"headerlink\" title=\"函数 - 返回值\"></a>函数 - 返回值</h4><p>如需让函数返回一个值，请使用 return 语句</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nfunction add($x,$y)\n&#123;\n    $total&#x3D;$x+$y;\n    return $total;\n&#125;\n \necho &quot;1 + 16 &#x3D; &quot; . add(1,16);\n?&gt;</code></pre>\n\n\n\n<h2 id=\"PHP表单\"><a href=\"#PHP表单\" class=\"headerlink\" title=\"PHP表单\"></a>PHP表单</h2><p>PHP 中的 $_GET 和 $_POST 变量用于检索表单中的信息，比如用户输入</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;\n&lt;title&gt;菜鸟教程(runoob.com)&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n \n&lt;form action&#x3D;&quot;welcome.php&quot; method&#x3D;&quot;post&quot;&gt;\n名字: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;fname&quot;&gt;\n年龄: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;age&quot;&gt;\n&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;\n&lt;&#x2F;form&gt;\n \n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n\n\n<p>用户填写完上面的表单并点击提交按钮时，表单的数据会被送往名为 “welcome.php” 的 PHP 文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">欢迎&lt;?php echo $_POST[&quot;fname&quot;]; ?&gt;!&lt;br&gt;\n你的年龄是 &lt;?php echo $_POST[&quot;age&quot;]; ?&gt;  岁。</code></pre>\n\n\n\n<h2 id=\"PHP文件\"><a href=\"#PHP文件\" class=\"headerlink\" title=\"PHP文件\"></a>PHP文件</h2><h3 id=\"文件处理\"><a href=\"#文件处理\" class=\"headerlink\" title=\"文件处理\"></a>文件处理</h3><p>fopen() 函数用于在 PHP 中打开文件。</p>\n<h4 id=\"打开文件\"><a href=\"#打开文件\" class=\"headerlink\" title=\"打开文件\"></a>打开文件</h4><p>fopen() 函数用于在 PHP 中打开文件。</p>\n<p>此函数的第一个参数含有要打开的文件的名称，第二个参数规定了使用哪种模式来打开文件：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;html&gt;\n&lt;body&gt;\n\n&lt;?php\n$file&#x3D;fopen(&quot;welcome.txt&quot;,&quot;r&quot;);\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<p>文件可能通过下列模式来打开：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">模式</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">r</td>\n<td align=\"left\">只读。在文件的开头开始。</td>\n</tr>\n<tr>\n<td align=\"left\">r+</td>\n<td align=\"left\">读&#x2F;写。在文件的开头开始。</td>\n</tr>\n<tr>\n<td align=\"left\">w</td>\n<td align=\"left\">只写。打开并清空文件的内容；如果文件不存在，则创建新文件。</td>\n</tr>\n<tr>\n<td align=\"left\">w+</td>\n<td align=\"left\">读&#x2F;写。打开并清空文件的内容；如果文件不存在，则创建新文件。</td>\n</tr>\n<tr>\n<td align=\"left\">a</td>\n<td align=\"left\">追加。打开并向文件末尾进行写操作，如果文件不存在，则创建新文件。</td>\n</tr>\n<tr>\n<td align=\"left\">a+</td>\n<td align=\"left\">读&#x2F;追加。通过向文件末尾写内容，来保持文件内容。</td>\n</tr>\n<tr>\n<td align=\"left\">x</td>\n<td align=\"left\">只写。创建新文件。如果文件已存在，则返回 FALSE 和一个错误。</td>\n</tr>\n<tr>\n<td align=\"left\">x+</td>\n<td align=\"left\">读&#x2F;写。创建新文件。如果文件已存在，则返回 FALSE 和一个错误。</td>\n</tr>\n</tbody></table>\n<p><strong>注释：</strong>如果 fopen() 函数无法打开指定文件，则返回 0 (false)</p>\n<p>如果 fopen() 函数不能打开指定的文件，下面的实例会生成一段消息</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;html&gt;\n&lt;body&gt;\n\n&lt;?php\n$file&#x3D;fopen(&quot;welcome.txt&quot;,&quot;r&quot;) or exit(&quot;Unable to open file!&quot;);\n?&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n\n\n<h4 id=\"关闭文件\"><a href=\"#关闭文件\" class=\"headerlink\" title=\"关闭文件\"></a>关闭文件</h4><p>fclose() 函数用于关闭打开的文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$file &#x3D; fopen(&quot;test.txt&quot;,&quot;r&quot;);\n\n&#x2F;&#x2F;执行一些代码\n\nfclose($file);\n?&gt;</code></pre>\n\n\n\n<h4 id=\"逐行读取文件\"><a href=\"#逐行读取文件\" class=\"headerlink\" title=\"逐行读取文件\"></a>逐行读取文件</h4><p>fgets() 函数用于从文件中逐行读取文件。</p>\n<p><strong>注释：</strong>在调用该函数之后，文件指针会移动到下一行。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$file &#x3D; fopen(&quot;welcome.txt&quot;, &quot;r&quot;) or exit(&quot;无法打开文件!&quot;);\n&#x2F;&#x2F; 读取文件每一行，直到文件结尾\nwhile(!feof($file))\n&#123;\n    echo fgets($file). &quot;&lt;br&gt;&quot;;\n&#125;\nfclose($file);\n?&gt;</code></pre>\n\n\n\n<h4 id=\"逐字符读取文件\"><a href=\"#逐字符读取文件\" class=\"headerlink\" title=\"逐字符读取文件\"></a>逐字符读取文件</h4><p>fgetc() 函数用于从文件中逐字符地读取文件。</p>\n<p><strong>注释：</strong>在调用该函数之后，文件指针会移动到下一个字符。</p>\n<h5 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h5><p>下面的实例逐字符地读取文件，直到文件末尾为止</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$file&#x3D;fopen(&quot;welcome.txt&quot;,&quot;r&quot;) or exit(&quot;无法打开文件!&quot;);\nwhile (!feof($file))\n&#123;\n    echo fgetc($file);\n&#125;\nfclose($file);\n?&gt;</code></pre>\n\n\n\n\n\n\n\n<h3 id=\"文件上传表单\"><a href=\"#文件上传表单\" class=\"headerlink\" title=\"文件上传表单\"></a>文件上传表单</h3><p>通过 PHP，可以把文件上传到服务器</p>\n<p>test 项目下完成，目录结构为：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">test\n|-----upload             # 文件上传的目录\n|-----form.html          # 表单文件\n|-----upload_file.php    # php 上传代码</code></pre>\n\n\n\n<h4 id=\"创建一个文件上传表单\"><a href=\"#创建一个文件上传表单\" class=\"headerlink\" title=\"创建一个文件上传表单\"></a>创建一个文件上传表单</h4><p>form.html</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;\n&lt;title&gt;表单&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n\n&lt;form action&#x3D;&quot;upload_file.php&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;\n    &lt;label for&#x3D;&quot;file&quot;&gt;文件名：&lt;&#x2F;label&gt;\n    &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file&quot; id&#x3D;&quot;file&quot;&gt;&lt;br&gt;\n    &lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;\n&lt;&#x2F;form&gt;\n\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n\n\n<h4 id=\"创建上传脚本\"><a href=\"#创建上传脚本\" class=\"headerlink\" title=\"创建上传脚本\"></a>创建上传脚本</h4><p>“upload_file.php” 文件含有供上传文件的代码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\nif ($_FILES[&quot;file&quot;][&quot;error&quot;] &gt; 0)\n&#123;\n    echo &quot;错误：&quot; . $_FILES[&quot;file&quot;][&quot;error&quot;] . &quot;&lt;br&gt;&quot;;\n&#125;\nelse\n&#123;\n    echo &quot;上传文件名: &quot; . $_FILES[&quot;file&quot;][&quot;name&quot;] . &quot;&lt;br&gt;&quot;;\n    echo &quot;文件类型: &quot; . $_FILES[&quot;file&quot;][&quot;type&quot;] . &quot;&lt;br&gt;&quot;;\n    echo &quot;文件大小: &quot; . ($_FILES[&quot;file&quot;][&quot;size&quot;] &#x2F; 1024) . &quot; kB&lt;br&gt;&quot;;\n    echo &quot;文件临时存储的位置: &quot; . $_FILES[&quot;file&quot;][&quot;tmp_name&quot;];\n&#125;\n?&gt;</code></pre>\n\n\n\n<p>通过使用 PHP 的全局数组 $_FILES，你可以从客户计算机向远程服务器上传文件。</p>\n<p>第一个参数是表单的 input name，第二个下标可以是 “name”、”type”、”size”、”tmp_name” 或 “error”。如下所示：</p>\n<ul>\n<li>$_FILES[“file”][“name”] - 上传文件的名称</li>\n<li>$_FILES[“file”][“type”] - 上传文件的类型</li>\n<li>$_FILES[“file”][“size”] - 上传文件的大小，以字节计</li>\n<li>$_FILES[“file”][“tmp_name”] - 存储在服务器的文件的临时副本的名称</li>\n<li>$_FILES[“file”][“error”] - 由文件上传导致的错误代码</li>\n</ul>\n<p>这是一种非常简单文件上传方式。基于安全方面的考虑，您应当增加有关允许哪些用户上传文件的限制。</p>\n<h2 id=\"PHP连接MySQL数据库\"><a href=\"#PHP连接MySQL数据库\" class=\"headerlink\" title=\"PHP连接MySQL数据库\"></a>PHP连接MySQL数据库</h2><p>通过 PHP，您可以连接和操作数据库。</p>\n<h3 id=\"连接-MySQL\"><a href=\"#连接-MySQL\" class=\"headerlink\" title=\"连接 MySQL\"></a>连接 MySQL</h3><p>在我们访问 MySQL 数据库前，我们需要先连接到数据库服务器</p>\n<h3 id=\"MySQLi-面向对象）\"><a href=\"#MySQLi-面向对象）\" class=\"headerlink\" title=\"(MySQLi - 面向对象）\"></a>(MySQLi - 面向对象）</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$servername &#x3D; &quot;localhost&quot;;\n$username &#x3D; &quot;username&quot;;\n$password &#x3D; &quot;password&quot;;\n \n&#x2F;&#x2F; 创建连接\n$conn &#x3D; new mysqli($servername, $username, $password);\n \n&#x2F;&#x2F; 检测连接\nif ($conn-&gt;connect_error) &#123;\n    die(&quot;连接失败: &quot; . $conn-&gt;connect_error);\n&#125; \necho &quot;连接成功&quot;;\n?&gt;</code></pre>\n\n<p>注意： 注意在以上面向对象的实例中 $connect_error 是在 PHP 5.2.9 和 5.3.0 中添加的。如果你需要兼容更早版本 请使用以下代码替换:  &#x2F;&#x2F; 检测连接 if (mysqli_connect_error()) {   die(“数据库连接失败: “ . mysqli_connect_error()); }</p>\n<h3 id=\"MySQLi-面向过程\"><a href=\"#MySQLi-面向过程\" class=\"headerlink\" title=\"MySQLi - 面向过程\"></a>MySQLi - 面向过程</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$servername &#x3D; &quot;localhost&quot;;\n$username &#x3D; &quot;username&quot;;\n$password &#x3D; &quot;password&quot;;\n \n&#x2F;&#x2F; 创建连接\n$conn &#x3D; mysqli_connect($servername, $username, $password);\n \n&#x2F;&#x2F; 检测连接\nif (!$conn) &#123;\n    die(&quot;Connection failed: &quot; . mysqli_connect_error());\n&#125;\necho &quot;连接成功&quot;;\n?&gt;</code></pre>\n\n\n\n<h3 id=\"PDO\"><a href=\"#PDO\" class=\"headerlink\" title=\"PDO\"></a>PDO</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n$servername &#x3D; &quot;localhost&quot;;\n$username &#x3D; &quot;username&quot;;\n$password &#x3D; &quot;password&quot;;\n \ntry &#123;\n    $conn &#x3D; new PDO(&quot;mysql:host&#x3D;$servername;&quot;, $username, $password);\n    echo &quot;连接成功&quot;; \n&#125;\ncatch(PDOException $e)\n&#123;\n    echo $e-&gt;getMessage();\n&#125;\n?&gt;</code></pre>\n\n\n\n\n\n<p><a href=\"https://blog.csdn.net/weixin_42248871/category_10598601.html\">MySQL基础知识链接</a></p>\n<h3 id=\"连接数据库\"><a href=\"#连接数据库\" class=\"headerlink\" title=\"连接数据库\"></a>连接数据库</h3><ul>\n<li>实例：</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n    &#x2F;&#x2F; 创建连接\n&#x2F;&#x2F; $conn &#x3D; mysqli_connect($servername, $username, $password);\n    $conn &#x3D; mysqli_connect(&#39;localhost&#39;, &#39;root&#39;,&#39;root&#39;);\n\n    &#x2F;&#x2F; 检测连接\n    if(!$conn)&#123;\n        die(mysqli_connect_error());\n    &#125;\n    echo &quot;连接成功&quot;;\n\n    &#x2F;&#x2F;关闭连接\n    mysqli_close($conn); \n?&gt;</code></pre>\n\n<h3 id=\"创建数据库\"><a href=\"#创建数据库\" class=\"headerlink\" title=\"创建数据库\"></a>创建数据库</h3><ul>\n<li>数据库存有一个或者多个表</li>\n<li>需要create 权限来创建或删除MySQL数据库</li>\n<li>创建数据库语句：<code>create database name</code></li>\n<li>实例：</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n    &#x2F;&#x2F; 创建连接\n&#x2F;&#x2F; $conn &#x3D; mysqli_connect($servername, $username, $password);\n    $conn &#x3D; mysqli_connect(&#39;localhost&#39;, &#39;root&#39;,&#39;root&#39;);\n\n    &#x2F;&#x2F; 检测连接\n    if(!$conn)&#123;\n        die(mysqli_connect_error());\n    &#125;\n    echo &quot;连接成功&quot;;\n    echo &quot;&lt;br&gt;&quot;;\n\n    &#x2F;&#x2F; 创建数据库语句\n    $sql &#x3D; &quot;CREATE DATABASE PHP&quot;; &#x2F;&#x2F; 创建一个PHP数据库\n\n    &#x2F;&#x2F; mysqli_query() 向MySQL数据库执行一条语句\n    if(mysqli_query($conn,$sql))&#123;\n        echo &quot;创建数据库 PHP成功&quot;;\n        &#125;\n    else&#123;\n        echo mysqli_error($conn);\n    &#125;\n\n    &#x2F;&#x2F;关闭连接\n    mysqli_close($conn); \n?&gt;</code></pre>\n\n<p>运行后查看数据库是否添加<br><img src=\"F:\\Deskfile\\Desk\\images\\20210623160129910.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"创建数据表\"><a href=\"#创建数据表\" class=\"headerlink\" title=\"创建数据表\"></a>创建数据表</h3><ul>\n<li>创建表的语句：<code>create table </code></li>\n<li>实例：</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n    &#x2F;&#x2F; 创建连接\n&#x2F;&#x2F; $conn &#x3D; mysqli_connect($servername, $username, $password);\n    $conn &#x3D; mysqli_connect(&#39;localhost&#39;, &#39;root&#39;,&#39;root&#39;,&#39;PHP&#39;);\n\n    &#x2F;&#x2F; 检测连接\n    if(!$conn)&#123;\n        die(mysqli_connect_error());\n    &#125;\n    else&#123;\n        echo &quot;连接成功&quot;;\n        echo &quot;&lt;br&gt;&quot;;\n    &#125;\n\n    &#x2F;&#x2F; 创建数据表语句\n    $sql &#x3D; &quot;create table MyGuests (\n        id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, \n        firstname VARCHAR(30) NOT NULL,\n        lastname VARCHAR(30) NOT NULL,\n        email VARCHAR(50),\n        reg_date TIMESTAMP\n        )&quot;;\n     \n     &#x2F;&#x2F;向数据库执行sql语句\n     if(mysqli_query($conn,$sql))&#123;\n        echo &quot;创建数据表成功&quot;;\n        echo &quot;&lt;br&gt;&quot;;\n     &#125; \n     else&#123;echo mysqli_error($conn);&#125;\n\n\n    &#x2F;&#x2F;关闭连接\n    mysqli_close($conn); \n?&gt;</code></pre>\n\n<p>运行截图<br><img src=\"F:\\Deskfile\\Desk\\images\\20210623160739381-166426660572518.png\" alt=\"在这里插入图片描述\"><br>数据库中的信息<br><img src=\"F:\\Deskfile\\Desk\\images\\watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjI0ODg3MQ==,size_16,color_FFFFFF,t_70.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h3><ul>\n<li>语法：<code>insert into</code></li>\n<li>实例：</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n    &#x2F;&#x2F; 创建连接\n&#x2F;&#x2F; $conn &#x3D; mysqli_connect($servername, $username, $password);\n    $conn &#x3D; mysqli_connect(&#39;localhost&#39;, &#39;root&#39;,&#39;root&#39;,&#39;PHP&#39;);\n\n    &#x2F;&#x2F; 检测连接\n    if(!$conn)&#123;\n        die(mysqli_connect_error());\n    &#125;\n    else&#123;\n        echo &quot;连接成功&quot;;\n        echo &quot;&lt;br&gt;&quot;;\n    &#125;\n\n    &#x2F;&#x2F; 创建插入语句\n    $sql &#x3D; &quot;INSERT INTO MyGuests (firstname, lastname, email) VALUES (&#39;John&#39;, &#39;Doe&#39;, &#39;john@example.com&#39;)&quot;;\n\n    &#x2F;&#x2F; 执行语句\n    if(mysqli_query($conn,$sql))&#123;\n        echo &quot;数据插入成功&quot;;\n    &#125;\n    else&#123;echo mysqli_error($conn);&#125;\n\n    &#x2F;&#x2F;关闭连接\n    mysqli_close($conn); \n?&gt;</code></pre>\n\n<p>运行截图<br><img src=\"F:\\Deskfile\\Desk\\images\\2021062316121657.png\" alt=\"在这里插入图片描述\"><br>数据库中的信息<br><img src=\"F:\\Deskfile\\Desk\\images\\20210623161242133-166426660572521.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"插入多条数据\"><a href=\"#插入多条数据\" class=\"headerlink\" title=\"插入多条数据\"></a>插入多条数据</h3><ul>\n<li>mysqli_multi_query() 函数可用来执行多条SQL语句</li>\n<li>实例：</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n    &#x2F;&#x2F; 创建连接\n&#x2F;&#x2F; $conn &#x3D; mysqli_connect($servername, $username, $password);\n    $conn &#x3D; mysqli_connect(&#39;localhost&#39;, &#39;root&#39;,&#39;root&#39;,&#39;PHP&#39;);\n\n    &#x2F;&#x2F; 检测连接\n    if(!$conn)&#123;\n        die(mysqli_connect_error());\n    &#125;\n    else&#123;\n        echo &quot;连接成功&quot;;\n        echo &quot;&lt;br&gt;&quot;;\n    &#125;\n\n    &#x2F;&#x2F; 创建插入语句\n    $sql &#x3D; &quot;INSERT INTO MyGuests (firstname, lastname, email) VALUES (&#39;pual&#39;, &#39;bei&#39;, &#39;pual@example.com&#39;);&quot;;\n    $sql .&#x3D; &quot;INSERT INTO MyGuests (firstname, lastname, email) VALUES (&#39;Mary&#39;, &#39;Moe&#39;, &#39;mary@example.com&#39;);&quot;;\n    $sql .&#x3D; &quot;INSERT INTO MyGuests (firstname, lastname, email) VALUES (&#39;Julie&#39;, &#39;Dooley&#39;, &#39;julie@example.com&#39;)&quot;;\n\n    &#x2F;&#x2F; 一次性插入多条语句\n    if(mysqli_multi_query($conn,$sql))&#123;\n        echo &quot;添加记录成功&quot;;\n    &#125;\n    else&#123;echo mysqli_connect_error;&#125;\n\n    &#x2F;&#x2F;关闭连接\n    mysqli_close($conn); \n?&gt;</code></pre>\n\n<p>运行截图<br><img src=\"F:\\Deskfile\\Desk\\images\\20210623161756556-166426660572624.png\" alt=\"在这里插入图片描述\"><br>数据库中的信息<br><img src=\"F:\\Deskfile\\Desk\\images\\20210623161814443.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"读取数据\"><a href=\"#读取数据\" class=\"headerlink\" title=\"读取数据\"></a>读取数据</h3><ul>\n<li>mysqli_num_rows() ：返回sql语句查询到的总行数</li>\n<li>mysqli_fetch_assoc() 函数从结果集中取得一行作为关联数组</li>\n<li>实例：</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n    &#x2F;&#x2F; 创建连接\n&#x2F;&#x2F; $conn &#x3D; mysqli_connect($servername, $username, $password);\n    $conn &#x3D; mysqli_connect(&#39;localhost&#39;, &#39;root&#39;,&#39;root&#39;,&#39;PHP&#39;);\n\n    &#x2F;&#x2F; 检测连接\n    if(!$conn)&#123;\n        die(mysqli_connect_error());\n    &#125;\n    else&#123;\n        echo &quot;连接成功&quot;;\n        echo &quot;&lt;br&gt;&quot;;\n    &#125;\n\n    &#x2F;&#x2F; 创建查询语句\n    $sql &#x3D; &quot;select id, firstname, lastname from MyGuests&quot;;\n    \n    $res &#x3D; mysqli_query($conn,$sql);\n\n    &#x2F;&#x2F; 返回sql语句查询到的总行数\n    &#x2F;&#x2F; mysqli_num_rows($res)\n\n    if(mysqli_num_rows($res) &gt; 0)&#123;\n        while($row &#x3D; mysqli_fetch_assoc($res))&#123;\n            echo &quot;id:&quot; . $row[&quot;id&quot;] . &quot;-name:&quot; . $row[&quot;firstname&quot;] . &quot; &quot; .$row[&#39;lastname&#39;].&quot;&lt;br&gt;&quot;;\n        &#125;\n    &#125;\n\n    &#x2F;&#x2F;关闭连接\n    mysqli_close($conn); \n?&gt;</code></pre>\n\n<p>运行截图<br><img src=\"F:\\Deskfile\\Desk\\images\\20210623165423321.png\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>mysqli_fetch_assoc()函数和mysqli_num_rows()函数的测试代码</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&lt;?php\n    &#x2F;&#x2F; 创建连接\n&#x2F;&#x2F; $conn &#x3D; mysqli_connect($servername, $username, $password);\n    $conn &#x3D; mysqli_connect(&#39;localhost&#39;, &#39;root&#39;,&#39;root&#39;,&#39;PHP&#39;);\n\n    &#x2F;&#x2F; 检测连接\n    if(!$conn)&#123;\n        die(mysqli_connect_error());\n    &#125;\n    else&#123;\n        echo &quot;连接成功&quot;;\n        echo &quot;&lt;br&gt;&quot;;\n    &#125;\n\n    &#x2F;&#x2F; 创建查询语句\n    $sql &#x3D; &quot;select id, firstname, lastname from MyGuests&quot;;\n    \n    $res &#x3D; mysqli_query($conn,$sql);\n\n    &#x2F;&#x2F; 返回sql语句查询到的总行数\n    $row &#x3D; mysqli_num_rows($res) . &quot;&lt;br&gt;&quot;;\n\n    &#x2F;&#x2F; mysqli_fetch_assoc() 函数从结果集中取得一行作为关联数组\n\n    if($row &gt; 0)&#123;\n        while($i &#x3D; mysqli_fetch_assoc($res))&#123;\n            var_dump($i);\n            echo &quot;&lt;br&gt;&quot;;\n            \n            echo &quot;序列号为：&quot; . $i[&#39;id&#39;] . &quot;, firstname为：&quot; . $i[&#39;firstname&#39;] . &quot;, lastname为：&quot; . $i[&#39;lastname&#39;];\n            echo &quot;&lt;hr&gt;&quot;;\n        &#125;\n    &#125;\n\n\n    &#x2F;&#x2F;关闭连接\n    mysqli_close($conn); \n?&gt;</code></pre>\n\n\n\n<h2 id=\"PHP正则表达式\"><a href=\"#PHP正则表达式\" class=\"headerlink\" title=\"PHP正则表达式\"></a>PHP正则表达式</h2><h3 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h3><p>正则表达式存在的意义：过滤和检索。</p>\n<p>正则表达式，又称规则表达式（Regular Expression ）常简写为regex，regexp，RE;</p>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3><p>正则表达式通常被用来检索、替换符合规则的文本</p>\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>灵活性、逻辑性和功能性强</li>\n<li>可以快速地用极简单的方式达到支付出的复杂控制</li>\n</ul>\n<h3 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h3><ul>\n<li>判断字符串是否符合某规则</li>\n<li>从一个字符串中找出符合规则的所以子字符串</li>\n</ul>\n<h3 id=\"常用字符\"><a href=\"#常用字符\" class=\"headerlink\" title=\"常用字符\"></a>常用字符</h3><table>\n<thead>\n<tr>\n<th>说明</th>\n<th>符号</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>数字</td>\n<td>\\d</td>\n</tr>\n<tr>\n<td>非字符</td>\n<td>\\D</td>\n</tr>\n<tr>\n<td>空白字符（空格、制表符、换页符等）</td>\n<td>\\s</td>\n</tr>\n<tr>\n<td>非空白字符</td>\n<td>\\S</td>\n</tr>\n<tr>\n<td>制表符</td>\n<td>\\t</td>\n</tr>\n<tr>\n<td>回车符</td>\n<td>\\r</td>\n</tr>\n<tr>\n<td>换行符</td>\n<td>\\n</td>\n</tr>\n<tr>\n<td>单词字符（26个英文字母+数字+下划线）</td>\n<td>\\w</td>\n</tr>\n<tr>\n<td>非单词字符</td>\n<td>\\W</td>\n</tr>\n</tbody></table>\n<h3 id=\"字符集合\"><a href=\"#字符集合\" class=\"headerlink\" title=\"字符集合\"></a>字符集合</h3><pre><code>字符集合：[ 单个字符或字符区间] ，用于匹配集合内字符\n</code></pre>\n<p>如：</p>\n<ul>\n<li>[a-z]    表示a-z   26个小写字母</li>\n<li>[ 0-9a-h] 表示0-9 10个数字和a-z 8个字母</li>\n<li>[134a-h] 表示包含数字1，3，5和字母a-h 8个字母</li>\n</ul>\n<p>注意：两个不同字符段间请勿使用逗号，隔开</p>\n<h3 id=\"反选字符\"><a href=\"#反选字符\" class=\"headerlink\" title=\"反选字符\"></a>反选字符</h3><pre><code>非集：[\\^单个字符或区间]，用于匹配非集合内字符]\n</code></pre>\n<ul>\n<li><p>反选字符：^\t</p>\n</li>\n<li><p>[^]  注意：中括号内^ 才是反选</p>\n</li>\n<li><p>[^0-9]  表示匹配所有非数字字符</p>\n</li>\n<li><p>[^a-zA-Z] 表示匹配所有非字母字符</p>\n</li>\n</ul>\n<h3 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h3><table>\n<thead>\n<tr>\n<th>关键字</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>^</td>\n<td>匹配输入字符串的开始位置</td>\n</tr>\n<tr>\n<td>$</td>\n<td>匹配输入字符串的结尾位置</td>\n</tr>\n<tr>\n<td>（）</td>\n<td>标记一个子表达式的开始和结束位置</td>\n</tr>\n<tr>\n<td>*</td>\n<td>匹配前面的子表达式零次或多次</td>\n</tr>\n<tr>\n<td>+</td>\n<td>匹配前面的子表达式一次或多次</td>\n</tr>\n<tr>\n<td>.</td>\n<td>匹配除换行符\\n之外的任意单个字符</td>\n</tr>\n<tr>\n<td>[</td>\n<td>标记一个中括号表达式的开始</td>\n</tr>\n<tr>\n<td>？</td>\n<td>匹配前面的子表达式零次或一次</td>\n</tr>\n<tr>\n<td>\\</td>\n<td>将下一个字符标记为特殊字符原来的本意</td>\n</tr>\n<tr>\n<td>{</td>\n<td>标记限定符表达式的开始</td>\n</tr>\n<tr>\n<td>|</td>\n<td>指明两项之间的一项</td>\n</tr>\n</tbody></table>\n<h3 id=\"限定符\"><a href=\"#限定符\" class=\"headerlink\" title=\"限定符\"></a>限定符</h3><table>\n<thead>\n<tr>\n<th>字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>{n}</td>\n<td>n为非负数，匹配连续的字符n次</td>\n</tr>\n<tr>\n<td>{n,}</td>\n<td>n为非负数，匹配连续的字符n次及以上</td>\n</tr>\n<tr>\n<td>{n，m}</td>\n<td>n、m均为非负数，n &lt;&#x3D;m,匹配连续的字符 至少n次，至多m次</td>\n</tr>\n</tbody></table>\n<h3 id=\"修饰符\"><a href=\"#修饰符\" class=\"headerlink\" title=\"修饰符\"></a>修饰符</h3><p>​\t</p>\n<table>\n<thead>\n<tr>\n<th>修饰符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x2F;i</td>\n<td>不区分大小写</td>\n</tr>\n<tr>\n<td>&#x2F;A</td>\n<td>匹配规则必须从头开始匹配</td>\n</tr>\n<tr>\n<td>&#x2F;s</td>\n<td>将匹配一切字符</td>\n</tr>\n<tr>\n<td>&#x2F;X</td>\n<td>正则表达式中的空白字符将会被忽略</td>\n</tr>\n</tbody></table>\n<p>注意：写在正则表达式的“外面“    &#x2F;a&#x2F;i</p>\n<h3 id=\"函数-1\"><a href=\"#函数-1\" class=\"headerlink\" title=\"函数\"></a>函数</h3><p>PHP中使用正则表达式一定要加&#x2F; 正则表达式内容  &#x2F;</p>\n<ul>\n<li><p>preg_match(正则表达式，匹配的字符串)</p>\n<p>匹配第一个匹配正则的子字符串，未找到返回0.找到返回1</p>\n</li>\n<li><p>preg_grep()</p>\n<p>匹配第一个匹配正则的字符串数组，包含匹配的字符串和匹配的单元</p>\n</li>\n<li><p>preg_match_all(正则表达式，匹配的字符串，输出的二维数组)</p>\n<p>能匹配所有的子字符串，返回子字符串匹配的数量</p>\n</li>\n<li><p>pre_replace(正则表达式，替换的字符串，匹配的字符串)</p>\n<p>将所有匹配正则表达式的字符串进行替换</p>\n</li>\n</ul>\n","text":"PHP基本使用PHP基础PHP 是一种创建动态交互性站点的强有力的服务器端脚本语言 PHP 是什么？ PHP（全称：PHP：Hypertext Preprocessor，即”PHP：超文本预处理器”）是一种通用开源脚本语言。 PHP 脚本在服务器上执行。 PHP 可免费下载使用。...","link":"","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"26 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":24,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"php","slug":"php","count":5,"path":"api/tags/php.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#PHP%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">PHP基本使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">PHP基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">PHP 是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-%E6%96%87%E4%BB%B6%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">PHP 文件是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-%E8%83%BD%E5%81%9A%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">PHP 能做什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-PHP%EF%BC%9F\"><span class=\"toc-text\">为什么使用 PHP？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">PHP语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">PHP 注释</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BAPHP%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">创建PHP变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP-%E6%98%AF%E4%B8%80%E9%97%A8%E5%BC%B1%E7%B1%BB%E5%9E%8B%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">PHP 是一门弱类型语言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#echo-%E5%92%8C-print-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">echo 和 print 语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">数据类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">字符串</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B4%E5%9E%8B\"><span class=\"toc-text\">整型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E7%82%B9%E5%9E%8B\"><span class=\"toc-text\">浮点型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%83%E5%B0%94%E5%9E%8B\"><span class=\"toc-text\">布尔型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">对象</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#NULL-%E5%80%BC\"><span class=\"toc-text\">NULL 值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">类型比较</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PHP%E4%B8%AD-%E6%AF%94%E8%BE%83-0%E3%80%81false%E3%80%81null\"><span class=\"toc-text\">PHP中 比较 0、false、null</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">常量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">算术运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">赋值运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%92%E5%A2%9E-x2F-%E9%80%92%E5%87%8F%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">递增&#x2F;递减运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">比较运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">三元运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">语法格式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">条件语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">语法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#if%E2%80%A6else-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">if…else 语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95-1\"><span class=\"toc-text\">语法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#if%E2%80%A6elseif%E2%80%A6-else-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">if…elseif….else 语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95-2\"><span class=\"toc-text\">语法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Switch-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">Switch 语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84-1\"><span class=\"toc-text\">数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">创建数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数值数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E6%95%B0%E7%BB%84%E7%9A%84%E9%95%BF%E5%BA%A6-count-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">获取数组的长度 - count() 函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%81%8D%E5%8E%86%E6%95%B0%E5%80%BC%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">遍历数值数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E8%81%94%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">关联数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%81%8D%E5%8E%86%E5%85%B3%E8%81%94%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">遍历关联数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">循环</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#while-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">while 循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95-3\"><span class=\"toc-text\">语法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#do%E2%80%A6while-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">do…while 语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95-4\"><span class=\"toc-text\">语法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#For-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">For 循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95-5\"><span class=\"toc-text\">语法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#foreach-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">foreach 循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95-6\"><span class=\"toc-text\">语法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA-PHP-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">创建 PHP 函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0-%E6%B7%BB%E5%8A%A0%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">函数 - 添加参数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0-%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">函数 - 返回值</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E8%A1%A8%E5%8D%95\"><span class=\"toc-text\">PHP表单</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">PHP文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86\"><span class=\"toc-text\">文件处理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">打开文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B3%E9%97%AD%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">关闭文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%90%E8%A1%8C%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">逐行读取文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%90%E5%AD%97%E7%AC%A6%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">逐字符读取文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B\"><span class=\"toc-text\">实例</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%A1%A8%E5%8D%95\"><span class=\"toc-text\">文件上传表单</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%A1%A8%E5%8D%95\"><span class=\"toc-text\">创建一个文件上传表单</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E4%B8%8A%E4%BC%A0%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">创建上传脚本</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">PHP连接MySQL数据库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9E%E6%8E%A5-MySQL\"><span class=\"toc-text\">连接 MySQL</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MySQLi-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%89\"><span class=\"toc-text\">(MySQLi - 面向对象）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#MySQLi-%E9%9D%A2%E5%90%91%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">MySQLi - 面向过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PDO\"><span class=\"toc-text\">PDO</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">连接数据库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">创建数据库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E8%A1%A8\"><span class=\"toc-text\">创建数据表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">插入数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5%E5%A4%9A%E6%9D%A1%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">插入多条数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">读取数据</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">PHP正则表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">正则表达式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">特点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%A8%E9%80%94\"><span class=\"toc-text\">用途</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6\"><span class=\"toc-text\">常用字符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E9%9B%86%E5%90%88\"><span class=\"toc-text\">字符集合</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E9%80%89%E5%AD%97%E7%AC%A6\"><span class=\"toc-text\">反选字符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">关键字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%99%90%E5%AE%9A%E7%AC%A6\"><span class=\"toc-text\">限定符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E9%A5%B0%E7%AC%A6\"><span class=\"toc-text\">修饰符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0-1\"><span class=\"toc-text\">函数</span></a></li></ol></li></ol></li></ol>","author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"DC-5靶机渗透","uid":"a5f05b43c45d522768da0aaf98592442","slug":"DC-5靶机渗透","date":"2023-02-07T02:19:39.442Z","updated":"2023-02-07T09:28:06.280Z","comments":true,"path":"api/articles/DC-5靶机渗透.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-exyyz8.jpg","text":"DC-5靶机渗透全流程一：实验环境kali攻击机：192.168.235.130 dc-5：192.168.235.131 二：信息收集主机发现因为是在内网环境，所以直接用arp-scan arp-scan -l 可以发现目标靶机的ip地址192.168.235.131 端口扫描...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"渗透从入门到入土","slug":"渗透从入门到入土","count":11,"path":"api/categories/渗透从入门到入土.json"}],"tags":[{"name":"DC系列靶机","slug":"DC系列靶机","count":8,"path":"api/tags/DC系列靶机.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}},"next_post":{"title":"渗透测试工具-sqlmap详解","uid":"a6aaa0ab5b2e8cb7c48d0382e4a8493d","slug":"sqlmap详解","date":"2023-01-13T03:16:07.165Z","updated":"2023-02-01T03:55:28.117Z","comments":true,"path":"api/articles/sqlmap详解.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-496wr8.jpg","text":"谈到渗透测试就离不开sql注入，谈到sql注入就离不开sqlmap，本文旨在介绍sqlmap这款强大的自动化sql注入工具的使用，未来也会根据自己实际遇到的情况进行更新，话不多说，直接开整 sqlmap介绍其实对于sqlmap这款工具不需要过多介绍了，网上一搜一大把，这里还是简单...","link":"","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[{"name":"渗透从入门到入土","slug":"渗透从入门到入土","count":11,"path":"api/categories/渗透从入门到入土.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":4,"path":"api/tags/渗透测试.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}}}