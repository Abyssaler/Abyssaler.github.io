{"title":"Linux常用命令-klsday2","uid":"143a290a264195c37b7dbed6ffb5a1a7","slug":"klsday2-Linux","date":"2023-05-12T00:58:39.304Z","updated":"2023-05-13T11:25:52.291Z","comments":true,"path":"api/articles/klsday2-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-qzrmrl.png","content":"<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512090518711.png\" alt=\"image-20230512090518711\"></p>\n<h3 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512090950407.png\" alt=\"image-20230512090950407\"></p>\n<p>Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。Shell 既是一种命令语言，又是一种程序设计语言。</p>\n<p>Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。</p>\n<p>Ken Thompson 的 sh 是第一种 Unix Shell，Windows Explorer 是一个典型的图形界面 Shell。</p>\n<p>shell有很多类型</p>\n<p>Shell 编程跟 JavaScript、php 编程一样，只要有一个能编写代码的文本编辑器和一个能解释执行的脚本解释器就可以了。</p>\n<p>Linux 的 Shell 种类众多，常见的有：</p>\n<ul>\n<li>Bourne Shell（&#x2F;usr&#x2F;bin&#x2F;sh或&#x2F;bin&#x2F;sh）</li>\n<li>Bourne Again Shell（&#x2F;bin&#x2F;bash）</li>\n<li>C Shell（&#x2F;usr&#x2F;bin&#x2F;csh）</li>\n<li>K Shell（&#x2F;usr&#x2F;bin&#x2F;ksh）</li>\n<li>Shell for Root（&#x2F;sbin&#x2F;sh）</li>\n<li>……</li>\n</ul>\n<p>本教程关注的是 Bash，也就是 Bourne Again Shell，由于易用和免费，Bash 在日常工作中被广泛使用。同时，Bash 也是大多数Linux 系统默认的 Shell。</p>\n<p>在一般情况下，人们并不区分 Bourne Shell 和 Bourne Again Shell，所以，像 <strong>#!&#x2F;bin&#x2F;sh</strong>，它同样也可以改为 <strong>#!&#x2F;bin&#x2F;bash</strong>。</p>\n<p><strong>#!</strong> 告诉系统其后路径所指定的程序即是解释此脚本文件的 Shell 程序。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@centos7kls-aby &#x2F;]# echo &#39;#!&#x2F;bin&#x2F;bash&#39; &gt;&gt; 1.sh\n[root@centos7kls-aby &#x2F;]# echo &#39;echo &quot;hello world!&quot;&#39; &gt;&gt; 1.sh\n[root@centos7kls-aby &#x2F;]# cat 1.sh\n#!&#x2F;bin&#x2F;bash\necho &quot;hello world!&quot;\n[root@centos7kls-aby &#x2F;]# chmod +x 1.sh\n[root@centos7kls-aby &#x2F;]# .&#x2F;1.sh\nhello world!</code></pre>\n\n<h3 id=\"Linux命令\"><a href=\"#Linux命令\" class=\"headerlink\" title=\"Linux命令\"></a>Linux命令</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512091633241.png\" alt=\"image-20230512091633241\"></p>\n<p>可以简单这么理解：</p>\n<p>内部命令：系统自带的命令</p>\n<p>外部命令：后期安装的命令</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512092137032.png\" alt=\"image-20230512092137032\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512091941275.png\" alt=\"image-20230512091941275\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">type 命令被用于判断另外一个命令是否是内置命令\n</code></pre>\n\n<p>通过alias可以给系统定义别名</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[abyssaler@centos7kls-aby &#x2F;]$ alias\nalias egrep&#x3D;&#39;egrep --color&#x3D;auto&#39;\nalias fgrep&#x3D;&#39;fgrep --color&#x3D;auto&#39;\nalias grep&#x3D;&#39;grep --color&#x3D;auto&#39;\nalias l.&#x3D;&#39;ls -d .* --color&#x3D;auto&#39;\nalias ll&#x3D;&#39;ls -l --color&#x3D;auto&#39;\nalias ls&#x3D;&#39;ls --color&#x3D;auto&#39;\nalias vi&#x3D;&#39;vim&#39;\nalias which&#x3D;&#39;alias | &#x2F;usr&#x2F;bin&#x2F;which --tty-only --read-alias --show-dot --show-tilde&#39;</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512093136641.png\" alt=\"image-20230512093136641\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tab：命令或路径等的补全键，linux用的最多的一个快捷键 ⭐️\nctrl+a：光标迅速回到行首 ⭐️\nctrl+e：光标迅速回到行尾 ⭐️\nctrl+f：光标向右移动一个字符\nctrl+b：光标向左移动一个字符\nctrl+insert：复制命令行内容（mac系统不能使用）\nshift+insert：粘贴命令行内容（mac系统不能使用）\nctrl+k：剪切（删除）光标处到行尾的所有字符 ⭐️\nctrl+u：剪切（删除）光标处到行首的所有字符 ⭐️\nctrl+w：剪切（删除）光标前的一个字符\nctrl+y：粘贴 ctrl+k、ctrl+u、ctrl+w删除的字符 ⭐️\nctrl+c：中断终端正在执行的任务并开启一个新的一行 ⭐️\nctrl+h：删除光标前的一个字符（相当于退格键）\nctrl+d：退出当前shell命令行，如果是切换过来的用户，则执行这个命令回退到原用户 ⭐️\nctrl+r：搜索命令行使用过的历史命令记录 ⭐️\nctrl+g：从ctrl+r的搜索历史命令模式中退出\nctrl+l：清楚屏幕所有的内容，并开启一个新的一行 ⭐️\nctrl+s：锁定终端，使之任何人无法输入\nctrl+q：解锁ctrl+s的锁定状态\nctrl+z：暂停在终端运行的任务,使用&quot;fg&quot;命令可以使暂停恢复 ⭐️\n\\：换行，当你一行命令敲不完时可以用\\换行，不影响命令连续性</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512094148110.png\" alt=\"image-20230512094148110\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512094517505.png\" alt=\"image-20230512094517505\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512100512068.png\" alt=\"image-20230512100512068\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512101513257.png\" alt=\"image-20230512101513257\"></p>\n<p>大多数 UNIX 系统命令从你的终端接受输入并将所产生的输出发送回到您的终端。一个命令通常从一个叫标准输入的地方读取输入，默认情况下，这恰好是你的终端。同样，一个命令通常将其输出写入到标准输出，默认情况下，这也是你的终端。</p>\n<p>重定向命令列表如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">命令</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">command &gt; file</td>\n<td align=\"left\">将输出重定向到 file。</td>\n</tr>\n<tr>\n<td align=\"left\">command &lt; file</td>\n<td align=\"left\">将输入重定向到 file。</td>\n</tr>\n<tr>\n<td align=\"left\">command &gt;&gt; file</td>\n<td align=\"left\">将输出以追加的方式重定向到 file。</td>\n</tr>\n<tr>\n<td align=\"left\">n &gt; file</td>\n<td align=\"left\">将文件描述符为 n 的文件重定向到 file。</td>\n</tr>\n<tr>\n<td align=\"left\">n &gt;&gt; file</td>\n<td align=\"left\">将文件描述符为 n 的文件以追加的方式重定向到 file。</td>\n</tr>\n<tr>\n<td align=\"left\">n &gt;&amp; m</td>\n<td align=\"left\">将输出文件 m 和 n 合并。</td>\n</tr>\n<tr>\n<td align=\"left\">n &lt;&amp; m</td>\n<td align=\"left\">将输入文件 m 和 n 合并。</td>\n</tr>\n<tr>\n<td align=\"left\">&lt;&lt; tag</td>\n<td align=\"left\">将开始标记 tag 和结束标记 tag 之间的内容作为输入。</td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>需要注意的是文件描述符 0 通常是标准输入（STDIN），1 是标准输出（STDOUT），2 是标准错误输出（STDERR）。</p>\n<p>关于重定向的详细内容可以参考下面这篇文章：</p>\n<p><a href=\"https://blog.csdn.net/qq_28584889/article/details/88728164\">https://blog.csdn.net/qq_28584889/article/details/88728164</a></p></blockquote>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512102659732.png\" alt=\"image-20230512102659732\"></p>\n<p>“|”是Linux管道命令操作符，简称管道符。使用此管道符“|”可以将两个命令分隔开，“|”左边命令的输出就会作为“|”右边命令的输入，此命令可连续使用，第一个命令的输出会作为第二个命令的输入，第二个命令的输出又会作为第三个命令的输入，依此类推。</p>\n<p>但”|”只会把正确的结果传给后面</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">多命令执行符              格式                        作用\n     ;               命令1;命令2             多个命令顺序执行，命令之间无任何逻辑关系\n    &amp;&amp;               命令1&amp;&amp;命令2            逻辑与：当命令1正确执行后，命令2才会正确执行，否则命令2不会执行\n    ||               命令1||命令2            逻辑或：当命令1不正确执行后，命令2才会正确执行，否则命令2不会执行</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512103548716.png\" alt=\"image-20230512103548716\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512103612612.png\" alt=\"image-20230512103612612\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512103620184.png\" alt=\"image-20230512103620184\"></p>\n<p>查看软链接的实际路径 pwd-P 4</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[abyssaler@centos7kls-aby ~]$ cd &#x2F;lib64\n[abyssaler@centos7kls-aby lib64]$ pwd\n&#x2F;lib64\n[abyssaler@centos7kls-aby lib64]$ pwd -P\n&#x2F;usr&#x2F;lib64\n[abyssaler@centos7kls-aby lib64]$ </code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512104047836.png\" alt=\"image-20230512104047836\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512110137275.png\" alt=\"image-20230512110137275\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512110308147.png\" alt=\"image-20230512110308147\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-a, --all                     不隐藏任何以. 开始的项目\n-A, --almost-all              列出除. 及.. 以外的任何项目\n-l                            使用较长格式列出信息\n-d, --directory               当遇到目录时列出目录本身而非目录内的文件\n-h, --human-readable          与-l 一起，以易于阅读的格式输出文件大小\n-R, --recursive               递归显示子目录</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512111119721.png\" alt=\"image-20230512111119721\"></p>\n<p>Linux alias 命令用于设置指令的别名，用户可利用 alias，自定指令的别名。。</p>\n<p>它可以使您以一种更简单和易于记忆的方式执行命令，而不必每次都键入完整的命令。</p>\n<p>若仅输入 alias，则可列出目前所有的别名设置。</p>\n<p>alias 的效果仅在该次登入的操作有效，若想要每次登入都生效，可在 <strong>.profile</strong> 或 <strong>.cshrc</strong> 中设定指令的别名。</p>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">alias[别名]&#x3D;[指令名称]</code></pre>\n\n<p><strong>参数说明</strong>：若不加任何参数，则列出目前所有的别名设置。</p>\n<p><strong>实例</strong></p>\n<p>1、创建别名：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">alias ll&#x3D;&#39;ls -alF&#39;</code></pre>\n\n<p>此命令创建一个名为 <strong>ll</strong> 的别名，用于显示当前目录下所有文件和目录的详细列表。</p>\n<p>unalias取消别名</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512111429304.png\" alt=\"image-20230512111429304\"></p>\n<p>Linux du （英文全拼：disk usage）命令用于显示目录或文件的大小。</p>\n<p>du 会显示指定的目录或文件所占用的磁盘空间。</p>\n<ul>\n<li>-b或-bytes 显示目录或文件大小时，以byte为单位。</li>\n<li>-h或–human-readable 以K，M，G为单位，提高信息的可读性。</li>\n<li>-k或–kilobytes 以1024 bytes为单位。</li>\n</ul>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512111506423.png\" alt=\"image-20230512111506423\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[root@centos7kls-aby abyssaler]# mkdir -pv &#x2F;tools&#x2F;kls&#x2F;day2\nmkdir: created directory ‘&#x2F;tools’\nmkdir: created directory ‘&#x2F;tools&#x2F;kls’\nmkdir: created directory ‘&#x2F;tools&#x2F;kls&#x2F;day2’</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512111817199.png\" alt=\"image-20230512111817199\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512161246113.png\" alt=\"image-20230512161246113\"></p>\n<p>Linux touch命令用于修改文件或者目录的时间属性，包括存取时间和更改时间。若文件不存在，系统会建立一个新的文件。</p>\n<p>ls -l 可以显示档案的时间记录。</p>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">touch [-acfm][-d&lt;日期时间&gt;][-r&lt;参考文件或目录&gt;] [-t&lt;日期时间&gt;][--help][--version][文件或目录…]</code></pre>\n\n<ul>\n<li><strong>参数说明</strong>：</li>\n<li>a 改变档案的读取时间记录。</li>\n<li>m 改变档案的修改时间记录。</li>\n<li>c 假如目的档案不存在，不会建立新的档案。与 –no-create 的效果一样。</li>\n<li>f 不使用，是为了与其他 unix 系统的相容性而保留。</li>\n<li>r 使用参考档的时间记录，与 –file 的效果一样。</li>\n<li>d 设定时间与日期，可以使用各种不同的格式。</li>\n<li>t 设定档案的时间记录，格式与 date 指令相同。</li>\n<li>–no-create 不会建立新档案。</li>\n<li>–help 列出指令格式。</li>\n<li>–version 列出版本讯息。</li>\n</ul>\n<p><strong>实例</strong></p>\n<p>使用指令”touch”修改文件”testfile”的时间属性为当前系统时间，输入如下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ touch testfile                #修改文件的时间属性 </code></pre>\n\n<p>首先，使用ls命令查看testfile文件的属性，如下所示：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ ls -l testfile                #查看文件的时间属性  \n#原来文件的修改时间为16:09  \n-rw-r--r-- 1 hdd hdd 55 2011-08-22 16:09 testfile  </code></pre>\n\n<p>执行指令”touch”修改文件属性以后，并再次查看该文件的时间属性，如下所示：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ touch testfile                #修改文件时间属性为当前系统时间  \n$ ls -l testfile                #查看文件的时间属性  \n#修改后文件的时间属性为当前系统时间  \n-rw-r--r-- 1 hdd hdd 55 2011-08-22 19:53 testfile  </code></pre>\n\n<p>使用指令”touch”时，如果指定的文件不存在，则将创建一个新的空白文件。例如，在当前目录下，使用该指令创建一个空白文件”file”，输入如下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ touch file            #创建一个名为“file”的新的空白文件 </code></pre>\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">root@linux ~]# touch test.php                 #将test.php的档案时间改为，当前时间，文件不存在建之\n[root@linux ~]# touch -c -t 05061803 test.php #将档案时间改为,5月6日18点3分\n[root@linux ~]# touch -r abc.php test.php     #将test.php档案改成跟abc.php一样\n# touch -d &quot;2 days ago&quot; test.php              #将test.php日期修改为2天以前</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512112206255.png\" alt=\"image-20230512112206255\"></p>\n<p>针对不加-s的硬链接，它不能链接目录和跨文件系统</p>\n<p>软链接可以链接目录和跨文件系统，但是源文件被删了后会失效</p>\n<p>Linux ln（英文全拼：link files）命令是一个非常重要命令，它的功能是为某一个文件在另外一个位置建立一个同步的链接。</p>\n<p>当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。</p>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ln [参数][源文件或目录][目标文件或目录]</code></pre>\n\n<p>其中参数的格式为</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[-bdfinsvF] [-S backup-suffix] [-V &#123;numbered,existing,simple&#125;]\n[--help] [--version] [--]</code></pre>\n\n<p><strong>命令功能</strong> :<br>Linux文件系统中，有所谓的链接(link)，我们可以将其视为档案的别名，而链接又可分为两种 : 硬链接(hard link)与软链接(symbolic link)，硬链接的意思是一个档案可以有多个名称，而软链接的方式则是产生一个特殊的档案，该档案的内容是指向另一个档案的位置。硬链接是存在同一个文件系统中，而软链接却可以跨越不同的文件系统。</p>\n<p>不论是硬链接或软链接都不会将原本的档案复制一份，只会占用非常少量的磁碟空间。</p>\n<p><strong>软链接</strong>：</p>\n<ul>\n<li>1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式</li>\n<li>2.软链接可以 跨文件系统 ，硬链接不可以</li>\n<li>3.软链接可以对一个不存在的文件名进行链接</li>\n<li>4.软链接可以对目录进行链接</li>\n</ul>\n<p><strong>硬链接</strong>：</p>\n<ul>\n<li>1.硬链接，以文件副本的形式存在。但不占用实际空间。</li>\n<li>2.不允许给目录创建硬链接</li>\n<li>3.硬链接只有在同一个文件系统中才能创建</li>\n</ul>\n<p><strong>必要参数</strong>：</p>\n<ul>\n<li>–backup[&#x3D;CONTROL] 备份已存在的目标文件</li>\n<li>-b 类似 <strong>–backup</strong> ，但不接受参数</li>\n<li>-d 允许超级用户制作目录的硬链接</li>\n<li>-f 强制执行</li>\n<li>-i 交互模式，文件存在则提示用户是否覆盖</li>\n<li>-n 把符号链接视为一般目录</li>\n<li>-s 软链接(符号链接)</li>\n<li>-v 显示详细的处理过程</li>\n</ul>\n<p>给文件创建软链接，为log2013.log文件创建软链接link2013，如果log2013.log丢失，link2013将失效：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ln -s log2013.log link2013</code></pre>\n\n<p>给文件创建硬链接，为log2013.log创建硬链接ln2013，log2013.log与ln2013的各项属性相同</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ln log2013.log ln2013</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512112924082.png\" alt=\"image-20230512112924082\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512113136759.png\" alt=\"image-20230512113136759\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512133107956.png\" alt=\"image-20230512133107956\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512133253239.png\" alt=\"image-20230512133253239\"></p>\n<p>Linux cp（英文全拼：copy file）命令主要用于复制文件或目录。</p>\n<p>使用指令 <strong>cp</strong> 将当前目录 <strong>test&#x2F;</strong> 下的所有文件复制到新目录 <strong>newtest</strong> 下，输入如下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ cp –r test&#x2F; newtest          </code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512133744033.png\" alt=\"image-20230512133744033\"></p>\n<p>Linux rm（英文全拼：remove）命令用于删除一个文件或者目录。</p>\n<p><strong>参数</strong>：</p>\n<ul>\n<li>-i 删除前逐一询问确认。</li>\n<li>-f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。</li>\n<li>-r 将目录及以下之档案亦逐一删除。</li>\n</ul>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512133947933.png\" alt=\"image-20230512133947933\"></p>\n<p>Linux mv（英文全拼：move file）命令用来为文件或目录改名、或将文件或目录移入其它位置。</p>\n<p><strong>参数说明</strong>：</p>\n<ul>\n<li><strong>-b</strong>: 当目标文件或目录存在时，在执行覆盖前，会为其创建一个备份。</li>\n<li><strong>-i</strong>: 如果指定移动的源目录或文件与目标的目录或文件同名，则会先询问是否覆盖旧文件，输入 y 表示直接覆盖，输入 n 表示取消该操作。</li>\n<li><strong>-f</strong>: 如果指定移动的源目录或文件与目标的目录或文件同名，不会询问，直接覆盖旧文件。</li>\n<li><strong>-n</strong>: 不要覆盖任何已存在的文件或目录。</li>\n<li><strong>-u</strong>：当源文件比目标文件新或者目标文件不存在时，才执行移动操作。</li>\n</ul>\n<p>mv 参数设置与运行结果</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">命令格式</th>\n<th align=\"left\">运行结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><code>mv source_file(文件) dest_file(文件)</code></td>\n<td align=\"left\">将源文件名 source_file 改为目标文件名 dest_file</td>\n</tr>\n<tr>\n<td align=\"left\"><code>mv source_file(文件) dest_directory(目录)</code></td>\n<td align=\"left\">将文件 source_file 移动到目标目录 dest_directory 中</td>\n</tr>\n<tr>\n<td align=\"left\"><code>mv source_directory(目录) dest_directory(目录)</code></td>\n<td align=\"left\">目录名 dest_directory 已存在，将 source_directory 移动到目录名 dest_directory 中；目录名 dest_directory 不存在则 source_directory 改名为目录名 dest_directory</td>\n</tr>\n<tr>\n<td align=\"left\"><code>mv source_directory(目录) dest_file(文件)</code></td>\n<td align=\"left\">出错</td>\n</tr>\n</tbody></table>\n<p><strong>mv 操作文件时是移动并且重命名。</strong></p>\n<p>目标目录与原目录一致，指定了新文件名，效果就是仅仅重命名。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mv  &#x2F;home&#x2F;ffxhd&#x2F;a.txt   &#x2F;home&#x2F;ffxhd&#x2F;b.txt    </code></pre>\n\n<p>目标目录与原目录不一致，没有指定新文件名，效果就是仅仅移动。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mv  &#x2F;home&#x2F;ffxhd&#x2F;a.txt   &#x2F;home&#x2F;ffxhd&#x2F;test&#x2F; \n或者\nmv  &#x2F;home&#x2F;ffxhd&#x2F;a.txt   &#x2F;home&#x2F;ffxhd&#x2F;test </code></pre>\n\n<p>目标目录与原目录一致, 指定了新文件名，效果就是：移动 + 重命名。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mv  &#x2F;home&#x2F;ffxhd&#x2F;a.txt   &#x2F;home&#x2F;ffxhd&#x2F;test&#x2F;c.txt</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512134229272.png\" alt=\"image-20230512134229272\"></p>\n<p>Linux which命令用于查找文件。</p>\n<p>which指令会在环境变量$PATH设置的目录里查找符合条件的文件。</p>\n<p><strong>参数</strong>：</p>\n<ul>\n<li>-n&lt;文件名长度&gt; 　指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。</li>\n<li>-p&lt;文件名长度&gt; 　与-n参数相同，但此处的&lt;文件名长度&gt;包括了文件的路径。</li>\n<li>-w 　指定输出时栏位的宽度。</li>\n<li>-V 　显示版本信息。</li>\n</ul>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512134429073.png\" alt=\"image-20230512134429073\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512134524373.png\" alt=\"image-20230512134524373\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512134606988.png\" alt=\"image-20230512134606988\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512134706699.png\" alt=\"image-20230512134706699\"></p>\n<h3 id=\"Linux文件管理\"><a href=\"#Linux文件管理\" class=\"headerlink\" title=\"Linux文件管理\"></a>Linux文件管理</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512135053737.png\" alt=\"image-20230512135053737\"></p>\n<p>cat（英文全拼：concatenate）命令用于连接文件并打印到标准输出设备上。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512140244975.png\" alt=\"image-20230512140244975\"></p>\n<p>Linux more 命令类似 cat ，不过会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示，而且还有搜寻字串的功能（与 vi 相似），使用中的说明文件，请按 h 。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512140648718.png\" alt=\"image-20230512140648718\"></p>\n<p>less 与 more 类似，less 可以随意浏览文件，支持翻页和搜索，支持向上翻页和向下翻页。</p>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">less [参数] 文件 </code></pre>\n\n<p><strong>参数说明</strong>：</p>\n<ul>\n<li>-b &lt;缓冲区大小&gt; 设置缓冲区的大小</li>\n<li>-e 当文件显示结束后，自动离开</li>\n<li>-f 强迫打开特殊文件，例如外围设备代号、目录和二进制文件</li>\n<li>-g 只标志最后搜索的关键词</li>\n<li>-i 忽略搜索时的大小写</li>\n<li>-m 显示类似more命令的百分比</li>\n<li>-N 显示每行的行号</li>\n<li>-o &lt;文件名&gt; 将less 输出的内容在指定文件中保存起来</li>\n<li>-Q 不使用警告音</li>\n<li>-s 显示连续空行为一行</li>\n<li>-S 行过长时间将超出部分舍弃</li>\n<li>-x &lt;数字&gt; 将”tab”键显示为规定的数字空格</li>\n<li>&#x2F;字符串：向下搜索”字符串”的功能</li>\n<li>?字符串：向上搜索”字符串”的功能</li>\n<li>n：重复前一个搜索（与 &#x2F; 或 ? 有关）</li>\n<li>N：反向重复前一个搜索（与 &#x2F; 或 ? 有关）</li>\n<li>b 向上翻一页</li>\n<li>d 向后翻半页</li>\n<li>h 显示帮助界面</li>\n<li>Q 退出less 命令</li>\n<li>u 向前滚动半页</li>\n<li>y 向前滚动一行</li>\n<li>空格键 滚动一页</li>\n<li>回车键 滚动一行</li>\n<li>[pagedown]： 向下翻动一页</li>\n<li>[pageup]： 向上翻动一页</li>\n</ul>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512140902642.png\" alt=\"image-20230512140902642\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512141235359.png\" alt=\"image-20230512141235359\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512141314972.png\" alt=\"image-20230512141314972\"></p>\n<p>Linux grep (global regular expression) 命令用于查找文件里符合条件的字符串或正则表达式。</p>\n<p>grep 指令用于查找内容包含指定的范本样式的文件，如果发现某文件的内容符合所指定的范本样式，预设 grep 指令会把含有范本样式的那一列显示出来。若不指定任何文件名称，或是所给予的文件名为 **-**，则 grep 指令会从标准输入设备读取数据。</p>\n<p><strong>常用选项：</strong>：</p>\n<ul>\n<li><code>-i</code>：忽略大小写进行匹配。</li>\n<li><code>-v</code>：反向查找，只打印不匹配的行。</li>\n<li><code>-n</code>：显示匹配行的行号。</li>\n<li><code>-r</code>：递归查找子目录中的文件。</li>\n<li><code>-l</code>：只打印匹配的文件名。</li>\n<li><code>-c</code>：只打印匹配的行数。</li>\n</ul>\n<h3 id=\"历史记录\"><a href=\"#历史记录\" class=\"headerlink\" title=\"历史记录\"></a>历史记录</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512143132496.png\" alt=\"image-20230512143132496\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512144120367.png\" alt=\"image-20230512144120367\"></p>\n<p>Linux gzip命令用于压缩文件。</p>\n<p>gzip是个使用广泛的压缩程序，文件经它压缩过后，其名称后面会多出”.gz”的扩展名。</p>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">gzip [-acdfhlLnNqrtvV][-S &lt;压缩字尾字符串&gt;][-&lt;压缩效率&gt;][--best&#x2F;fast][文件...] 或 gzip [-acdfhlLnNqrtvV][-S &lt;压缩字尾字符串&gt;][-&lt;压缩效率&gt;][--best&#x2F;fast][目录]</code></pre>\n\n<p><strong>参数</strong>：</p>\n<ul>\n<li>-a或–ascii 　使用ASCII文字模式。</li>\n<li>-c或–stdout或–to-stdout 　把压缩后的文件输出到标准输出设备，不去更动原始文件。</li>\n<li>-d或–decompress或—-uncompress 　解开压缩文件。</li>\n<li>-f或–force 　强行压缩文件。不理会文件名称或硬连接是否存在以及该文件是否为符号连接。</li>\n<li>-h或–help 　在线帮助。</li>\n<li>-l或–list 　列出压缩文件的相关信息。</li>\n<li>-L或–license 　显示版本与版权信息。</li>\n<li>-n或–no-name 　压缩文件时，不保存原来的文件名称及时间戳记。</li>\n<li>-N或–name 　压缩文件时，保存原来的文件名称及时间戳记。</li>\n<li>-q或–quiet 　不显示警告信息。</li>\n<li>-r或–recursive 　递归处理，将指定目录下的所有文件及子目录一并处理。</li>\n<li>-S&lt;压缩字尾字符串&gt;或—-suffix&lt;压缩字尾字符串&gt; 　更改压缩字尾字符串。</li>\n<li>-t或–test 　测试压缩文件是否正确无误。</li>\n<li>-v或–verbose 　显示指令执行过程。</li>\n<li>-V或–version 　显示版本信息。</li>\n<li>-&lt;压缩效率&gt; 　压缩效率是一个介于1－9的数值，预设值为”6”，指定愈大的数值，压缩效率就会愈高。</li>\n<li>–best 　此参数的效果和指定”-9”参数相同。</li>\n<li>–fast 　此参数的效果和指定”-1”参数相同。</li>\n</ul>\n<p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p>\n<p>Linux bzip2命令是.bz2文件的压缩程序。</p>\n<p>bzip2采用新的压缩演算法，压缩效果比传统的LZ77&#x2F;LZ78压缩演算法来得好。若没有加上任何参数，bzip2压缩完文件后会产生.bz2的压缩文件，并删除原始的文件。</p>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">bzip2 [-cdfhkLstvVz][--repetitive-best][--repetitive-fast][- 压缩等级][要压缩的文件]</code></pre>\n\n<p><strong>参数</strong>：</p>\n<ul>\n<li>-c或–stdout 　将压缩与解压缩的结果送到标准输出。</li>\n<li>-d或–decompress 　执行解压缩。</li>\n<li>-f或–force 　bzip2在压缩或解压缩时，若输出文件与现有文件同名，预设不会覆盖现有文件。若要覆盖，请使用此参数。</li>\n<li>-h或–help 　显示帮助。</li>\n<li>-k或–keep 　bzip2在压缩或解压缩后，会删除原始的文件。若要保留原始文件，请使用此参数。</li>\n<li>-s或–small 　降低程序执行时内存的使用量。</li>\n<li>-t或–test 　测试.bz2压缩文件的完整性。</li>\n<li>-v或–verbose 　压缩或解压缩文件时，显示详细的信息。</li>\n<li>-z或–compress 　强制执行压缩。</li>\n<li>-L,–license,</li>\n<li>-V或–version 　显示版本信息。</li>\n<li>–repetitive-best 　若文件中有重复出现的资料时，可利用此参数提高压缩效果。</li>\n<li>–repetitive-fast 　若文件中有重复出现的资料时，可利用此参数加快执行速度。</li>\n<li>-压缩等级 　压缩时的区块大小。</li>\n</ul>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512145006887.png\" alt=\"image-20230512145006887\"></p>\n<p>Linux gunzip 命令用于解压文件。</p>\n<p>gunzip 是个使用广泛的解压缩程序，它用于解开被 gzip 压缩过的文件，这些压缩文件预设最后的扩展名为 <strong>.gz</strong>。事实上 gunzip 就是 gzip 的硬连接，因此不论是压缩或解压缩，都可通过 gzip 指令单独完成。</p>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">gunzip [-acfhlLnNqrtvV][-s &lt;压缩字尾字符串&gt;][文件...] 或 gunzip [-acfhlLnNqrtvV][-s &lt;压缩字尾字符串&gt;][目录]</code></pre>\n\n<ul>\n<li>-a或–ascii 　使用ASCII文字模式。</li>\n<li>-c或–stdout或–to-stdout 　把解压后的文件输出到标准输出设备。</li>\n<li>-f或-force 　强行解开压缩文件，不理会文件名称或硬连接是否存在以及该文件是否为符号连接。</li>\n<li>-h或–help 　在线帮助。</li>\n<li>-k或–keep 　保留原始压缩文件。</li>\n<li>-l或–list 　列出压缩文件的相关信息。</li>\n<li>-L或–license 　显示版本与版权信息。</li>\n<li>-n或–no-name 　解压缩时，若压缩文件内含有远来的文件名称及时间戳记，则将其忽略不予处理。</li>\n<li>-N或–name 　解压缩时，若压缩文件内含有原来的文件名称及时间戳记，则将其回存到解开的文件上。</li>\n<li>-q或–quiet 　不显示警告信息。</li>\n<li>-r或–recursive 　递归处理，将指定目录下的所有文件及子目录一并处理。</li>\n<li>-S&lt;压缩字尾字符串&gt;或–suffix&lt;压缩字尾字符串&gt; 　更改压缩字尾字符串。</li>\n<li>-t或–test 　测试压缩文件是否正确无误。</li>\n<li>-v或–verbose 　显示指令执行过程。</li>\n<li>-V或–version 显示版本信息。</li>\n</ul>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512145014801.png\" alt=\"image-20230512145014801\"></p>\n<p>Linux tar（英文全拼：tape archive ）命令用于备份文件。</p>\n<p>tar 是用来建立，还原备份文件的工具程序，它可以加入，解开备份文件内的文件。</p>\n<p><strong>实例</strong></p>\n<p>压缩文件 非打包</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># touch a.c       \n# tar -czvf test.tar.gz a.c   &#x2F;&#x2F;压缩 a.c文件为test.tar.gz\na.c</code></pre>\n\n<p>列出压缩文件内容</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># tar -tzvf test.tar.gz \n-rw-r--r-- root&#x2F;root     0 2010-05-24 16:51:59 a.c</code></pre>\n\n<p>解压文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># tar -xzvf test.tar.gz \na.c</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512145231929.png\" alt=\"image-20230512145231929\"></p>\n<p><a href=\"https://www.runoob.com/w3cnote/linux-tar-gz.html\">Linux tar.gz、tar、bz2、zip 等解压缩、压缩命令详解</a></p>\n<h3 id=\"文本编辑器vi命令\"><a href=\"#文本编辑器vi命令\" class=\"headerlink\" title=\"文本编辑器vi命令\"></a>文本编辑器vi命令</h3><p>基本上 vi&#x2F;vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。 </p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512145840714.png\" alt=\"image-20230512145840714\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512150337446.png\" alt=\"image-20230512150337446\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512155246851.png\" alt=\"image-20230512155246851\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512155311720.png\" alt=\"image-20230512155311720\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512155327170.png\" alt=\"image-20230512155327170\"></p>\n<p>用户刚刚启动 vi&#x2F;vim，便进入了命令模式。</p>\n<p>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</p>\n<p>以下是常用的几个命令：</p>\n<ul>\n<li><strong>i</strong> 切换到输入模式，以输入字符。</li>\n<li><strong>x</strong> 删除当前光标所在处的字符。</li>\n<li><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。</li>\n</ul>\n<p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</p>\n<p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512155346472.png\" alt=\"image-20230512155346472\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512152834832.png\" alt=\"image-20230512152834832\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512160140172.png\" alt=\"image-20230512160140172\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512153745990.png\" alt=\"image-20230512153745990\"></p>\n<p>在命令模式下按下:（英文冒号）就进入了底线命令模式。</p>\n<p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p>\n<p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p>\n<ul>\n<li>q 退出程序</li>\n<li>w 保存文件</li>\n</ul>\n<p>按ESC键可随时退出底线命令模式。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512153930289.png\" alt=\"image-20230512153930289\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512154110343.png\" alt=\"image-20230512154110343\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230512154450307.png\" alt=\"image-20230512154450307\"></p>\n<p>在命令模式下按下i就进入了输入模式。</p>\n<p>在输入模式中，可以使用以下按键：</p>\n<ul>\n<li><strong>字符按键以及Shift组合</strong>，输入字符</li>\n<li><strong>ENTER</strong>，回车键，换行</li>\n<li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li>\n<li><strong>DEL</strong>，删除键，删除光标后一个字符</li>\n<li><strong>方向键</strong>，在文本中移动光标</li>\n<li><strong>HOME</strong>&#x2F;<strong>END</strong>，移动光标到行首&#x2F;行尾</li>\n<li><strong>Page Up</strong>&#x2F;<strong>Page Down</strong>，上&#x2F;下翻页</li>\n<li><strong>Insert</strong>，切换光标为输入&#x2F;替换模式，光标将变成竖线&#x2F;下划线</li>\n<li><strong>ESC</strong>，退出输入模式，切换到命令模式</li>\n</ul>\n","text":" shell Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。Shell 既是一种命令语言，又是一种程序设计语言。 Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。 Ken Thompson 的 sh ...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":20,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":8,"path":"api/tags/kls.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#shell\"><span class=\"toc-text\">shell</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">Linux命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">Linux文件管理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95\"><span class=\"toc-text\">历史记录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8vi%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">文本编辑器vi命令</span></a></li></ol>","author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Linux软件安装与账户权限-klsday3","uid":"4fcf9285313e12db2565769c48460179","slug":"klsday3-Linux","date":"2023-05-15T01:04:37.919Z","updated":"2023-05-15T23:24:08.338Z","comments":true,"path":"api/articles/klsday3-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-zyy7ro.jpg","text":"Linux应用程序基础 rpm命令 rpm命令用于管理软件。rpm原本是 Red Hat Linux 发行版专门用来管理 Linux 各项套件的程序，由于它遵循 GPL 规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用。RPM 套件管理方式的出现，让 Linux 易于安...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":20,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":8,"path":"api/tags/kls.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}},"next_post":{"title":"Linux操作系统安装与初始化-klsday1","uid":"1ba43bdcc650ffe3bf369917c92785d4","slug":"klsday1-Linux","date":"2023-05-11T01:03:45.132Z","updated":"2023-05-11T14:12:29.862Z","comments":true,"path":"api/articles/klsday1-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-l8yj8p.png","text":" Linux发行版 查看系统内核 unamne -r [abyssaler@centos7kls-aby ~]$ uname -r 3.10.0-1160.el7.x86_64 uname -a 看的信息更全面 [abyssaler@centos7kls-aby ~]$ unam...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":20,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":8,"path":"api/tags/kls.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}}}