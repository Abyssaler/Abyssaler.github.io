{"title":"hvv猴子的基本修养","uid":"d15f0aacce8c38a896ba8374b8a2f215","slug":"hvv蓝队常用命令（Linux）","date":"2023-04-23T10:40:02.636Z","updated":"2023-05-25T08:27:29.546Z","comments":true,"path":"api/articles/hvv蓝队常用命令（Linux）.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-x66olo.jpg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>记录一下最近学到的在护网中蓝队必备的，以及一些能提高工作效率的Linux命令</p>\n<h2 id=\"必备篇\"><a href=\"#必备篇\" class=\"headerlink\" title=\"必备篇\"></a>必备篇</h2><h3 id=\"mkdir\"><a href=\"#mkdir\" class=\"headerlink\" title=\"mkdir\"></a>mkdir</h3><p>这个自然不必多说了</p>\n<p><code>mkdir</code>命令用于创建目录</p>\n<p>参数 <code>-p</code> 创建多级目录,若目录不存在则新建一个</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir -p hvv&#x2F;blue</code></pre>\n\n<h3 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h3><p><code>ls</code>用于限制指定目录下的内容</p>\n<p>参数:</p>\n<ul>\n<li><code>-a</code> 显示所有文件及目录( . 开头的隐藏文件也会列出)</li>\n<li><code>-l</code> 列出文件型态,权限,拥有者,文件大小等资讯</li>\n<li><code>-h</code> 以容易理解的格式列出文件大小</li>\n</ul>\n<h3 id=\"tail\"><a href=\"#tail\" class=\"headerlink\" title=\"tail\"></a>tail</h3><p>tail文件中的尾部内容。tail命令默认在屏幕上显示指定文件的末尾10行,如果给定的文件不止一个，则在显示的每个文件前面加一个文件名标题</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">tail -f &#x2F;var&#x2F;log&#x2F;httpd&#x2F;*   ## 监听apache的日志文件,会实时打印出追加的内容</code></pre>\n\n<h3 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps\"></a>ps</h3><p><code>ps</code>命令是最基本同时也是非常强大的进程查看命令, 使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230423190809192.png\" alt=\"image-20230423190809192\"></p>\n<p>案例:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps -aux|more\nps -aux|grep tmp|more</code></pre>\n\n<h3 id=\"netstat\"><a href=\"#netstat\" class=\"headerlink\" title=\"netstat\"></a>netstat</h3><p><code>netstat</code>命令用来打印Linux中网络系统的状态信息,可让你得知整个Linux系统的网络情况。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230423191022251.png\" alt=\"image-20230423191022251\"></p>\n<p>案例:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">netstat -an\nnetstat -anltp</code></pre>\n\n<h3 id=\"lsof\"><a href=\"#lsof\" class=\"headerlink\" title=\"lsof\"></a>lsof</h3><p><code>lsof</code>命令用于查看你进程开打的文件，打开文件的进程，进程打开的端口(TCP、UDP)。找回&#x2F;恢复删除的文件。是十分方便的系统监视工具，因为lsof命令需要访问核心内存和各种文件，所以需要root用户执行。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230423191504402.png\" alt=\"image-20230423191504402\"></p>\n<h3 id=\"kill\"><a href=\"#kill\" class=\"headerlink\" title=\"kill\"></a>kill</h3><p><code>kill</code>用于结束进程</p>\n<p>案例:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">kill -9 123456    ##彻底杀死进程号为123456的进程</code></pre>\n\n<h3 id=\"计划任务\"><a href=\"#计划任务\" class=\"headerlink\" title=\"计划任务\"></a>计划任务</h3><p><code>crontab</code>被用来提交和管理用户的需要周期性执行的任务,与windows下的计划任务类似,当安装完成操作系统后,默认会安装此服务工具,并且会自动启动crond进程, crond进程每分钟会定期检查是否有要执行的任务, 如果有要执行的任务, 则自动执行该任务。</p>\n<p><code>crontab -e</code>编辑当前用户的cron表</p>\n<p><code>crontab -1</code>查看当前用户的cron表</p>\n<p><code>crontab -r</code>删除当前用户的cron表</p>\n<p><code>crontab</code>命令是cron table的简写,它是cron的配置文件,也可以叫它作业列表,我们可以在以下文件夹内找到相关配置文件。</p>\n<ul>\n<li><code>/var/spool/cron/</code>目录下存放的是每个用户包括root的crontab任务, 每个任务以创建者的名字命名</li>\n<li><code>/etc/crontab</code>这个文件 负责调度各种管理和维护任务</li>\n<li>我们还可以把脚本放在<code>/etc/cron.hourly</code>、<code>/etc/cron.daily</code>、<code>/etc/cron.weekly</code>、<code>/etc/cron.monthly</code>目录中,让它每小时&#x2F;天&#x2F;星期&#x2F;月执行一次。.</li>\n</ul>\n<h3 id=\"开机自动执行命令\"><a href=\"#开机自动执行命令\" class=\"headerlink\" title=\"开机自动执行命令\"></a>开机自动执行命令</h3><p><code>/etc/rc.d/rc.1ocal</code>用于添加开机启动命令, <code>/etc/rc.local </code>是<code>/etc/rc.d/rc.local</code>的软链接,软连接相当于windows的快捷方式。</p>\n<p>系统开机后会自动执行<code>/etc/rc.local</code> ,换句话说,只要将你想执行的命令写入这个文件，就可以做到开机自动执行。<br>如果你是第一次使用这个文件 ,需要对其加.上执行权限。<code>chmod +x /etc/rc.local</code></p>\n<h3 id=\"面试题\"><a href=\"#面试题\" class=\"headerlink\" title=\"面试题\"></a>面试题</h3><p>怀疑一台机器出问题了，怎么排查？</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps -aux ,重点关注 tmp目录下执行的内容，可以使用的命令：ps -axu|grep tmp\n挨个看，看哪个有问题（非正常的系统及服务进行）\nnetstat -an或者netstat -anltp,查看主机的网络外联的信息，重点关注异常的IP地址及端口。快捷的技巧是看有没境外的IP，或者非正常的端口（local）\npid ip --》lsof -i -p xx,定位的主机的文件，然后分析此文件是否为恶意文件--》扔给互联网上的沙箱，定位到恶意的文件，kill杀掉进程以后，主机上清理恶意文件。\n在排查 &#x2F;etc&#x2F;passwd crontab rc.d&#x2F;rc&#x2F;local ，看看有没有新雷，\n《？？？攻击者怎么进来的，口子堵上》\n恢复上线以后，再观察</code></pre>\n\n<h2 id=\"实用篇\"><a href=\"#实用篇\" class=\"headerlink\" title=\"实用篇\"></a>实用篇</h2><h3 id=\"awk\"><a href=\"#awk\" class=\"headerlink\" title=\"awk\"></a>awk</h3><p>AWK 是一种处理文本文件的语言，是一个强大的文本分析工具。</p>\n<p>之所以叫 AWK 是因为其取了三位创始人 Alfred Aho，Peter Weinberger, 和 Brian Kernighan 的 Family Name 的首字符。</p>\n<p>参数:</p>\n<ul>\n<li>-F fs or –field-separator fs<br>指定输入文件折分隔符，fs是一个字符串或者是一个正则表达式，如-F:。</li>\n<li>-v var&#x3D;value or –asign var&#x3D;value<br>赋值一个用户定义变量。</li>\n<li>-f scripfile or –file scriptfile<br>从脚本文件中读取awk命令。</li>\n<li>-mf nnn and -mr nnn<br>对nnn值设置内在限制，-mf选项限制分配给nnn的最大块数目；-mr选项限制记录的最大数目。这两个功能是Bell实验室版awk的扩展功能，在标准awk中不适用。</li>\n<li>-W compact or –compat, -W traditional or –traditional<br>在兼容模式下运行awk。所以gawk的行为和标准的awk完全一样，所有的awk扩展都被忽略。</li>\n<li>-W copyleft or –copyleft, -W copyright or –copyright<br>打印简短的版权信息。</li>\n<li>-W help or –help, -W usage or –usage<br>打印全部awk选项和每个选项的简短说明。</li>\n<li>-W lint or –lint<br>打印不能向传统unix平台移植的结构的警告。</li>\n<li>-W lint-old or –lint-old<br>打印关于不能向传统unix平台移植的结构的警告。</li>\n<li>-W posix<br>打开兼容模式。但有以下限制，不识别：&#x2F;x、函数关键字、func、换码序列以及当fs是一个空格时，将新行作为一个域分隔符；操作符<strong>和</strong>&#x3D;不能代替^和^&#x3D;；fflush无效。</li>\n<li>-W re-interval or –re-inerval<br>允许间隔正则表达式的使用，参考(grep中的Posix字符类)，如括号表达式[[:alpha:]]。</li>\n<li>-W source program-text or –source program-text<br>使用program-text作为源代码，可与-f命令混用。</li>\n<li>-W version or –version<br>打印bug报告信息的版本</li>\n</ul>\n<p>以上是菜鸟教程官方文档</p>\n<p>实际应用中可以记下面这些使用频率高的操作</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230423194942131.png\" alt=\"image-20230423194942131\"></p>\n<p>查看第一列的内容 (awk的默认分隔符是空格) : <code>cat test | awk &#39;&#123;print($1)&#125;&#39;</code></p>\n<p>查看第一列和第三列的内容: <code>cat test | awk &#39;&#123;print($1,$3)&#125;</code></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230423194923877.png\" alt=\"image-20230423194923877\"></p>\n<p>在第一列和第三列查出的结果中加上自定义的符号: <code>cat test | awk &#39;&#123;print($1&quot;:&quot;$3)&#125;&#39;</code></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230423195419205.png\" alt=\"image-20230423195419205\"></p>\n<p>在第一列和第三列查出的结果中加上自定义的符号,其中,表示空格: <code>cat test | awk &#39;&#123;print($1,&quot;:&quot;,$3,&quot;!&quot;)&#125;&#39;</code></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230423195140725.png\" alt=\"image-20230423195140725\"></p>\n<p>指定自定的分隔符: <code>cat /etc/passwd | awk -F &quot;:&quot; &#39;&#123;print($1)&#125;&#39;</code></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230423195733258.png\" alt=\"image-20230423195733258\"></p>\n<h3 id=\"sed\"><a href=\"#sed\" class=\"headerlink\" title=\"sed\"></a>sed</h3><p>Linux sed 命令是利用脚本来处理文本文件。</p>\n<p>sed 可依照脚本的指令来处理、编辑文本文件。</p>\n<p>Sed 主要用来自动编辑一个或多个文件、简化对文件的反复操作、编写转换程序等。</p>\n<p>语法:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sed [-hnV][-e&lt;script&gt;][-f&lt;script文件&gt;][文本文件]</code></pre>\n\n<p>参数:</p>\n<ul>\n<li>-e&lt; script &gt;或–expression&#x3D;&lt; script &gt; 以选项中指定的script来处理输入的文本文件。</li>\n<li>-f&lt;script文件&gt;或–file&#x3D;&lt;script文件&gt; 以选项中指定的script文件来处理输入的文本文件。</li>\n<li>-h或–help 显示帮助。</li>\n<li>-n或–quiet或–silent 仅显示script处理后的结果。</li>\n<li>-V或–version 显示版本信息。</li>\n</ul>\n<p>动作说明:</p>\n<ul>\n<li>a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～</li>\n<li>c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！</li>\n<li>d ：删除，因为是删除啊，所以 d 后面通常不接任何东东；</li>\n<li>i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；</li>\n<li>p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～</li>\n<li>s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正则表达式！例如 1,20s&#x2F;old&#x2F;new&#x2F;g 就是啦！</li>\n</ul>\n<p>护网中常用操作:</p>\n<p>替换操作</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230423200144577.png\" alt=\"image-20230423200144577\"></p>\n<p>其中,&#x2F;可以用#替换</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230423200251940.png\" alt=\"image-20230423200251940\"></p>\n<p><code>cat ip.txt |sed &#39;s#^#http://#g&#39;</code>在每行之前加上http:&#x2F;&#x2F;</p>\n<p><code>cat ip.txt |sed &#39;s#$#:8080#g&#39;</code>在每行末尾加上“:8080”</p>\n<h3 id=\"grep\"><a href=\"#grep\" class=\"headerlink\" title=\"grep\"></a>grep</h3><p>Linux grep (global regular expression) 命令用于查找文件里符合条件的字符串或正则表达式。</p>\n<p>grep 指令用于查找内容包含指定的范本样式的文件，如果发现某文件的内容符合所指定的范本样式，预设 grep 指令会把含有范本样式的那一列显示出来。若不指定任何文件名称，或是所给予的文件名为 **-**，则 grep 指令会从标准输入设备读取数据。</p>\n<p>语法:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">grep [options] pattern [files]</code></pre>\n\n<ul>\n<li>pattern - 表示要查找的字符串或正则表达式。</li>\n<li>files - 表示要查找的文件名，可以同时查找多个文件，如果省略 files 参数，则默认从标准输入中读取数据。</li>\n</ul>\n<p>选项:</p>\n<ul>\n<li><code>-i</code>：忽略大小写进行匹配。</li>\n<li><code>-v</code>：反向查找，只打印不匹配的行。</li>\n<li><code>-n</code>：显示匹配行的行号。</li>\n<li><code>-r</code>：递归查找子目录中的文件。</li>\n<li><code>-l</code>：只打印匹配的文件名。</li>\n<li><code>-c</code>：只打印匹配的行数。</li>\n</ul>\n<p>护网常用:</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230423201136953.png\" alt=\"image-20230423201136953\"></p>\n<p>cat passwd |grep aaa</p>\n<p>cat passwd |grep -v aaa</p>\n<p>cat passwd |grep -E “root|aaaa”</p>\n<p>查找uid&#x3D;0的用户: <code>cat /etc/passwd | grep x:0: | awk -F &quot;:&quot; &#39;&#123;print(#1)&#125;&#39;</code></p>\n<h3 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h3><p>Linux find 命令用于在指定目录下查找文件和目录。</p>\n<p>它可以使用不同的选项来过滤和限制查找的结果。</p>\n<p>语法:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find [path] [expression]</code></pre>\n\n<p>参数说明:</p>\n<p><strong>path</strong> 是要查找的目录路径，可以是一个目录或文件名，也可以是多个路径，多个路径之间用空格分隔，如果未指定路径，则默认为当前目录。</p>\n<p><strong>expression</strong> 是可选参数，用于指定查找的条件，可以是文件名、文件类型、文件大小等等。</p>\n<p>expression 中可使用的选项有二三十个之多，以下列出最常用的部份：</p>\n<ul>\n<li><code>-name pattern</code>：按文件名查找，支持使用通配符 <code>*</code> 和 <code>?</code>。</li>\n<li><code>-type type</code>：按文件类型查找，可以是 <code>f</code>（普通文件）、<code>d</code>（目录）、<code>l</code>（符号链接）等。</li>\n<li><code>-size [+-]size[cwbkMG]</code>：按文件大小查找，支持使用 <code>+</code> 或 <code>-</code> 表示大于或小于指定大小，单位可以是 <code>c</code>（字节）、<code>w</code>（字数）、<code>b</code>（块数）、<code>k</code>（KB）、<code>M</code>（MB）或 <code>G</code>（GB）。</li>\n<li><code>-mtime days</code>：按修改时间查找，支持使用 <code>+</code> 或 <code>-</code> 表示在指定天数前或后，days 是一个整数表示天数。</li>\n<li><code>-user username</code>：按文件所有者查找。</li>\n<li><code>-group groupname</code>：按文件所属组查找。</li>\n</ul>\n<p>find 命令中用于时间的参数如下：</p>\n<ul>\n<li><code>-amin n</code>：查找在 n 分钟内被访问过的文件。</li>\n<li><code>-atime n</code>：查找在 n*24 小时内被访问过的文件。</li>\n<li><code>-cmin n</code>：查找在 n 分钟内状态发生变化的文件（例如权限）。</li>\n<li><code>-ctime n</code>：查找在 n*24 小时内状态发生变化的文件（例如权限）。</li>\n<li><code>-mmin n</code>：查找在 n 分钟内被修改过的文件。</li>\n<li><code>-mtime n</code>：查找在 n*24 小时内被修改过的文件。</li>\n</ul>\n<p>在这些参数中，n 可以是一个正数、负数或零。正数表示在指定的时间内修改或访问过的文件，负数表示在指定的时间之前修改或访问过的文件，零表示在当前时间点上修改或访问过的文件。</p>\n<p>例如：**-mtime 0** 表示查找今天修改过的文件，**-mtime -7** 表示查找一周以前修改过的文件。</p>\n<p>实例:</p>\n<p>查找当前目录下名为 file.txt 的文件：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">find . -name file.txt</code></pre>\n\n<p>将当前目录及其子目录下所有文件后缀为 <strong>.c</strong> 的文件列出来:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># find . -name &quot;*.c&quot;</code></pre>\n\n<p>将当前目录及其子目录中的所有文件列出：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># find . -type f</code></pre>\n\n<p>查找当前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># find . -type f -perm 644 -exec ls -l &#123;&#125; \\;</code></pre>\n\n","text":"前言记录一下最近学到的在护网中蓝队必备的，以及一些能提高工作效率的Linux命令 必备篇mkdir这个自然不必多说了 mkdir命令用于创建目录 参数 -p 创建多级目录,若目录不存在则新建一个 mkdir -p hvv&#x2F;blue lsls用于限制指定目录下的内容 参数...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":20,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"蓝队","slug":"蓝队","count":2,"path":"api/tags/蓝队.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BF%85%E5%A4%87%E7%AF%87\"><span class=\"toc-text\">必备篇</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mkdir\"><span class=\"toc-text\">mkdir</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ls\"><span class=\"toc-text\">ls</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tail\"><span class=\"toc-text\">tail</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ps\"><span class=\"toc-text\">ps</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#netstat\"><span class=\"toc-text\">netstat</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lsof\"><span class=\"toc-text\">lsof</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#kill\"><span class=\"toc-text\">kill</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">计划任务</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">开机自动执行命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E8%AF%95%E9%A2%98\"><span class=\"toc-text\">面试题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%94%A8%E7%AF%87\"><span class=\"toc-text\">实用篇</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#awk\"><span class=\"toc-text\">awk</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sed\"><span class=\"toc-text\">sed</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#grep\"><span class=\"toc-text\">grep</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#find\"><span class=\"toc-text\">find</span></a></li></ol></li></ol>","author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Linux操作系统安装与初始化-klsday1","uid":"1ba43bdcc650ffe3bf369917c92785d4","slug":"klsday1-Linux","date":"2023-05-11T01:03:45.132Z","updated":"2023-05-11T14:12:29.862Z","comments":true,"path":"api/articles/klsday1-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-l8yj8p.png","text":" Linux发行版 查看系统内核 unamne -r [abyssaler@centos7kls-aby ~]$ uname -r 3.10.0-1160.el7.x86_64 uname -a 看的信息更全面 [abyssaler@centos7kls-aby ~]$ unam...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":20,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":8,"path":"api/tags/kls.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}},"next_post":{"title":"应急响应-常用网站入侵检测排查方法","uid":"f09daecde61dd0567d4f8c1d9b7eec55","slug":"应急响应-常用网站入侵检测排查方法","date":"2023-04-18T03:04:02.775Z","updated":"2023-04-19T02:34:15.181Z","comments":true,"path":"api/articles/应急响应-常用网站入侵检测排查方法.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-p9o7o9.png","text":"前言​ 之前学习过程中，重点都是放在了web渗透和攻击这一块，觉得防御的内容不是太重要，但是最近一段时间求职的经历和自己了解到的一些情况告诉我，蓝队的内容同样重要，想要真正进入这个行业，不是会几个漏洞，掌握一些工具的使用就可以的，需要的是全面的发展。故给自己开个新坑，专门学习蓝队...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":20,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"蓝队","slug":"蓝队","count":2,"path":"api/tags/蓝队.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}}}