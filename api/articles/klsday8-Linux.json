{"title":"Linux-Shell脚本应用-klsday8","uid":"51f59f2591b85dbbff00c606d35a67d4","slug":"klsday8-Linux","date":"2023-05-24T01:32:40.926Z","updated":"2023-05-25T08:52:13.474Z","comments":true,"path":"api/articles/klsday8-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-xllp6l.jpg","content":"<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525085752013.png\" alt=\"image-20230525085752013\"></p>\n<h2 id=\"shell脚本应用（一）\"><a href=\"#shell脚本应用（一）\" class=\"headerlink\" title=\"shell脚本应用（一）\"></a>shell脚本应用（一）</h2><h3 id=\"shell脚本简单介绍\"><a href=\"#shell脚本简单介绍\" class=\"headerlink\" title=\"shell脚本简单介绍\"></a>shell脚本简单介绍</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525085806707.png\" alt=\"image-20230525085806707\"></p>\n<p><code>bash</code> 和 <code>shell</code> 是密切相关的概念。 <code>shell</code> 是指一种操作系统的命令行解释器，它充当用户与操作系统内核之间的接口。而 <code>bash</code> (Bourne-Again SHell) 则是一种 Unix&#x2F;Linux 操作系统下常见的 <code>shell</code>，是由 Brian Fox 开发的基于 Bourne shell (sh) 的免费软件，它在 GNU 项目中被广泛使用。</p>\n<p>也就是说，<code>bash</code> 实际上是 <code>shell</code> 的一种类型。除了 <code>bash</code>，还有其他一些类似的 shell，如 Korn shell (ksh)、C shell (csh) 等等。每种 shell 都有其特定的功能和语法规则，但它们都提供了与操作系统交互的能力，让用户能够通过命令行执行各种系统操作。</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525085812745.png\" alt=\"image-20230525085812745\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525090217315.png\" alt=\"image-20230525090217315\"></p>\n<h3 id=\"编辑shell脚本\"><a href=\"#编辑shell脚本\" class=\"headerlink\" title=\"编辑shell脚本\"></a>编辑shell脚本</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525090358407.png\" alt=\"image-20230525090358407\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525090949154.png\" alt=\"image-20230525090949154\"></p>\n<p><code>cat /etc/shells</code>查看有哪些shell</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@mycentos ~]# cat &#x2F;etc&#x2F;shells \n&#x2F;bin&#x2F;sh\n&#x2F;bin&#x2F;bash\n&#x2F;usr&#x2F;bin&#x2F;sh\n&#x2F;usr&#x2F;bin&#x2F;bash</code></pre>\n\n<p>shell脚本简单来说就是Linux命令的集合</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525091245646.png\" alt=\"image-20230525091245646\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@mycentos ~]# vi test.sh\n\ncd &#x2F;boot\npwd\nls -lh vml*z*\n\n:wq\n\n[root@mycentos ~]# chmod +x test.sh \n[root@mycentos ~]# .&#x2F;test.sh \n&#x2F;boot\n-rwxr-xr-x. 1 root root 6.5M Jan 11 01:19 vmlinuz-0-rescue-6e0c175a601b41af83146bb0b889fbf9\n-rwxr-xr-x. 1 root root 6.8M May  4 23:25 vmlinuz-3.10.0-1160.90.1.el7.x86_64\n-rwxr-xr-x. 1 root root 6.5M Oct 20  2020 vmlinuz-3.10.0-1160.el7.x86_64\n[root@mycentos ~]# </code></pre>\n\n<ul>\n<li><code>bash -v</code>：该命令会打印出 bash 中执行的每一个命令行语句，以及执行时的参数和结果。这在调试或排查脚本错误时非常有用，可以帮助用户快速定位问题所在。</li>\n<li><code>bash -x</code>：该命令也可以用于调试 shell 脚本。它会在执行脚本时，打印出所执行的每一条命令，并在左侧添加一个“+”号，表示该命令正在被执行。同时，它还会将所有变量的值打印出来。这个命令可以帮助用户快速找到脚本的问题所在。</li>\n<li><code>bash -n</code>：该命令会检查 shell 脚本是否有语法错误，而不会真正执行该脚本。如果脚本存在语法错误，bash 会显示错误信息并指示错误发生的位置。这个命令可以让用户在执行脚本之前对其进行检查，避免因语法错误导致脚本无法正常执行。</li>\n</ul>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525092158225.png\" alt=\"image-20230525092158225\"></p>\n<p>在 <code>#!</code> 之后指定解释器路径，告诉操作系统该脚本使用哪个解释器来执行。在 <code>#!/bin/bash</code> 中，<code>#!</code> 表示解释器指令的开始，<code>/bin/bash</code> 指出了该脚本文件需要用到的解释器路径为 <code>/bin/bash</code>。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@mycentos ~]# vi test.sh\n\n#!&#x2F;bin&#x2F;bash\ncd &#x2F;boot\necho &quot;当前目录为:&quot;\npwd\necho &quot;其中以vml开头的文件包括：&quot;\nls -lh vml*z*\n\n[root@mycentos ~]# .&#x2F;test.sh \n当前目录为:\n&#x2F;boot\n其中以vml开头的文件包括：\n-rwxr-xr-x. 1 root root 6.5M Jan 11 01:19 vmlinuz-0-rescue-6e0c175a601b41af83146bb0b889fbf9\n-rwxr-xr-x. 1 root root 6.8M May  4 23:25 vmlinuz-3.10.0-1160.90.1.el7.x86_64\n-rwxr-xr-x. 1 root root 6.5M Oct 20  2020 vmlinuz-3.10.0-1160.el7.x86_64\n[root@mycentos ~]# </code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525093327835.png\" alt=\"image-20230525093327835\"></p>\n<h3 id=\"重定向与管道操作\"><a href=\"#重定向与管道操作\" class=\"headerlink\" title=\"重定向与管道操作\"></a>重定向与管道操作</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525093557290.png\" alt=\"image-20230525093557290\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525093856840.png\" alt=\"image-20230525093856840\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">shell脚本配置yum源\n[root@mycentos ~]# sudo touch &#x2F;etc&#x2F;yum.repos.d&#x2F;myrepo.repo\n[root@mycentos ~]# sudo vi &#x2F;etc&#x2F;yum.repos.d&#x2F;myrepo.repo\n\n[myrepo]\nname&#x3D;My Custom Repository\nbaseurl&#x3D;http:&#x2F;&#x2F;example.com&#x2F;yum-repo&#x2F;\nenabled&#x3D;1\ngpgcheck&#x3D;0\n:wq\n[root@mycentos ~]# sudo yum clean all\n[root@mycentos ~]# sudo yum update</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525100150987.png\" alt=\"image-20230525100150987\"></p>\n<h3 id=\"shell变量的作用，类型\"><a href=\"#shell变量的作用，类型\" class=\"headerlink\" title=\"shell变量的作用，类型\"></a>shell变量的作用，类型</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525100344634.png\" alt=\"image-20230525100344634\"></p>\n<h4 id=\"自定义变量\"><a href=\"#自定义变量\" class=\"headerlink\" title=\"自定义变量\"></a>自定义变量</h4><h5 id=\"定义变量\"><a href=\"#定义变量\" class=\"headerlink\" title=\"定义变量\"></a>定义变量</h5><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525100413792.png\" alt=\"image-20230525100413792\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">如何查询我定义的变量名是否和系统的关键字冲突:\n\n查看系统保留关键字列表：在 bash shell 中，可以通过 help 命令或 man 命令来查看系统保留关键字列表。例如，在终端中输入 help 或 man bash，然后找到“SHELL GRAMMAR”一节，其中包含了 bash shell 中的保留关键字列表。\n\n查询现有变量：在 bash shell 中，可以使用 declare -p 命令来查询现有变量和其定义信息。如果您想要定义一个新的变量，可以先查询现有变量以避免与其重名</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">使用变量临时修改IP地址\n#!&#x2F;bin&#x2F;bash\nIP&#x3D;192.168.2.100\nipconfig ens33 $IP</code></pre>\n\n<h5 id=\"引号\"><a href=\"#引号\" class=\"headerlink\" title=\"引号\"></a>引号</h5><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525101243691.png\" alt=\"image-20230525101243691\"></p>\n<p>在 Linux 中，为变量赋值时使用双引号、单引号和反引号的区别如下：</p>\n<ul>\n<li>双引号 (“”)：双引号用于对变量进行扩展。在双引号内部，可以使用美元符号 <code>$</code> 将变量扩展为其值，也可以使用反斜线字符 <code>\\</code> 将特殊字符进行转义。例如，<code>VAR=&quot;hello $USER&quot;</code>，其中 <code>$USER</code> 会被扩展为当前用户的用户名。</li>\n<li>单引号 (‘’)：单引号用于完全禁止字符串扩展。在单引号内部，所有的特殊字符都会失去其特殊意义，包括美元符号和反斜线等。因此，单引号的字符串中不能包含变量或者变量扩展。例如，<code>VAR=&#39;hello $USER&#39;</code>，<code>$USER</code> 不会被扩展为其值。</li>\n<li>反引号（``）：反引号用于执行命令并将其输出结果作为字符串赋值给变量。例如，VAR&#x3D;`date` ，将当前日期和时间赋值给 <code>VAR</code> 变量。</li>\n</ul>\n<p>需要注意的是，反引号已经被弃用，建议改用 <code>$()</code> 代替。例如，<code>VAR=$(date)</code> 可以将当前日期和时间赋值给 <code>VAR</code> 变量。</p>\n<p>在一条命令中，被反引号引起来的部分会被优先执行</p>\n<p>read命令：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525101914809.png\" alt=\"image-20230525101914809\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525101935039.png\" alt=\"image-20230525101935039\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525101952195.png\" alt=\"image-20230525101952195\"></p>\n<p><code>read</code> 命令用于从标准输入或者其他文件描述符读取一行并赋值给一个或多个变量。</p>\n<h5 id=\"作用范围\"><a href=\"#作用范围\" class=\"headerlink\" title=\"作用范围\"></a>作用范围</h5><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525102523267.png\" alt=\"image-20230525102523267\"></p>\n<p>设置全局变量</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525102452237.png\" alt=\"image-20230525102452237\"></p>\n<h5 id=\"变量的运算\"><a href=\"#变量的运算\" class=\"headerlink\" title=\"变量的运算\"></a>变量的运算</h5><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525102555588.png\" alt=\"image-20230525102555588\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525103102646.png\" alt=\"image-20230525103102646\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525103127260.png\" alt=\"image-20230525103127260\"></p>\n<h4 id=\"特殊变量\"><a href=\"#特殊变量\" class=\"headerlink\" title=\"特殊变量\"></a>特殊变量</h4><h5 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h5><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525103346829.png\" alt=\"image-20230525103346829\"></p>\n<h5 id=\"位置变量\"><a href=\"#位置变量\" class=\"headerlink\" title=\"位置变量\"></a>位置变量</h5><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525103913166.png\" alt=\"image-20230525103913166\"></p>\n<p>例子：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525104005921.png\" alt=\"image-20230525104005921\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525104105414.png\" alt=\"image-20230525104105414\"></p>\n<h5 id=\"预定义变量\"><a href=\"#预定义变量\" class=\"headerlink\" title=\"预定义变量\"></a>预定义变量</h5><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525104149480.png\" alt=\"image-20230525104149480\"></p>\n<p>例子：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525104309259.png\" alt=\"image-20230525104309259\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525105910901.png\" alt=\"image-20230525105910901\"></p>\n<p>例子2：借助$*变量来实现压缩</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525110653663.png\" alt=\"image-20230525110653663\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525110711475.png\" alt=\"image-20230525110711475\"></p>\n<h3 id=\"利用shell脚本配置DHCP服务器\"><a href=\"#利用shell脚本配置DHCP服务器\" class=\"headerlink\" title=\"利用shell脚本配置DHCP服务器\"></a>利用shell脚本配置DHCP服务器</h3><p>要求不允许使用vim修改配置文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\nIP&#x3D;&#96;ifconfig eth0 | grep inet | grep -v inet6 | awk &#39;&#123;print $2&#125;&#39;&#96;\numount &#x2F;dev&#x2F;sr0\nmount &#x2F;dev&#x2F;sr0 &#x2F;mnt\nrm -fr &#x2F;etc&#x2F;yum.repos.d&#x2F;*\necho &quot;[test]&quot; &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;test.repo\necho &quot;name&#x3D;test&quot; &gt;&gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;test.repo\necho &quot;enabled&#x3D;1&quot; &gt;&gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;test.repo\necho &quot;gpgcheck&#x3D;0&quot; &gt;&gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;test.repo\necho &quot;baseurl&#x3D;file:&#x2F;&#x2F;&#x2F;mnt&quot; &gt;&gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;test.repo\nyum clean all\nyum install dhcp* -y\necho &quot;your ip address is $IP please input your dhcp configure&quot;\necho &quot;please stand by&quot;\nsleep 3\nread -p &quot;sbunet: &quot; NET\nread -p &quot;netmask: &quot; NETMASK\nread -p &quot;fangefir: &quot; FIRRANGE\nread -p &quot;rangesed: &quot; SECRANGE\nread -p &quot;dns1: &quot; DNS1\nread -p &quot;dns2: &quot; DNS2\nread -p &quot;gateway: &quot; GATEWAY\necho &quot;subnet $NET netmask $NETMASK &#123;&quot; &gt; &#x2F;etc&#x2F;dhcp&#x2F;dhcpd.conf\necho &quot;range $FIRRANGE $SEDRANGE;&quot; &gt;&gt; &#x2F;etc&#x2F;dhcp&#x2F;dhcpd.conf\necho &quot;option domain-name-servers $DNS1,$DNS2;&quot; &gt;&gt; &#x2F;etc&#x2F;dhcp&#x2F;dhcpd.conf\necho &quot;option routers $GATEWAY;&quot; &gt;&gt; &#x2F;etc&#x2F;dhcp&#x2F;dhcpd.conf\necho &quot;default-lease-time 600;&quot; &gt;&gt; &#x2F;etc&#x2F;dhcp&#x2F;dhcpd.conf\necho &quot;max-lease-time 7200;&quot; &gt;&gt; &#x2F;etc&#x2F;dhcp&#x2F;dhcpd.conf\necho &quot;&#125;&quot; &gt;&gt; &#x2F;etc&#x2F;dhcp&#x2F;dhcpd.conf\nsystemctl restart dhcpd\nunset IP NET NETMASK FIRRANGE SECRANGE DNS1 DNS2 GATEWAY</code></pre>\n\n<h3 id=\"shell脚本与计划任务\"><a href=\"#shell脚本与计划任务\" class=\"headerlink\" title=\"shell脚本与计划任务\"></a>shell脚本与计划任务</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525131923058.png\" alt=\"image-20230525131923058\"></p>\n<h2 id=\"shell脚本应用（二）\"><a href=\"#shell脚本应用（二）\" class=\"headerlink\" title=\"shell脚本应用（二）\"></a>shell脚本应用（二）</h2><h3 id=\"test\"><a href=\"#test\" class=\"headerlink\" title=\"test\"></a>test</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525132224925.png\" alt=\"image-20230525132224925\"></p>\n<p><strong>0为真，非0为假</strong></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525132236601.png\" alt=\"image-20230525132236601\"></p>\n<p>补充：</p>\n<p><code>-o</code>：或运算，两个条件中有一个为真即为真；</p>\n<p><code>-a</code>：与运算，同真为真</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@mycentos ~]# [ -d &#x2F;etc ]\n[root@mycentos ~]# echo $? \n0\n[root@mycentos ~]# [ -f &#x2F;root&#x2F;test.sh ]\n[root@mycentos ~]# echo $? \n0\n[root@mycentos ~]# [ -f &#x2F;root&#x2F;test.sh -o -d &#x2F;tsa ]\n[root@mycentos ~]# echo $? \n0\n[root@mycentos ~]# [ -f &#x2F;root&#x2F;test.sh -a -d &#x2F;tsa ]\n[root@mycentos ~]# echo $? \n1</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525132709792.png\" alt=\"image-20230525132709792\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525133053627.png\" alt=\"image-20230525133053627\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525134013251.png\" alt=\"image-20230525134013251\"></p>\n<p>补充：<code>-n</code>：判断字符串内容是否为非空</p>\n<h3 id=\"if\"><a href=\"#if\" class=\"headerlink\" title=\"if\"></a>if</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525134334259.png\" alt=\"image-20230525134334259\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525134644201.png\" alt=\"image-20230525134644201\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525135201946.png\" alt=\"image-20230525135201946\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525135644905.png\" alt=\"image-20230525135644905\"></p>\n<h2 id=\"shell脚本应用（三）\"><a href=\"#shell脚本应用（三）\" class=\"headerlink\" title=\"shell脚本应用（三）\"></a>shell脚本应用（三）</h2><h3 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"for\"></a>for</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525135856721.png\" alt=\"image-20230525135856721\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525140101492.png\" alt=\"image-20230525140101492\"></p>\n<p>使用命令不按回车更新密码</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525140211330.png\" alt=\"image-20230525140211330\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">echo &quot;132456&quot; | passwd --stdin test:\n\n第一部分是 echo &quot;132456&quot;，它输出了字符串 &quot;132456&quot; 到标准输出（终端）上。\n\n第二部分是 passwd --stdin test，它从标准输入（stdin）中读取数据，并将其作为用户名为 &quot;test&quot; 的用户的新密码。其中，--stdin 选项告诉 passwd 命令从标准输入中读取密码，而不是要求用户手动输入。</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">示例一：\n[root@mycentos ~]# vim user.txt \n[root@mycentos ~]# vim user.sh\n\n#!&#x2F;bin&#x2F;bash\nfor i in &#96;cat &#x2F;root&#x2F;user.txt&#96;\ndo\n        useradd $i\n        echo &quot;123456&quot; | passwd --stdin $1 &amp;&gt; &#x2F;dev&#x2F;null\ndone\n:wq\n[root@mycentos ~]# sh &#x2F;root&#x2F;user.sh \n[root@mycentos ~]# cat &#x2F;etc&#x2F;passwd | grep hack\nhack1:x:1001:1001::&#x2F;home&#x2F;hack1:&#x2F;bin&#x2F;bash\nhack2:x:1002:1002::&#x2F;home&#x2F;hack2:&#x2F;bin&#x2F;bash</code></pre>\n\n<p>示例二：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525141824546.png\" alt=\"image-20230525141824546\"></p>\n<h3 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525141920413.png\" alt=\"image-20230525141920413\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">输出1-100\n#!&#x2F;bin&#x2F;bash\ni&#x3D;1\nwhile [ $i -le 100 ]\ndo\n\techo $i &gt;&gt; &#x2F;root&#x2F;adc.txt\n\tlet i++\ndone</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525144010274.png\" alt=\"image-20230525144010274\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">示例1：\n#!&#x2F;bin&#x2F;bash\ni&#x3D;1\nwhile [ $i -le 20 ]\ndo\n\tuseradd stu$i\n\techo &quot;123456&quot; | passwd --stdin stu$i &amp;&gt; &#x2F;dev&#x2F;null\n\tlet i++\ndone</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">示例2：\n#!&#x2F;bin&#x2F;bash\ni&#x3D;0\njiage&#x3D;&#96;expr $RANDOM % 1000&#96;\nwhile ture\ndo\n\tlet i++\n\tread -p &quot;input your price 0-999:&quot; price\n\tif [ $price -eq $jiage ]\n\tthen\n\t\techo &quot;congratulation guess right, 一共猜了$i次，价格是$price&quot;\n\t\telif [ $price -gt $jiage ]\n\t\tthen\n\t\t\techo &quot;more&quot;\n\t\telse\n\t\t\techo &quot;less&quot;\n\t\tfi\ndone</code></pre>\n\n<h3 id=\"case\"><a href=\"#case\" class=\"headerlink\" title=\"case\"></a>case</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525150411259.png\" alt=\"image-20230525150411259\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525150430926.png\" alt=\"image-20230525150430926\"></p>\n<p>举个例子：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525150757781.png\" alt=\"image-20230525150757781\"></p>\n<p>练习题：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525150947960.png\" alt=\"image-20230525150947960\"></p>\n<p>示例1：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525151208340.png\" alt=\"image-20230525151208340\"></p>\n<p>示例2：</p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525151258231.png\" alt=\"image-20230525151258231\"></p>\n<h2 id=\"shell脚本应用（四）\"><a href=\"#shell脚本应用（四）\" class=\"headerlink\" title=\"shell脚本应用（四）\"></a>shell脚本应用（四）</h2><h3 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h3><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525152148466.png\" alt=\"image-20230525152148466\"></p>\n<h4 id=\"基础正则表达式\"><a href=\"#基础正则表达式\" class=\"headerlink\" title=\"基础正则表达式\"></a>基础正则表达式</h4><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525152241310.png\" alt=\"image-20230525152241310\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">^  以什么开头 ^help\n$  以什么结尾 help$\n.  单个任意字符\n\\  转义             如果本来就想匹配.，那要先转义    \\** 左边乘号，右边正则\n*  匹配左侧表达式0个或任意个 ip*           可以匹配 i   ip   ipp\n+          匹配到左侧表达式1个或者任意个（扩展正则）ip+  ip ipp，不可能匹配到i\n[]  范围选择匹配选择符，匹配信息不再是任意，匹配集合中的   f[a|b|c]d    fad fbd fcd 匹配其中一个\n[x-y]  匹配结合范围内的                [a-z] [0-9] [A-Z]      ^[a-zA-Z] 以字母开头，符号不要写里面\n[^]  匹配不在集合范围内的     ^[^0-9] 不能以数字开头\n&#123;&#125;   匹配左侧表达式的个数，&#123;&#125;需要在shell中转义\n[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+  可以把除了数字的字符都筛出去，但是没有办法控制数字的个数\n\\&#123;3\\&#125; 匹配左侧表达式3个      6\\&#123;3\\&#125; 666\n\\&#123;3,\\&#125; 匹配左侧表达式3个或者任意个     6\\&#123;3,\\&#125;    666  66666\n\\&#123;1,3\\&#125;   匹配左侧表达式 ，最少出现1次，最多出现3次    6 66 666</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525153151493.png\" alt=\"image-20230525153151493\"></p>\n<h4 id=\"扩展正则表达式\"><a href=\"#扩展正则表达式\" class=\"headerlink\" title=\"扩展正则表达式\"></a>扩展正则表达式</h4><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525153444472.png\" alt=\"image-20230525153444472\"></p>\n<h3 id=\"文本处理器\"><a href=\"#文本处理器\" class=\"headerlink\" title=\"文本处理器\"></a>文本处理器</h3><h4 id=\"sed\"><a href=\"#sed\" class=\"headerlink\" title=\"sed\"></a>sed</h4><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525153656710.png\" alt=\"image-20230525153656710\"></p>\n<p>Linux sed 命令是利用脚本来处理文本文件。</p>\n<p>sed 可依照脚本的指令来处理、编辑文本文件。</p>\n<p>Sed 主要用来自动编辑一个或多个文件、简化对文件的反复操作、编写转换程序等。</p>\n<p><strong>参数说明</strong>：</p>\n<ul>\n<li>-e&lt; script &gt;或–expression&#x3D;&lt; script &gt; 以选项中指定的script来处理输入的文本文件。</li>\n<li>-f&lt;script文件&gt;或–file&#x3D;&lt;script文件&gt; 以选项中指定的script文件来处理输入的文本文件。</li>\n<li>-h或–help 显示帮助。</li>\n<li>-n或–quiet或–silent 仅显示script处理后的结果。</li>\n<li>-V或–version 显示版本信息。</li>\n</ul>\n<p><strong>动作说明</strong>：</p>\n<ul>\n<li>a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)</li>\n<li>c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行</li>\n<li>d ：删除，因为是删除啊，所以 d 后面通常不接任何东西；</li>\n<li>i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；</li>\n<li>p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行</li>\n<li>s ：取代，可以直接进行取代的工作，通常这个 s 的动作可以搭配正则表达式</li>\n</ul>\n<p>示例</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sed的查找与替换的与 vi 命令类似，语法格式如下：\nsed &#39;s&#x2F;要被取代的字串&#x2F;新的字串&#x2F;g&#39;\n\n将testfile文件中每行第一次出现的 oo 用字符串 kk 替换，然后将该文件内容输出到标准输出:\nsed -e &#39;s&#x2F;oo&#x2F;kk&#x2F;&#39; testfile\n\ng标识符表示全局查找替换，使 sed 对文件中所有符合的字符串都被替换，修改后内容会到标准输出，不会修改原文件：\nsed -e &#39;s&#x2F;oo&#x2F;kk&#x2F;g&#39; testfile\n\n选项i使sed修改文件:\nsed -i &#39;s&#x2F;oo&#x2F;kk&#x2F;g&#39; testfile\n\n批量操作当前目录下以test开头的文件：\nsed -i &#39;s&#x2F;oo&#x2F;kk&#x2F;g&#39; .&#x2F;test*</code></pre>\n\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525162237833.png\" alt=\"image-20230525162237833\"></p>\n<h4 id=\"awk\"><a href=\"#awk\" class=\"headerlink\" title=\"awk\"></a>awk</h4><p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525162311095.png\" alt=\"image-20230525162311095\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525162334447.png\" alt=\"image-20230525162334447\"></p>\n<p><img src=\"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/image-20230525162412358.png\" alt=\"image-20230525162412358\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-e\necho &#39;hello world&#39; | sed -e &#39;s&#x2F;hello&#x2F;A&#x2F;&#39; -e &#39;s&#x2F;world&#x2F;B&#x2F;&#39;\n\n-f\necho &quot;hello world&quot; | sed -f sed.script\nsed.script内容\ns&#x2F;hello&#x2F;A&#x2F;\ns&#x2F;world&#x2F;B&#x2F;\n\n-n\necho -e &#39;hello world\\nnihao&#39; | sed &#39;s&#x2F;hello&#x2F;A&#x2F;&#39;\necho -e &#39;hello world\\nnihao&#39; | sed -n &#39;s&#x2F;hello&#x2F;A&#x2F;&#39;\n\n-i\nsed -i &#39;s&#x2F;hello&#x2F;ccccc&#x2F; sed.script\n\n\np\nsed -n &#39;&#x2F;north&#x2F;p&#39; ceshi.txt\n\nd\nsed &#39;3d&#39; ceshi.txt\nsed &#39;3,$d&#39; ceshi.txt\nsed &#39;&#x2F;north&#x2F;d&#39; ceshi.txt\n\ns\nsed &#39;s&#x2F;west&#x2F;north&#x2F;g&#39; ceshi.txt\nsed -n &#39;s&#x2F;^west&#x2F;north&#x2F;p&#39; ceshi.txt\n\na\nsed &#39;&#x2F;^north&#x2F;a Hello world!&#39; ceshi.txt     \n\ni\nsed &#39;&#x2F;north&#x2F;i AAAAA&#39; ceshi.txt\n\nc\nsed &#39;&#x2F;north&#x2F;c AAAAA&#39; ceshi.txt \n\ny\nsed &#39;y&#x2F;abc&#x2F;ABC&#x2F;&#39; ceshi.txt \n\n\nFS\t字段分隔符(默认是任何空格)\nNF\t一条记录的字段的数目\nNR\t已经读出的记录数，就是行号，从1开始\n$0\t完整的输入记录\n$n\t当前记录的第n个字段，字段间由FS分隔\nFILENAME\t当前文件名\nRS\t记录分隔符(默认是一个换行符)\n\n\nawk -F: &#39;&#123;print FS,NF,NR,$0,$1,FILENAME,RS&#125;&#39; passwd\nawk -F: &#39;&#123;print FS,NF,NR,$0,$1,FILENAME&#125;&#39; passwd\nawk &#39;NR &#x3D;&#x3D; 1 &#123;print&#125;&#39; passwd\nawk -F: &#39;&#123;print $1,$3,$7&#125;&#39; passwd</code></pre>\n\n","text":" shell脚本应用（一）shell脚本简单介绍 bash 和 shell 是密切相关的概念。 shell 是指一种操作系统的命令行解释器，它充当用户与操作系统内核之间的接口。而 bash (Bourne-Again SHell) 则是一种 Unix&#x2F;Linux 操作系...","link":"","photos":[],"count_time":{"symbolsCount":"9.9k","symbolsTime":"9 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":25,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":12,"path":"api/tags/kls.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#shell%E8%84%9A%E6%9C%AC%E5%BA%94%E7%94%A8%EF%BC%88%E4%B8%80%EF%BC%89\"><span class=\"toc-text\">shell脚本应用（一）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#shell%E8%84%9A%E6%9C%AC%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">shell脚本简单介绍</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%BE%91shell%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">编辑shell脚本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E7%AE%A1%E9%81%93%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">重定向与管道操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#shell%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8%EF%BC%8C%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">shell变量的作用，类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">自定义变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">定义变量</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%BC%95%E5%8F%B7\"><span class=\"toc-text\">引号</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8%E8%8C%83%E5%9B%B4\"><span class=\"toc-text\">作用范围</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">变量的运算</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%AE%8A%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">特殊变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">环境变量</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BD%8D%E7%BD%AE%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">位置变量</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">预定义变量</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8shell%E8%84%9A%E6%9C%AC%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">利用shell脚本配置DHCP服务器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#shell%E8%84%9A%E6%9C%AC%E4%B8%8E%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">shell脚本与计划任务</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#shell%E8%84%9A%E6%9C%AC%E5%BA%94%E7%94%A8%EF%BC%88%E4%BA%8C%EF%BC%89\"><span class=\"toc-text\">shell脚本应用（二）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#test\"><span class=\"toc-text\">test</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#if\"><span class=\"toc-text\">if</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#shell%E8%84%9A%E6%9C%AC%E5%BA%94%E7%94%A8%EF%BC%88%E4%B8%89%EF%BC%89\"><span class=\"toc-text\">shell脚本应用（三）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#for\"><span class=\"toc-text\">for</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#while\"><span class=\"toc-text\">while</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#case\"><span class=\"toc-text\">case</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#shell%E8%84%9A%E6%9C%AC%E5%BA%94%E7%94%A8%EF%BC%88%E5%9B%9B%EF%BC%89\"><span class=\"toc-text\">shell脚本应用（四）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">正则表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">基础正则表达式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%89%A9%E5%B1%95%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">扩展正则表达式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%99%A8\"><span class=\"toc-text\">文本处理器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#sed\"><span class=\"toc-text\">sed</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#awk\"><span class=\"toc-text\">awk</span></a></li></ol></li></ol></li></ol>","author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Linux-iptables防火墙-klsday10","uid":"a83094df2fe1f1931833ffcbbd33f63b","slug":"klsday10-Linux","date":"2023-05-29T00:54:56.229Z","updated":"2023-05-30T14:19:50.864Z","comments":true,"path":"api/articles/klsday10-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-exzzjo.jpg","text":" iptables基础规则 Linux防火墙基础包过滤防火墙概述 iptables其实不是真正的防火墙，更像一个客户端代理，通过客户端代理，将用户需要的安全设定或者说规则添加到对应的安全框架当中，这个安全框架才是真正的防火墙，也就是netfilter netfilter是基于包过...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":25,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":12,"path":"api/tags/kls.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}},"next_post":{"title":"Linux网站服务-klsday7","uid":"3200a6e29852cc67d7326c337a5be9d2","slug":"klsday7-Linux","date":"2023-05-23T01:01:22.776Z","updated":"2023-05-30T14:23:28.004Z","comments":true,"path":"api/articles/klsday7-Linux.json","keywords":null,"cover":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/wallhaven-8x3qk2.jpg","text":" 搭建Apache服务器 Apache简介 编译安装httpd服务器 所有路径都是基于./configure --prefix=/usr指定的 注意，源码安装之前一定要卸载已经安装好的apache 解压 tar fx httpd-2.4.52.tar.gz cd /httpd-2...","link":"","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":25,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"kls","slug":"kls","count":12,"path":"api/tags/kls.json"}],"author":{"name":"Abyssaler","slug":"blog-author","avatar":"https://abyssaler-typora-photobank.oss-cn-chengdu.aliyuncs.com/img_for_typora/Face.jpg","link":"/","description":"道阻且长，行则将至","socials":{"github":"https://github.com/Abyssaler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_45349299","juejin":"","customs":{}}}}}